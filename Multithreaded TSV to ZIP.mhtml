From: <Saved by Blink>
Snapshot-Content-Location: https://chat.openai.com/c/c667b49b-1af9-4b2b-b647-40f1d8a41769
Subject: Multithreaded TSV to ZIP
Date: Thu, 23 Nov 2023 09:22:11 -0600
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----"


------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/html
Content-ID: <frame-8F61E9664F3A3C1D68BA611C52FED189@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chat.openai.com/c/c667b49b-1af9-4b2b-b647-40f1d8a41769

<!DOCTYPE html><html class=3D"dark gizmo" style=3D"color-scheme: dark;" lan=
g=3D"en-US"><head><meta http-equiv=3D"Content-Type" content=3D"text/html; c=
harset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-=
2437623a-71de-4145-bfcd-65daae7f5182@mhtml.blink" /><link rel=3D"stylesheet=
" type=3D"text/css" href=3D"cid:css-d85db212-118b-4923-8d25-4640518d2750@mh=
tml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-cbd=
fb0a6-12ff-4ab5-85d7-f17afd22035f@mhtml.blink" /><link rel=3D"stylesheet" t=
ype=3D"text/css" href=3D"cid:css-1fb7a503-6ad2-4b82-8f49-bd7de8a92a44@mhtml=
.blink" /><link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D"https://=
cdn.oaistatic.com/_next/static/media/apple-touch-icon.59f2e898.png"><link r=
el=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://cdn.oaistati=
c.com/_next/static/media/favicon-32x32.be48395e.png"><link rel=3D"icon" typ=
e=3D"image/png" sizes=3D"16x16" href=3D"https://cdn.oaistatic.com/_next/sta=
tic/media/favicon-16x16.9b8dbb69.png"><link rel=3D"preconnect" href=3D"http=
s://cdn.oaistatic.com/"><meta name=3D"title" content=3D"ChatGPT: Get instan=
t answers, find inspiration, learn something new"><meta name=3D"description=
" content=3D"ChatGPT is a free-to-use AI system. Use it for engaging conver=
sations, gain insights, automate tasks, and witness the future of AI, all i=
n one place."><meta name=3D"keywords" content=3D"ai chat,ai,chap gpt,chat g=
bt,chat gpt 3,chat gpt login,chat gpt website,chat gpt,chat gtp,chat openai=
,chat,chatai,chatbot gpt,chatg,chatgpt login,chatgpt,gpt chat,open ai,opena=
i chat,openai chatgpt,openai"><meta property=3D"og:description" content=3D"=
A conversational AI system that listens, learns, and challenges"><meta name=
=3D"robots" content=3D"index, follow"><meta name=3D"viewport" content=3D"wi=
dth=3Ddevice-width, initial-scale=3D1"><meta property=3D"og:title" content=
=3D"ChatGPT"><meta property=3D"og:image" content=3D"https://cdn.oaistatic.c=
om/_next/static/media/chatgpt-share-og.49cbbffe.png"><meta property=3D"og:u=
rl" content=3D"https://chat.openai.com"><meta name=3D"apple-itunes-app" con=
tent=3D"app-id=3D6448311069"><title>Multithreaded TSV to ZIP</title><meta n=
ame=3D"next-head-count" content=3D"17"><link rel=3D"preload" href=3D"https:=
//cdn.oaistatic.com/_next/static/media/soehne-buch.13189857.woff2" as=3D"fo=
nt" crossorigin=3D""><link rel=3D"preload" href=3D"https://cdn.oaistatic.co=
m/_next/static/media/soehne-halbfett.977f1845.woff2" as=3D"font" crossorigi=
n=3D""><link rel=3D"preload" href=3D"https://cdn.oaistatic.com/_next/static=
/media/soehne-mono-buch.de677af1.woff2" as=3D"font" crossorigin=3D""><link =
rel=3D"preload" href=3D"https://cdn.oaistatic.com/_next/static/media/soehne=
-mono-halbfett.b082e8e2.woff2" as=3D"font" crossorigin=3D""><link data-next=
-font=3D"" rel=3D"preconnect" href=3D"https://chat.openai.com/" crossorigin=
=3D"anonymous"><link rel=3D"preload" href=3D"https://cdn.oaistatic.com/_nex=
t/static/css/53c17921e0c481ce.css" as=3D"style"><link rel=3D"stylesheet" hr=
ef=3D"https://cdn.oaistatic.com/_next/static/css/53c17921e0c481ce.css" data=
-n-g=3D""><meta name=3D"react-scroll-to-bottom:version" content=3D"4.2.0"><=
/head><body class=3D"antialiased"><div id=3D"__next"><div class=3D"relative=
 z-0 flex h-full w-full overflow-hidden"><div class=3D"dark flex-shrink-0 o=
verflow-x-hidden bg-gray-900 gizmo:bg-black" style=3D"width: 260px;"><div c=
lass=3D"h-full w-[260px]"><div class=3D"flex h-full min-h-0 flex-col"><div =
class=3D"flex h-full min-h-0 flex-col transition-opacity opacity-100"><div =
class=3D"scrollbar-trigger relative h-full w-full flex-1 items-start border=
-white/20"><h2 style=3D"position: absolute; border: 0px; width: 1px; height=
: 1px; padding: 0px; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0=
px, 0px); white-space: nowrap; overflow-wrap: normal;">Chat history</h2><na=
v class=3D"flex h-full w-full flex-col p-2 gizmo:px-3 gizmo:pb-3.5 gizmo:pt=
-0" aria-label=3D"Chat history"><div class=3D"absolute left-0 top-14 z-20 o=
verflow-hidden transition-all duration-500 gizmo:top-0 invisible max-h-0"><=
div class=3D"px-3 py-3.5"><div class=3D"pb-0.5 last:pb-0" tabindex=3D"0"><a=
 class=3D"group flex h-10 items-center gap-2 rounded-lg px-2 font-medium ho=
ver:bg-token-surface-primary" href=3D"https://chat.openai.com/"><div class=
=3D"h-7 w-7 flex-shrink-0"><div class=3D"gizmo-shadow-stroke relative flex =
h-full items-center justify-center rounded-full bg-white text-black"><svg w=
idth=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"h-2/3 w-2/3" role=3D"img"><text x=3D"-9999=
" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.=
1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622=
C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40=
259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 =
0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803=
 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7=
6286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 =
12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 =
1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.31=
41C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 3=
5.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9=
208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087=
 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37=
.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.96=
59 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.=
3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.870=
7ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 =
36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.26=
63 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V1=
9.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.97=
7 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.=
2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.392=
27 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 =
5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.9=
02 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1=
103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736=
 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35=
.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29=
707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013=
 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3=
6823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.554=
2L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28=
.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.0671=
6 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM=
31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4=
805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631=
 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.=
6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759=
C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30=
.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.533=
8C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.=
9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 =
10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.=
0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.092=
1 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 2=
6.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59=
508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464=
 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 1=
0.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9=
058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544=
 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.=
1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937=
 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14=
.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.94=
19ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L=
16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div><di=
v class=3D"grow overflow-hidden text-ellipsis whitespace-nowrap text-sm tex=
t-token-text-primary">Clear chat</div><div class=3D"flex gap-3"><span class=
=3D"flex items-center" data-state=3D"closed"><button class=3D"text-token-te=
xt-primary"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.5 2.5C5.05228 2.5 5.5 2.94772 5.=
5 3.5V5.07196C7.19872 3.47759 9.48483 2.5 12 2.5C17.2467 2.5 21.5 6.75329 2=
1.5 12C21.5 17.2467 17.2467 21.5 12 21.5C7.1307 21.5 3.11828 17.8375 2.565 =
13.1164C2.50071 12.5679 2.89327 12.0711 3.4418 12.0068C3.99033 11.9425 4.48=
712 12.3351 4.5514 12.8836C4.98798 16.6089 8.15708 19.5 12 19.5C16.1421 19.=
5 19.5 16.1421 19.5 12C19.5 7.85786 16.1421 4.5 12 4.5C9.7796 4.5 7.7836 5.=
46469 6.40954 7H9C9.55228 7 10 7.44772 10 8C10 8.55228 9.55228 9 9 9H4.5C3.=
96064 9 3.52101 8.57299 3.50073 8.03859C3.49983 8.01771 3.49958 7.99677 3.5=
 7.9758V3.5C3.5 2.94772 3.94771 2.5 4.5 2.5Z" fill=3D"currentColor"></path>=
</svg></button></span></div></a></div></div><div class=3D"bg-gray-900 px-4 =
py-3"><div class=3D"p-1 text-sm text-gray-100">Chat History is off for this=
 browser.</div><div class=3D"p-1 text-xs text-gray-500">When history is tur=
ned off, new chats on this browser won't appear in your history on any of y=
our devices, be used to train our models, or stored for longer than 30 days=
. <strong>This setting does not sync across browsers or devices.</strong> <=
a href=3D"https://help.openai.com/en/articles/7730893" target=3D"_blank" cl=
ass=3D"underline" rel=3D"noreferrer">Learn more</a></div><button class=3D"b=
tn relative btn-primary mt-4 w-full"><div class=3D"flex w-full gap-2 items-=
center justify-center"><svg stroke=3D"currentColor" fill=3D"none" stroke-wi=
dth=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D=
"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://www.=
w3.org/2000/svg"><path d=3D"M18.36 6.64a9 9 0 1 1-12.73 0"></path><line x1=
=3D"12" y1=3D"2" x2=3D"12" y2=3D"12"></line></svg>Enable chat history</div>=
</button></div><div class=3D"h-24 bg-gradient-to-t from-gray-900/0 to-gray-=
900"></div></div><div class=3D"flex-col flex-1 transition-opacity duration-=
500 -mr-2 pr-2 overflow-y-auto"><div class=3D"pt-3.5"><div class=3D"pb-0.5 =
last:pb-0" tabindex=3D"0"><a class=3D"group flex h-10 items-center gap-2 ro=
unded-lg px-2 font-medium hover:bg-token-surface-primary" href=3D"https://c=
hat.openai.com/"><div class=3D"h-7 w-7 flex-shrink-0"><div class=3D"gizmo-s=
hadow-stroke relative flex h-full items-center justify-center rounded-full =
bg-white text-black"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"h-2/3 w-2/3" ro=
le=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 =
16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.=
3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C3=
0.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.941=
25 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.17=
08 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666=
 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.00=
87 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.72169=
8 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.=
66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.31=
38C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 3=
7.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6=
709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321=
 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33=
.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752=
 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.=
9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.27=
33 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31=
.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.556=
3 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21=
.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889=
C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.=
8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.498=
04 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C1=
3.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 =
15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7=
199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497=
C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32=
.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19=
885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 =
20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.8=
4863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155=
 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.=
8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.3062=
4 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C2=
5.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4=
801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 =
20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8=
382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641=
C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.=
5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM=
35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2=
712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 =
10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.=
9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.171=
9 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 3=
1.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8=
531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.875=
2 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 1=
0.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9=
819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869=
 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.8=
5067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025=
 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14=
.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.99=
75V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"><=
/path></svg></div></div><div class=3D"grow overflow-hidden text-ellipsis wh=
itespace-nowrap text-sm text-token-text-primary">New chat</div><div class=
=3D"flex gap-3"><span class=3D"flex items-center" data-state=3D"closed"><bu=
tton class=3D"text-token-text-primary"><svg width=3D"24" height=3D"24" view=
Box=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M16.792=
9 2.79289C18.0118 1.57394 19.9882 1.57394 21.2071 2.79289C22.4261 4.01184 2=
2.4261 5.98815 21.2071 7.20711L12.7071 15.7071C12.5196 15.8946 12.2652 16 1=
2 16H9C8.44772 16 8 15.5523 8 15V12C8 11.7348 8.10536 11.4804 8.29289 11.29=
29L16.7929 2.79289ZM19.7929 4.20711C19.355 3.7692 18.645 3.7692 18.2071 4.2=
071L10 12.4142V14H11.5858L19.7929 5.79289C20.2308 5.35499 20.2308 4.64501 1=
9.7929 4.20711ZM6 5C5.44772 5 5 5.44771 5 6V18C5 18.5523 5.44772 19 6 19H18=
C18.5523 19 19 18.5523 19 18V14C19 13.4477 19.4477 13 20 13C20.5523 13 21 1=
3.4477 21 14V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V6C3=
 4.34314 4.34315 3 6 3H10C10.5523 3 11 3.44771 11 4C11 4.55228 10.5523 5 10=
 5H6Z" fill=3D"currentColor"></path></svg></button></span></div></a></div><=
/div><div class=3D"flex flex-col gap-2 pb-2 dark:text-gray-100 text-gray-80=
0 text-sm"><div><span><div class=3D"relative gizmo:mt-5" data-projection-id=
=3D"5" style=3D"height: auto; opacity: 1;"><div class=3D"" data-projection-=
id=3D"6" style=3D"opacity: 1;"><h3 class=3D"h-9 pb-2 pt-3 px-3 gizmo:px-2 t=
ext-xs text-gray-500 font-medium text-ellipsis overflow-hidden break-all bg=
-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:bg-black gizmo:text-giz=
mo-gray-600">Today</h3></div><ol><li class=3D"relative z-[15]" data-project=
ion-id=3D"7" style=3D"opacity: 1; height: auto;"><div class=3D"group relati=
ve active:opacity-90"><a href=3D"https://chat.openai.com/c/c667b49b-1af9-4b=
2b-b647-40f1d8a41769" class=3D"flex items-center gap-2 rounded-lg p-2 bg-to=
ken-surface-primary"><div class=3D"relative grow overflow-hidden whitespace=
-nowrap">Multithreaded TSV to ZIP<div class=3D"absolute bottom-0 right-0 to=
p-0 w-8 bg-gradient-to-l to-transparent from-token-surface-primary"></div><=
/div></a><button class=3D"absolute bottom-0 right-0 top-0 flex w-9 items-ce=
nter justify-center rounded-lg text-token-text-tertiary transition hover:te=
xt-token-text-secondary radix-state-open:text-token-text-secondary" type=3D=
"button" id=3D"radix-:r1g:" aria-haspopup=3D"menu" aria-expanded=3D"false" =
data-state=3D"closed"><div class=3D"pointer-events-none absolute bottom-0 r=
ight-0 top-0 w-14 rounded-lg bg-gradient-to-l from-token-surface-primary fr=
om-60% to-transparent"></div><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
 relative"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 1=
0.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C=
3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 =
10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 1=
2C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.104=
6 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg=
></button></div></li></ol></div></span><span><div class=3D"relative gizmo:m=
t-5" data-projection-id=3D"8" style=3D"height: auto; opacity: 1;"><div clas=
s=3D"" data-projection-id=3D"9" style=3D"opacity: 1;"><h3 class=3D"h-9 pb-2=
 pt-3 px-3 gizmo:px-2 text-xs text-gray-500 font-medium text-ellipsis overf=
low-hidden break-all bg-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:=
bg-black gizmo:text-gizmo-gray-600">October</h3></div><ol><li class=3D"rela=
tive" data-projection-id=3D"10" style=3D"opacity: 1; height: auto;"><div cl=
ass=3D"group relative active:opacity-90"><a href=3D"https://chat.openai.com=
/c/4faf0ed8-d6a9-44fd-80fb-788aeee9571a" class=3D"flex items-center gap-2 r=
ounded-lg p-2 hover:bg-token-surface-primary"><div class=3D"relative grow o=
verflow-hidden whitespace-nowrap">Update Azure Data Lake<div class=3D"absol=
ute bottom-0 right-0 top-0 w-8 bg-gradient-to-l to-transparent from-token-s=
urface-primary group-hover:from-token-surface-primary dark:from-black"></di=
v></div></a></div></li></ol></div><div class=3D"relative gizmo:mt-5" data-p=
rojection-id=3D"11" style=3D"height: auto; opacity: 1;"><div class=3D"" dat=
a-projection-id=3D"12" style=3D"opacity: 1;"><h3 class=3D"h-9 pb-2 pt-3 px-=
3 gizmo:px-2 text-xs text-gray-500 font-medium text-ellipsis overflow-hidde=
n break-all bg-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:bg-black =
gizmo:text-gizmo-gray-600">August</h3></div><ol><li class=3D"relative" data=
-projection-id=3D"13" style=3D"opacity: 1; height: auto;"><div class=3D"gro=
up relative active:opacity-90"><a href=3D"https://chat.openai.com/c/5c555ab=
b-fca8-4819-b7d0-5259a16a9a6f" class=3D"flex items-center gap-2 rounded-lg =
p-2 hover:bg-token-surface-primary"><div class=3D"relative grow overflow-hi=
dden whitespace-nowrap">Delta Stream to Table<div class=3D"absolute bottom-=
0 right-0 top-0 w-8 bg-gradient-to-l to-transparent from-token-surface-prim=
ary group-hover:from-token-surface-primary dark:from-black"></div></div></a=
></div></li></ol></div><div class=3D"relative gizmo:mt-5" data-projection-i=
d=3D"14" style=3D"height: auto; opacity: 1;"><div class=3D"" data-projectio=
n-id=3D"15" style=3D"opacity: 1;"><h3 class=3D"h-9 pb-2 pt-3 px-3 gizmo:px-=
2 text-xs text-gray-500 font-medium text-ellipsis overflow-hidden break-all=
 bg-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:bg-black gizmo:text-=
gizmo-gray-600">July</h3></div><ol><li class=3D"relative" data-projection-i=
d=3D"16" style=3D"opacity: 1; height: auto;"><div class=3D"group relative a=
ctive:opacity-90"><a href=3D"https://chat.openai.com/c/a5675379-aaea-4795-8=
716-c7fd2e380455" class=3D"flex items-center gap-2 rounded-lg p-2 hover:bg-=
token-surface-primary"><div class=3D"relative grow overflow-hidden whitespa=
ce-nowrap">Write Parquet with Polars<div class=3D"absolute bottom-0 right-0=
 top-0 w-8 bg-gradient-to-l to-transparent from-token-surface-primary group=
-hover:from-token-surface-primary dark:from-black"></div></div></a></div></=
li><li class=3D"relative" data-projection-id=3D"17" style=3D"opacity: 1; he=
ight: auto;"><div class=3D"group relative active:opacity-90"><a href=3D"htt=
ps://chat.openai.com/c/fc1aa412-b66b-4978-8023-811f419b26cf" class=3D"flex =
items-center gap-2 rounded-lg p-2 hover:bg-token-surface-primary"><div clas=
s=3D"relative grow overflow-hidden whitespace-nowrap">Tableau NIST 800-53 D=
ashboard.<div class=3D"absolute bottom-0 right-0 top-0 w-8 bg-gradient-to-l=
 to-transparent from-token-surface-primary group-hover:from-token-surface-p=
rimary dark:from-black"></div></div></a></div></li><li class=3D"relative" d=
ata-projection-id=3D"18" style=3D"opacity: 1; height: auto;"><div class=3D"=
group relative active:opacity-90"><a href=3D"https://chat.openai.com/c/c217=
0da9-2a03-4d6b-b112-fbba4d998109" class=3D"flex items-center gap-2 rounded-=
lg p-2 hover:bg-token-surface-primary"><div class=3D"relative grow overflow=
-hidden whitespace-nowrap">Predictive Metrics for Rapid7<div class=3D"absol=
ute bottom-0 right-0 top-0 w-8 bg-gradient-to-l to-transparent from-token-s=
urface-primary group-hover:from-token-surface-primary dark:from-black"></di=
v></div></a></div></li></ol></div><div class=3D"relative gizmo:mt-5" data-p=
rojection-id=3D"19" style=3D"height: auto; opacity: 1;"><div class=3D"" dat=
a-projection-id=3D"20" style=3D"opacity: 1;"><h3 class=3D"h-9 pb-2 pt-3 px-=
3 gizmo:px-2 text-xs text-gray-500 font-medium text-ellipsis overflow-hidde=
n break-all bg-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:bg-black =
gizmo:text-gizmo-gray-600">April</h3></div><ol><li class=3D"relative" data-=
projection-id=3D"21" style=3D"opacity: 1; height: auto;"><div class=3D"grou=
p relative active:opacity-90"><a href=3D"https://chat.openai.com/c/1d011273=
-235c-4b11-8fe6-f5f45d36d6f9" class=3D"flex items-center gap-2 rounded-lg p=
-2 hover:bg-token-surface-primary"><div class=3D"relative grow overflow-hid=
den whitespace-nowrap">Python Zscaler data extract.<div class=3D"absolute b=
ottom-0 right-0 top-0 w-8 bg-gradient-to-l to-transparent from-token-surfac=
e-primary group-hover:from-token-surface-primary dark:from-black"></div></d=
iv></a></div></li></ol></div><div class=3D"relative gizmo:mt-5" data-projec=
tion-id=3D"22" style=3D"height: auto; opacity: 1;"><div class=3D"" data-pro=
jection-id=3D"23" style=3D"opacity: 1;"><h3 class=3D"h-9 pb-2 pt-3 px-3 giz=
mo:px-2 text-xs text-gray-500 font-medium text-ellipsis overflow-hidden bre=
ak-all bg-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:bg-black gizmo=
:text-gizmo-gray-600">February</h3></div><ol><li class=3D"relative" data-pr=
ojection-id=3D"24" style=3D"opacity: 1; height: auto;"><div class=3D"group =
relative active:opacity-90"><a href=3D"https://chat.openai.com/c/d8590e0a-9=
fd4-4424-b51e-54e0e2e38a13" class=3D"flex items-center gap-2 rounded-lg p-2=
 hover:bg-token-surface-primary"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap">Python Dash DataTable.<div class=3D"absolute bottom-0 =
right-0 top-0 w-8 bg-gradient-to-l to-transparent from-token-surface-primar=
y group-hover:from-token-surface-primary dark:from-black"></div></div></a><=
/div></li></ol></div><div class=3D"relative gizmo:mt-5" data-projection-id=
=3D"25" style=3D"height: auto; opacity: 1;"><div class=3D"" data-projection=
-id=3D"26" style=3D"opacity: 1;"><h3 class=3D"h-9 pb-2 pt-3 px-3 gizmo:px-2=
 text-xs text-gray-500 font-medium text-ellipsis overflow-hidden break-all =
bg-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:bg-black gizmo:text-g=
izmo-gray-600">January</h3></div><ol><li class=3D"relative" data-projection=
-id=3D"27" style=3D"opacity: 1; height: auto;"><div class=3D"group relative=
 active:opacity-90"><a href=3D"https://chat.openai.com/c/6d096dae-29fe-455d=
-88c2-1c0ee4303c53" class=3D"flex items-center gap-2 rounded-lg p-2 hover:b=
g-token-surface-primary"><div class=3D"relative grow overflow-hidden whites=
pace-nowrap">Joining Two Lists Python<div class=3D"absolute bottom-0 right-=
0 top-0 w-8 bg-gradient-to-l to-transparent from-token-surface-primary grou=
p-hover:from-token-surface-primary dark:from-black"></div></div></a></div><=
/li></ol></div></span><span></span></div></div></div><div class=3D"flex fle=
x-col border-t border-black/20 pt-2 empty:hidden gizmo:border-t-0 gizmo:bor=
der-token-border-light dark:border-white/20"><a class=3D"flex px-3 min-h-[4=
4px] py-1 items-center gap-3 dark:text-white cursor-pointer text-sm hover:b=
g-gray-100 dark:hover:bg-gray-800 gizmo:dark:hover:bg-token-surface-primary=
 gizmo:hover:bg-token-surface-primary rounded-lg gizmo:px-2"><span class=3D=
"flex w-full flex-row flex-wrap-reverse justify-between"><div class=3D"flex=
 items-center gap-3 gizmo:gap-2"><span class=3D"flex h-7 w-7 items-center j=
ustify-center rounded-full border border-token-border-light bg-black"><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-sm shrink-0"><path d=3D"M8.78158 8.6=
0266L9.8188 5.49098C10.037 4.83634 10.963 4.83634 11.1812 5.49098L12.2184 8=
.60266C12.7187 10.1035 13.8965 11.2813 15.3973 11.7816L18.509 12.8188C19.16=
37 13.037 19.1637 13.963 18.509 14.1812L15.3973 15.2184C13.8965 15.7187 12.=
7187 16.8965 12.2184 18.3973L11.1812 21.509C10.963 22.1637 10.037 22.1637 9=
.8188 21.509L8.78158 18.3973C8.28128 16.8965 7.10354 15.7187 5.60266 15.218=
4L2.49098 14.1812C1.83634 13.963 1.83634 13.037 2.49098 12.8188L5.60266 11.=
7816C7.10354 11.2813 8.28128 10.1035 8.78158 8.60266Z" fill=3D"currentColor=
"></path><path d=3D"M17.1913 3.69537L17.6794 2.23105C17.7821 1.92298 18.217=
9 1.92298 18.3206 2.23105L18.8087 3.69537C19.0441 4.40167 19.5983 4.9559 20=
.3046 5.19133L21.769 5.67944C22.077 5.78213 22.077 6.21787 21.769 6.32056L2=
0.3046 6.80867C19.5983 7.0441 19.0441 7.59833 18.8087 8.30463L18.3206 9.768=
95C18.2179 10.077 17.7821 10.077 17.6794 9.76895L17.1913 8.30463C16.9559 7.=
59833 16.4017 7.0441 15.6954 6.80867L14.231 6.32056C13.923 6.21787 13.923 5=
.78213 14.231 5.67944L15.6954 5.19133C16.4017 4.9559 16.9559 4.40167 17.191=
3 3.69537Z" fill=3D"currentColor"></path></svg></span><div class=3D"flex fl=
ex-col"><span class=3D"gizmo:font-semibold">Upgrade</span><span class=3D"te=
xt-xs text-token-text-secondary line-clamp-1">Get GPT-4, DALL=C2=B7E, and m=
ore</span></div></div></span></a><div class=3D"flex w-full items-center"><d=
iv class=3D"grow"><div class=3D"group relative" data-headlessui-state=3D"">=
<button class=3D"flex w-full items-center gap-3 p-3.5 text-sm hover:bg-gray=
-100 group-ui-open:bg-gray-100 gizmo:gap-2 gizmo:rounded-lg gizmo:p-2 gizmo=
:hover:bg-token-surface-primary gizmo:group-ui-open:bg-token-surface-primar=
y dark:hover:bg-token-surface-primary dark:group-ui-open:bg-gray-800  gizmo=
:dark:group-ui-open:bg-token-surface-primary" id=3D"headlessui-menu-button-=
:rc:" type=3D"button" aria-haspopup=3D"true" aria-expanded=3D"false" data-h=
eadlessui-state=3D""><div class=3D"flex-shrink-0"><div class=3D"flex items-=
center justify-center rounded gizmo:overflow-hidden gizmo:rounded-full"><di=
v class=3D"relative flex"><img alt=3D"User" loading=3D"lazy" width=3D"32" h=
eight=3D"32" decoding=3D"async" data-nimg=3D"1" class=3D"rounded-sm" src=3D=
"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv=
1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div></div><div clas=
s=3D"relative grow -space-y-px overflow-hidden text-ellipsis whitespace-now=
rap text-left text-gray-700 gizmo:-top-px dark:text-white"><div class=3D"fo=
nt-semibold">Ra Nan</div></div><svg stroke=3D"currentColor" fill=3D"none" s=
troke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round" class=3D"icon-sm flex-shrink-0 text-gray-500 gizmo:hidden" =
height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><circle c=
x=3D"12" cy=3D"12" r=3D"1"></circle><circle cx=3D"19" cy=3D"12" r=3D"1"></c=
ircle><circle cx=3D"5" cy=3D"12" r=3D"1"></circle></svg></button></div></di=
v></div></div></nav></div></div></div></div></div><div class=3D"relative fl=
ex h-full max-w-full flex-1 flex-col overflow-hidden"><main class=3D"relati=
ve h-full w-full flex-1 overflow-auto transition-width"><div class=3D"fixed=
 left-0 top-1/2 z-40 -translate-y-1/2 transition-transform translate-x-[260=
px] rotate-0"><button><span class=3D"" data-state=3D"closed"><div class=3D"=
flex h-[72px] w-8 items-center justify-center" style=3D"opacity: 0.25;"><di=
v class=3D"flex h-6 w-6 flex-col items-center"><div class=3D"h-3 w-1 rounde=
d-full bg-token-text-primary" style=3D"transform: translateY(0.15rem) rotat=
e(0deg) translateZ(0px);"></div><div class=3D"h-3 w-1 rounded-full bg-token=
-text-primary" style=3D"transform: translateY(-0.15rem) rotate(0deg) transl=
ateZ(0px);"></div></div></div><span style=3D"position: absolute; border: 0p=
x; width: 1px; height: 1px; padding: 0px; margin: -1px; overflow: hidden; c=
lip: rect(0px, 0px, 0px, 0px); white-space: nowrap; overflow-wrap: normal;"=
>Close sidebar</span></span></button></div><div role=3D"presentation" class=
=3D"flex h-full flex-col"><div class=3D"flex-1 overflow-hidden"><div class=
=3D"react-scroll-to-bottom--css-pswpx-79elbk h-full"><div class=3D"react-sc=
roll-to-bottom--css-pswpx-1n7m0yu"><div class=3D"flex flex-col text-sm gizm=
o:pb-9 dark:bg-gray-800 gizmo:dark:bg-transparent"><div class=3D"sticky top=
-0 mb-1.5 flex items-center justify-between z-10 h-14 bg-white/95 p-2 font-=
semibold dark:bg-gray-800/90"><div class=3D"flex items-center gap-2"><div c=
lass=3D"group flex cursor-pointer items-center gap-1 rounded-xl py-2 px-3 t=
ext-lg font-medium hover:bg-gray-50 radix-state-open:bg-gray-50 dark:hover:=
bg-black/10 dark:radix-state-open:bg-black/20" type=3D"button" id=3D"radix-=
:r1r:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"=
><div>ChatGPT <span class=3D"text-token-text-secondary">3.5</span></div><sv=
g width=3D"16" height=3D"17" viewBox=3D"0 0 16 17" fill=3D"none" class=3D"t=
ext-token-text-tertiary"><path d=3D"M11.3346 7.83203L8.00131 11.1654L4.6679=
7 7.83203" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round"></path></svg></div></div><div class=3D"flex g=
ap-2 pr-1"><button class=3D"btn relative btn-neutral btn-small flex h-9 w-9=
 items-center justify-center whitespace-nowrap rounded-lg border border-tok=
en-border-medium focus:ring-0"><div class=3D"flex w-full gap-2 items-center=
 justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.2929 2.29289C11.6834 1.902=
37 12.3166 1.90237 12.7071 2.29289L16.7071 6.29289C17.0976 6.68342 17.0976 =
7.31658 16.7071 7.70711C16.3166 8.09763 15.6834 8.09763 15.2929 7.70711L13 =
5.41421V14C13 14.5523 12.5523 15 12 15C11.4477 15 11 14.5523 11 14V5.41421L=
8.70711 7.70711C8.31658 8.09763 7.68342 8.09763 7.29289 7.70711C6.90237 7.3=
1658 6.90237 6.68342 7.29289 6.29289L11.2929 2.29289ZM4 13C4.55228 13 5 13.=
4477 5 14V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V14C19=
 13.4477 19.4477 13 20 13C20.5523 13 21 13.4477 21 14V18C21 19.6569 19.6569=
 21 18 21H6C4.34315 21 3 19.6569 3 18V14C3 13.4477 3.44772 13 4 13Z" fill=
=3D"currentColor"></path></svg></div></button></div></div><div class=3D"w-f=
ull text-token-text-primary border-b border-black/10 gizmo:border-0 dark:bo=
rder-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg-gray-800 =
gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-2" style=3D"--a=
vatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-bas=
e md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-aut=
o md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2=
xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-=
w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col r=
elative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-st=
roke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"=
><div class=3D"relative flex"><img alt=3D"User" loading=3D"lazy" width=3D"2=
4" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rounded-sm" sr=
c=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFew=
CUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div></div></div=
></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col gizmo:w-ful=
l lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-none">You</di=
v><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-=
col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=3D"user" da=
ta-message-id=3D"aaa22cef-c638-4144-8190-766b30632709" class=3D"min-h-[20px=
] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-wo=
rds [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"">You are a p=
ython developer who works with large volumes of data.  The task for you is =
to program a multi threaded routine.  The routine will consume a TSV file w=
hich has paths to thousands of files in a windows network folder.  The prog=
ram will parse each file path in the TSV and create a ZIP file containing a=
ll files that match the second directory location in each path.  The output=
 zip file will be named by the execution start time of the program in the y=
yyymmddhhmi format.</div></div></div><div class=3D"flex justify-between emp=
ty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex=
"><div class=3D"text-gray-400 flex self-end lg:self-center justify-center g=
izmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"p-1 g=
izmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray=
-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:g=
roup-hover:visible md:group-[.final-completion]:visible"><div class=3D"flex=
 items-center gap-1.5 text-xs"><svg width=3D"24" height=3D"24" viewBox=3D"0=
 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-=
md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291=
C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21.4783 8.9=
3588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.696 10.1489=
 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.9355 3.29=
289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824 14.4678C=
4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13 7.41422L=
6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.21655 18.7=
835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L16.5858 1=
1L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.=
3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.2929=
1L18 9.5858Z" fill=3D"currentColor"></path></svg></div></button></div></div=
></div></div></div></div></div><div class=3D"w-full text-token-text-primary=
 border-b border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark=
:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:dark:bg-t=
ransparent" data-testid=3D"conversation-turn-3" style=3D"--avatar-color: #1=
9c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:p=
y-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizm=
o:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38=
rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:ma=
x-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relative items-e=
nd"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w=
-6 items-center justify-center overflow-hidden rounded-full"><div class=3D"=
relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center=
" style=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24px;"=
><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-=
9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241=
 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6=
8622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 =
3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1=
295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1=
6803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085=
 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02=
839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5=
467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 2=
8.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.81=
23 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C=
15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.=
5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.170=
4 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 3=
5.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371=
 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16=
.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7=
601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 2=
6.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.28=
25V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C2=
9.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946=
 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6=
.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0=
187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 =
30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 =
25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.=
0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.864=
3 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM=
4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.=
4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638=
 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26=
.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.130=
7 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.=
06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.61=
94ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 =
12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.=
7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244=
 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.=
1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.604=
7 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20=
.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464=
 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6=
803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712=
L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16=
.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.539=
03 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 =
7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.=
5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.98=
93 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 =
19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3=
8544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.264=
9 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22=
.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.8635=
6 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 2=
1.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4=
983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div=
></div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col=
 gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"font-semibo=
ld select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div cl=
ass=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"2eab74a4-5700-4047-9cc6-0a=
c872104e13" class=3D"min-h-[20px] text-message flex flex-col items-start ga=
p-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-a=
uto"><div class=3D"markdown prose w-full break-words dark:prose-invert dark=
"><p>Certainly! Below is a basic outline of a Python program that accomplis=
hes the described task using multithreading. Make sure to install the <code=
>zipfile</code> and <code>concurrent.futures</code> modules if you haven't =
already:</p><pre><div class=3D"bg-black rounded-md"><div class=3D"flex item=
s-center relative text-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-pri=
mary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python=
</span><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 =
4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15=
.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.343=
15 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6=
.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18=
 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457=
 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></div><div clas=
s=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-pyth=
on"><span class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_file</span>(<span class=3D"hljs-params">zip_name, file_paths</=
span>):
    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(zip_name, <spa=
n class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as</span> =
zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            zipf.write(file_path, os.path.basename(file_path))

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">process_tsv_line</span>(<span class=3D"hljs-params">line</span>):
    <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t col2 \t =
...</span>
    cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
    <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">le=
n</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
        directory_path =3D cols[<span class=3D"hljs-number">1</span>].strip=
()
        matching_files =3D [f <span class=3D"hljs-keyword">for</span> f <sp=
an class=3D"hljs-keyword">in</span> os.listdir(directory_path) <span class=
=3D"hljs-keyword">if</span> os.path.isfile(os.path.join(directory_path, f))=
]
        <span class=3D"hljs-keyword">return</span> matching_files
    <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">main</span>():
    input_tsv_file =3D <span class=3D"hljs-string">'your_input_file.tsv'</s=
pan>
    start_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y%=
m%d%H%M'</span>)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(input_tsv_file, <span class=3D"hljs-string">'r'</span>) <span c=
lass=3D"hljs-keyword">as</span> tsvfile:
        lines =3D tsvfile.readlines()

    <span class=3D"hljs-keyword">with</span> ThreadPoolExecutor() <span cla=
ss=3D"hljs-keyword">as</span> executor:
        futures =3D [executor.submit(process_tsv_line, line) <span class=3D=
"hljs-keyword">for</span> line <span class=3D"hljs-keyword">in</span> lines=
]
        results =3D [future.result() <span class=3D"hljs-keyword">for</span=
> future <span class=3D"hljs-keyword">in</span> futures]

    matching_files =3D [file <span class=3D"hljs-keyword">for</span> sublis=
t <span class=3D"hljs-keyword">in</span> results <span class=3D"hljs-keywor=
d">for</span> file <span class=3D"hljs-keyword">in</span> sublist]
    output_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-s=
ubst">{start_time}</span>_output.zip'</span>

    create_zip_file(output_zip_name, matching_files)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f'ZIP file "<span class=3D"hljs-subst">{output_zip_name}</span>" created su=
ccessfully.'</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    main()
</code></div></div></pre><p>This program reads the TSV file, extracts the s=
econd column, lists files in that directory, and creates a ZIP file with fi=
les from matching directories using multithreading. Adjust the <code>input_=
tsv_file</code> variable to your actual TSV file path.</p></div></div></div=
><div class=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:justify-s=
tart gizmo:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex s=
elf-end lg:self-center justify-center gizmo:lg:justify-start mt-2 gizmo:mt-=
0 visible gap-1"><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-cente=
r rounded-md p-1 text-xs gizmo:gap-1.5 gizmo:pl-0 dark:text-gray-400 dark:h=
over:text-gray-200 disabled:dark:hover:text-gray-400 hover:text-gray-950 md=
:invisible md:group-hover:visible md:group-[.final-completion]:visible"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" cl=
ip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1=
046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.804=
4 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5=
.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6=
 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V=
7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.1=
0457 8 6Z" fill=3D"currentColor"></path></svg></button><div class=3D"flex g=
ap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-g=
ray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:tex=
t-gray-950 md:invisible md:group-hover:visible md:group-[.final-completion]=
:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"non=
e" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12.1318 2.50389C12.3321 2.15338 12=
.7235 1.95768 13.124 2.00775L13.5778 2.06447C16.0449 2.37286 17.636 4.83353=
 16.9048 7.20993L16.354 8.99999H17.0722C19.7097 8.99999 21.6253 11.5079 20.=
9313 14.0525L19.5677 19.0525C19.0931 20.7927 17.5124 22 15.7086 22H6C4.3431=
5 22 3 20.6568 3 19V12C3 10.3431 4.34315 8.99999 6 8.99999H8C8.25952 8.9999=
9 8.49914 8.86094 8.6279 8.63561L12.1318 2.50389ZM10 20H15.7086C16.6105 20 =
17.4008 19.3964 17.6381 18.5262L19.0018 13.5262C19.3488 12.2539 18.391 11 1=
7.0722 11H15C14.6827 11 14.3841 10.8494 14.1956 10.5941C14.0071 10.3388 13.=
9509 10.0092 14.0442 9.70591L14.9932 6.62175C15.3384 5.49984 14.6484 4.3403=
6 13.5319 4.08468L10.3644 9.62789C10.0522 10.1742 9.56691 10.5859 9 10.8098=
V19C9 19.5523 9.44772 20 10 20ZM7 11V19C7 19.3506 7.06015 19.6872 7.17071 2=
0H6C5.44772 20 5 19.5523 5 19V12C5 11.4477 5.44772 11 6 11H7Z" fill=3D"curr=
entColor"></path></svg></button><button class=3D"p-1 gizmo:pl-0 rounded-md =
disabled:dark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-4=
00 text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible md=
:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21=
.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.959=
58 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.=
37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29=
589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.661=
4 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 2=
1.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273=
 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13=
.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.0113=
1 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13=
.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 1=
4.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18=
.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H=
17.0045Z" fill=3D"currentColor"></path></svg></button></div></div></div></d=
iv></div></div></div></div><div class=3D"w-full text-token-text-primary bor=
der-b border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:bor=
der-0 gizmo:bg-transparent dark:bg-gray-800 gizmo:dark:bg-transparent" data=
-testid=3D"conversation-turn-4" style=3D"--avatar-color: #19c37d;"><div cla=
ss=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div=
 class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md=
:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:ma=
x-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"=
><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div cl=
ass=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center =
justify-center overflow-hidden rounded-full"><div class=3D"relative flex"><=
img alt=3D"User" loading=3D"lazy" width=3D"24" height=3D"24" decoding=3D"as=
ync" data-nimg=3D"1" class=3D"rounded-sm" src=3D"https://lh3.googleusercont=
ent.com/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"=
color: transparent;"></div></div></div></div></div><div class=3D"relative f=
lex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)]"><div=
 class=3D"font-semibold select-none">You</div><div class=3D"flex-col gap-1 =
md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-=
0"><div data-message-author-role=3D"user" data-message-id=3D"aaa2748f-8ab3-=
4bda-a59d-946af08fb8e6" class=3D"min-h-[20px] text-message flex flex-col it=
ems-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
overflow-x-auto"><div class=3D"">The TSV file is in a windows network folde=
r.  Your program needs to be scheduled to wake up and authentic to the netw=
ork folder.</div></div></div><div class=3D"flex justify-between empty:hidde=
n gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex"><div c=
lass=3D"text-gray-400 flex self-end lg:self-center justify-center gizmo:lg:=
justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"p-1 gizmo:pl-=
0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200 dar=
k:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group-hov=
er:visible md:group-[.final-completion]:visible"><div class=3D"flex items-c=
enter gap-1.5 text-xs"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641=
 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21.4783 8.93588 19.=
7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.696 10.1489 19.989 =
9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.9355 3.29289 20.7=
071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824 14.4678C4.01103 =
13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13 7.41422L6.16031 =
14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.21655 18.7835L9.20=
339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L16.5858 11L13 7.4=
1422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.7=
1693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5=
858Z" fill=3D"currentColor"></path></svg></div></button></div></div></div><=
/div></div></div></div><div class=3D"w-full text-token-text-primary border-=
b border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-=
0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:dark:bg-transpare=
nt" data-testid=3D"conversation-turn-5" style=3D"--avatar-color: #19c37d;">=
<div class=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-au=
to"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 =
gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] giz=
mo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl =
} group"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div=
><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items=
-center justify-center overflow-hidden rounded-full"><div class=3D"relative=
 p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center" style=
=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg w=
idth=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=
=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.136=
3 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35=
.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259=
 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7=
85575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12=
.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7628=
6 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.=
312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8=
3612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C=
2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6=
322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208=
 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22=
.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.32=
23 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 =
31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.302=
3 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM=
22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.=
117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 =
31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0=
542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 2=
1.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.279=
1 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 =
31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6=
6048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 =
14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103=
V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24=
.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.00=
97 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707=
 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.=
19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3682=
3 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L1=
5.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.51=
91 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 2=
1.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.=
955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805=
 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17=
.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.604=
7 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35=
.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.47=
33 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C3=
2.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.976=
5 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.=
0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.072=
6 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 1=
1.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8=
158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508=
C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13=
.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8=
423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058=
V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13=
.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.176=
7C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.=
94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.42=
15 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419Z=
M16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.=
071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div>=
</div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col gizmo:=
w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"font-semibold sele=
ct-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"=
flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-aut=
hor-role=3D"assistant" data-message-id=3D"a0146371-a8d7-4c45-8801-9a555bd3f=
174" class=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whi=
tespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><d=
iv class=3D"markdown prose w-full break-words dark:prose-invert dark"><p>Fo=
r scheduling and authenticating to a network folder on Windows, you can use=
 the <code>schedule</code> library for scheduling tasks and the <code>win32=
net</code> library for authenticating to the network folder. Make sure to i=
nstall the required packages with:</p><pre><div class=3D"bg-black rounded-m=
d"><div class=3D"flex items-center relative text-gray-200 bg-gray-800 gizmo=
:dark:bg-token-surface-primary px-4 py-2 text-xs font-sans justify-between =
rounded-t-md"><span>bash</span><button class=3D"flex ml-auto gizmo:ml-0 gap=
-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 =
6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.=
4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 =
18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53=
513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 =
20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 =
8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code=
</button></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespac=
e-pre hljs language-bash">pip install schedule pywin32
</code></div></div></pre><p>Now, modify the script as follows:</p><pre><div=
 class=3D"bg-black rounded-md"><div class=3D"flex items-center relative tex=
t-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-primary px-4 py-2 text-x=
s font-sans justify-between rounded-t-md"><span>python</span><button class=
=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.=
22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4=
 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19=
V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5=
523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 1=
7 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"curre=
ntColor"></path></svg>Copy code</button></div><div class=3D"p-4 overflow-y-=
auto"><code class=3D"!whitespace-pre hljs language-python"><span class=3D"h=
ljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">import</span> schedule
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_file</span>(<span class=3D"hljs-params">zip_name, file_paths</=
span>):
    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(zip_name, <spa=
n class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as</span> =
zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            zipf.write(file_path, os.path.basename(file_path))

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">process_tsv_line</span>(<span class=3D"hljs-params">line</span>):
    <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t col2 \t =
...</span>
    cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
    <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">le=
n</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
        directory_path =3D os.path.join(NETWORK_PATH, cols[<span class=3D"h=
ljs-number">1</span>].strip())
        matching_files =3D [os.path.join(directory_path, f) <span class=3D"=
hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> os.listdi=
r(directory_path) <span class=3D"hljs-keyword">if</span> os.path.isfile(os.=
path.join(directory_path, f))]
        <span class=3D"hljs-keyword">return</span> matching_files
    <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">main</span>():
    authenticate_to_network()
    input_tsv_file =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'your_input_file.tsv'</span>)
    start_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y%=
m%d%H%M'</span>)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(input_tsv_file, <span class=3D"hljs-string">'r'</span>) <span c=
lass=3D"hljs-keyword">as</span> tsvfile:
        lines =3D tsvfile.readlines()

    <span class=3D"hljs-keyword">with</span> ThreadPoolExecutor() <span cla=
ss=3D"hljs-keyword">as</span> executor:
        futures =3D [executor.submit(process_tsv_line, line) <span class=3D=
"hljs-keyword">for</span> line <span class=3D"hljs-keyword">in</span> lines=
]
        results =3D [future.result() <span class=3D"hljs-keyword">for</span=
> future <span class=3D"hljs-keyword">in</span> futures]

    matching_files =3D [file <span class=3D"hljs-keyword">for</span> sublis=
t <span class=3D"hljs-keyword">in</span> results <span class=3D"hljs-keywor=
d">for</span> file <span class=3D"hljs-keyword">in</span> sublist]
    output_zip_name =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-stri=
ng">f'<span class=3D"hljs-subst">{start_time}</span>_output.zip'</span>)

    create_zip_file(output_zip_name, matching_files)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f'ZIP file "<span class=3D"hljs-subst">{output_zip_name}</span>" created su=
ccessfully.'</span>)

<span class=3D"hljs-comment"># Schedule the job to run every day at a speci=
fic time, for example, 2:00 AM</span>
schedule.every().day.at(<span class=3D"hljs-string">"02:00"</span>).do(main=
)

<span class=3D"hljs-keyword">while</span> <span class=3D"hljs-literal">True=
</span>:
    schedule.run_pending()
    time.sleep(<span class=3D"hljs-number">1</span>)
</code></div></div></pre><p>This modified script authenticates to the netwo=
rk folder before processing the TSV file and creating the ZIP file. The scr=
ipt is scheduled to run at a specific time using the <code>schedule</code> =
library. Update the <code>NETWORK_PATH</code>, <code>DOMAIN</code>, <code>U=
SERNAME</code>, and <code>PASSWORD</code> variables with your actual networ=
k folder details.</p></div></div></div><div class=3D"flex justify-between e=
mpty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:fl=
ex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-center=
 gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"fle=
x ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo:gap-1.=
5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-200 disabled:dark:hove=
r:text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible md:=
group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.89=
54 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044=
 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 =
20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315=
 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 =
20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.=
10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></p=
ath></svg></button><div class=3D"flex gap-1"><button class=3D"p-1 gizmo:pl-=
0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200 dar=
k:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group-hov=
er:visible md:group-[.final-completion]:visible"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.5778=
 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17.0=
722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.0931=
 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4.3=
4315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L12.=
1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19.0=
018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10.8=
494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.9932=
 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C10=
.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 11=
V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5 1=
1.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></button><but=
ton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 da=
rk:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950=
 md:invisible md:group-hover:visible md:group-[.final-completion]:visible">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0=
423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975=
 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.436=
84 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.=
34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 =
15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 =
4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13=
 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.66=
12 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 1=
9.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0=
045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.6=
4937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V=
12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></=
path></svg></button></div></div></div></div></div></div></div></div><div cl=
ass=3D"w-full text-token-text-primary border-b border-black/10 gizmo:border=
-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg=
-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-6" st=
yle=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-cente=
r text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-b=
ase mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 =
md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] giz=
mo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex =
flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo=
-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rou=
nded-full"><div class=3D"relative flex"><img alt=3D"User" loading=3D"lazy" =
width=3D"24" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"roun=
ded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX3=
8W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div><=
/div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col g=
izmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-non=
e">You</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa244f6-feb3-4ab1-bc55-39fd3eb78435" class=3D=
"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D""=
>You must also ensure that a TSV file is processed only once.  Keep a log o=
f TSV files you have already processed.</div></div></div><div class=3D"flex=
 justify-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg=
:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-cen=
ter justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><b=
utton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 =
dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-9=
50 md:invisible md:group-hover:visible md:group-[.final-completion]:visible=
"><div class=3D"flex items-center gap-1.5 text-xs"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783=
 6.06414 21.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10=
.7182 19.696 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 =
3.52125 20.9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8=
356L3.90824 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 =
4.29291ZM13 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 =
14.7966L5.21655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.74=
61 17.8397L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712=
C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.=
30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg></div>=
</button></div></div></div></div></div></div></div><div class=3D"w-full tex=
t-token-text-primary border-b border-black/10 gizmo:border-0 dark:border-gr=
ay-900/50 gizmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444=
654] gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-7" style=
=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center t=
ext-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base=
 mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:=
max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:=
xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex fle=
x-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-sh=
adow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounde=
d-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items=
-center justify-center" style=3D"background-color: rgb(25, 195, 125); width=
: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=
=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16=
.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.39=
34 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.=
0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125=
 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708=
 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8=
.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087=
 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 =
18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66=
413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138=
C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.=
5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.670=
9 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 2=
8.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2=
332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 2=
8.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.96=
39 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733=
 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4=
156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 =
30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0=
198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C2=
9.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.88=
06 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804=
 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.=
8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15=
.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.719=
9 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C1=
4.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7=
263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1988=
5 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20=
.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.848=
63 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 1=
5.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.85=
57C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 =
15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.=
6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.480=
1 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20=
.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.838=
2 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C3=
2.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.54=
74 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35=
.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.271=
2C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10=
.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.95=
85 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 =
7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.=
0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.853=
1C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 =
19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.=
8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.981=
9 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 1=
7.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.850=
67C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9=
.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2=
479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975=
V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></p=
ath></svg></div></div></div></div></div><div class=3D"relative flex w-[calc=
(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div=
 class=3D"font-semibold select-none">ChatGPT</div><div class=3D"flex-col ga=
p-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:=
gap-0"><div data-message-author-role=3D"assistant" data-message-id=3D"6c01c=
cf2-b2ac-4899-a13e-31fbc206b018" class=3D"min-h-[20px] text-message flex fl=
ex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&am=
p;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-words d=
ark:prose-invert dark"><p>Certainly! To ensure that a TSV file is processed=
 only once and keep a log of processed files, you can use a simple text fil=
e to store the processed filenames. Here's an updated version of the script=
:</p><pre><div class=3D"bg-black rounded-md"><div class=3D"flex items-cente=
r relative text-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-primary px=
-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span>=
<button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"=
evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4Z=
M8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4=
H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4=
 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 =
6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.4477=
2 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" =
fill=3D"currentColor"></path></svg>Copy code</button></div><div class=3D"p-=
4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-python"><sp=
an class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">import</span> schedule
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_FILE_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-string">'p=
rocessed_files.log'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_file</span>(<span class=3D"hljs-params">zip_name, file_paths</=
span>):
    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(zip_name, <spa=
n class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as</span> =
zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            zipf.write(file_path, os.path.basename(file_path))

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">process_tsv_line</span>(<span class=3D"hljs-params">line</span>):
    <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t col2 \t =
...</span>
    cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
    <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">le=
n</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
        directory_path =3D os.path.join(NETWORK_PATH, cols[<span class=3D"h=
ljs-number">1</span>].strip())
        matching_files =3D [os.path.join(directory_path, f) <span class=3D"=
hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> os.listdi=
r(directory_path) <span class=3D"hljs-keyword">if</span> os.path.isfile(os.=
path.join(directory_path, f))]
        <span class=3D"hljs-keyword">return</span> matching_files
    <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">get_processed_files</span>():
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(LOG_FILE_PATH, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            <span class=3D"hljs-keyword">return</span> [line.strip() <span =
class=3D"hljs-keyword">for</span> line <span class=3D"hljs-keyword">in</spa=
n> log_file.readlines()]
    <span class=3D"hljs-keyword">except</span> FileNotFoundError:
        <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">update_processed_files</span>(<span class=3D"hljs-params">filename</span>=
):
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(LOG_FILE_PATH, <span class=3D"hljs-string">'a'</span>) <span cl=
ass=3D"hljs-keyword">as</span> log_file:
        log_file.write(<span class=3D"hljs-string">f'<span class=3D"hljs-su=
bst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">main</span>():
    authenticate_to_network()
    input_tsv_file =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'your_input_file.tsv'</span>)
   =20
    processed_files =3D get_processed_files()
   =20
    <span class=3D"hljs-keyword">if</span> input_tsv_file <span class=3D"hl=
js-keyword">in</span> processed_files:
        <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-stri=
ng">f'TSV file "<span class=3D"hljs-subst">{input_tsv_file}</span>" already=
 processed. Skipping...'</span>)
        <span class=3D"hljs-keyword">return</span>

    start_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y%=
m%d%H%M'</span>)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(input_tsv_file, <span class=3D"hljs-string">'r'</span>) <span c=
lass=3D"hljs-keyword">as</span> tsvfile:
        lines =3D tsvfile.readlines()

    <span class=3D"hljs-keyword">with</span> ThreadPoolExecutor() <span cla=
ss=3D"hljs-keyword">as</span> executor:
        futures =3D [executor.submit(process_tsv_line, line) <span class=3D=
"hljs-keyword">for</span> line <span class=3D"hljs-keyword">in</span> lines=
]
        results =3D [future.result() <span class=3D"hljs-keyword">for</span=
> future <span class=3D"hljs-keyword">in</span> futures]

    matching_files =3D [file <span class=3D"hljs-keyword">for</span> sublis=
t <span class=3D"hljs-keyword">in</span> results <span class=3D"hljs-keywor=
d">for</span> file <span class=3D"hljs-keyword">in</span> sublist]
    output_zip_name =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-stri=
ng">f'<span class=3D"hljs-subst">{start_time}</span>_output.zip'</span>)

    create_zip_file(output_zip_name, matching_files)
    update_processed_files(input_tsv_file)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f'ZIP file "<span class=3D"hljs-subst">{output_zip_name}</span>" created su=
ccessfully.'</span>)

<span class=3D"hljs-comment"># Schedule the job to run every day at a speci=
fic time, for example, 2:00 AM</span>
schedule.every().day.at(<span class=3D"hljs-string">"02:00"</span>).do(main=
)

<span class=3D"hljs-keyword">while</span> <span class=3D"hljs-literal">True=
</span>:
    schedule.run_pending()
    time.sleep(<span class=3D"hljs-number">1</span>)
</code></div></div></pre><p>This script checks a log file (<code>processed_=
files.log</code>) to see if a TSV file has been processed before. If a file=
 has been processed, it skips the processing. If not, it processes the TSV =
file, updates the log, and creates the ZIP file.</p></div></div></div><div =
class=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:justify-start g=
izmo:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-en=
d lg:self-center justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visi=
ble gap-1"><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center roun=
ded-md p-1 text-xs gizmo:gap-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:t=
ext-gray-200 disabled:dark:hover:text-gray-400 hover:text-gray-950 md:invis=
ible md:group-hover:visible md:group-[.final-completion]:visible"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 =
12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4=
649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315=
 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.4=
4772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6=
.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8=
 6Z" fill=3D"currentColor"></path></svg></button><div class=3D"flex gap-1">=
<button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-40=
0 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray=
-950 md:invisible md:group-hover:visible md:group-[.final-completion]:visib=
le"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.=
95768 13.124 2.00775L13.5778 2.06447C16.0449 2.37286 17.636 4.83353 16.9048=
 7.20993L16.354 8.99999H17.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.=
0525L19.5677 19.0525C19.0931 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 2=
0.6568 3 19V12C3 10.3431 4.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.4991=
4 8.86094 8.6279 8.63561L12.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 =
19.3964 17.6381 18.5262L19.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 1=
1H15C14.6827 11 14.3841 10.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.=
0092 14.0442 9.70591L14.9932 6.62175C15.3384 5.49984 14.6484 4.34036 13.531=
9 4.08468L10.3644 9.62789C10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19=
.5523 9.44772 20 10 20ZM7 11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44=
772 20 5 19.5523 5 19V12C5 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor=
"></path></svg></button><button class=3D"p-1 gizmo:pl-0 rounded-md disabled=
:dark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-=
gray-400 hover:text-gray-950 md:invisible md:group-hover:visible md:group-[=
.final-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 =
24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11=
.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.62=
71 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12=
.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18=
.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.=
0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM=
14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738=
C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.=
8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.378=
2C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13=
.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4=
ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 =
19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z=
" fill=3D"currentColor"></path></svg></button></div></div></div></div></div=
></div></div></div><div class=3D"w-full text-token-text-primary border-b bo=
rder-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-0 gi=
zmo:bg-transparent dark:bg-gray-800 gizmo:dark:bg-transparent" data-testid=
=3D"conversation-turn-8" style=3D"--avatar-color: #19c37d;"><div class=3D"p=
-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div class=
=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 =
gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3x=
l gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div =
class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D=
"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justif=
y-center overflow-hidden rounded-full"><div class=3D"relative flex"><img al=
t=3D"User" loading=3D"lazy" width=3D"24" height=3D"24" decoding=3D"async" d=
ata-nimg=3D"1" class=3D"rounded-sm" src=3D"https://lh3.googleusercontent.co=
m/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color:=
 transparent;"></div></div></div></div></div><div class=3D"relative flex w-=
[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)]"><div class=
=3D"font-semibold select-none">You</div><div class=3D"flex-col gap-1 md:gap=
-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><di=
v data-message-author-role=3D"user" data-message-id=3D"aaa20453-c61b-4cbe-8=
1c6-aee9da79c800" class=3D"min-h-[20px] text-message flex flex-col items-st=
art gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overfl=
ow-x-auto"><div class=3D"">Instead of being on a schedule, it would be best=
 to watch for the arrival of a new TSV file in a specific path of the netwo=
rk folder.</div></div></div><div class=3D"flex justify-between empty:hidden=
 gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex"><div cl=
ass=3D"text-gray-400 flex self-end lg:self-center justify-center gizmo:lg:j=
ustify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"p-1 gizmo:pl-0=
 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200 dark=
:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group-hove=
r:visible md:group-[.final-completion]:visible"><div class=3D"flex items-ce=
nter gap-1.5 text-xs"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 =
2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21.4783 8.93588 19.7=
071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.696 10.1489 19.989 9=
.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.9355 3.29289 20.70=
71C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824 14.4678C4.01103 1=
3.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13 7.41422L6.16031 1=
4.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.21655 18.7835L9.203=
39 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L16.5858 11L13 7.41=
422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71=
693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.58=
58Z" fill=3D"currentColor"></path></svg></div></button></div></div></div></=
div></div></div></div><div class=3D"w-full text-token-text-primary border-b=
 border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-0=
 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:dark:bg-transparen=
t" data-testid=3D"conversation-turn-9" style=3D"--avatar-color: #19c37d;"><=
div class=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-aut=
o"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 g=
izmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizm=
o:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl }=
 group"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div>=
<div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-=
center justify-center overflow-hidden rounded-full"><div class=3D"relative =
p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center" style=
=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg w=
idth=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=
=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.136=
3 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35=
.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259=
 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7=
85575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12=
.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7628=
6 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.=
312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8=
3612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C=
2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6=
322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208=
 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22=
.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.32=
23 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 =
31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.302=
3 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM=
22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.=
117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 =
31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0=
542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 2=
1.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.279=
1 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 =
31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6=
6048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 =
14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103=
V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24=
.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.00=
97 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707=
 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.=
19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3682=
3 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L1=
5.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.51=
91 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 2=
1.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.=
955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805=
 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17=
.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.604=
7 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35=
.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.47=
33 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C3=
2.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.976=
5 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.=
0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.072=
6 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 1=
1.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8=
158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508=
C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13=
.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8=
423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058=
V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13=
.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.176=
7C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.=
94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.42=
15 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419Z=
M16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.=
071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div>=
</div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col gizmo:=
w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"font-semibold sele=
ct-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"=
flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-aut=
hor-role=3D"assistant" data-message-id=3D"2bc07735-2d2c-439f-8b88-b42e9bd3a=
80b" class=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whi=
tespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><d=
iv class=3D"markdown prose w-full break-words dark:prose-invert dark"><p>Ce=
rtainly! You can use the <code>watchdog</code> library to monitor a specifi=
c directory for file changes. Install the library with:</p><pre><div class=
=3D"bg-black rounded-md"><div class=3D"flex items-center relative text-gray=
-200 bg-gray-800 gizmo:dark:bg-token-surface-primary px-4 py-2 text-xs font=
-sans justify-between rounded-t-md"><span>bash</span><button class=3D"flex =
ml-auto gizmo:ml-0 gap-1 items-center"><svg width=3D"24" height=3D"24" view=
Box=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C1=
0.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.=
8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34=
315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.3=
4315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44=
772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C1=
6 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"=
></path></svg>Copy code</button></div><div class=3D"p-4 overflow-y-auto"><c=
ode class=3D"!whitespace-pre hljs language-bash">pip install watchdog
</code></div></div></pre><p>Then, modify the script to watch for the arriva=
l of new TSV files:</p><pre><div class=3D"bg-black rounded-md"><div class=
=3D"flex items-center relative text-gray-200 bg-gray-800 gizmo:dark:bg-toke=
n-surface-primary px-4 py-2 text-xs font-sans justify-between rounded-t-md"=
><span>python</span><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-ce=
nter"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"ev=
enodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.8=
9543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7=
733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 =
17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C=
6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.55=
23 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.8954=
3 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></=
div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs =
language-python"><span class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_FILE_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-string">'p=
rocessed_files.log'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            process_tsv_file(event.src_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_file</span>(<span class=3D"hljs-params">zip_name, file_paths</=
span>):
    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(zip_name, <spa=
n class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as</span> =
zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            zipf.write(file_path, os.path.basename(file_path))

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">process_tsv_line</span>(<span class=3D"hljs-params">line</span>):
    <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t col2 \t =
...</span>
    cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
    <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">le=
n</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
        directory_path =3D os.path.join(NETWORK_PATH, cols[<span class=3D"h=
ljs-number">1</span>].strip())
        matching_files =3D [os.path.join(directory_path, f) <span class=3D"=
hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> os.listdi=
r(directory_path) <span class=3D"hljs-keyword">if</span> os.path.isfile(os.=
path.join(directory_path, f))]
        <span class=3D"hljs-keyword">return</span> matching_files
    <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">get_processed_files</span>():
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(LOG_FILE_PATH, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            <span class=3D"hljs-keyword">return</span> [line.strip() <span =
class=3D"hljs-keyword">for</span> line <span class=3D"hljs-keyword">in</spa=
n> log_file.readlines()]
    <span class=3D"hljs-keyword">except</span> FileNotFoundError:
        <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">update_processed_files</span>(<span class=3D"hljs-params">filename</span>=
):
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(LOG_FILE_PATH, <span class=3D"hljs-string">'a'</span>) <span cl=
ass=3D"hljs-keyword">as</span> log_file:
        log_file.write(<span class=3D"hljs-string">f'<span class=3D"hljs-su=
bst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">process_tsv_file</span>(<span class=3D"hljs-params">file_path</span>):
    authenticate_to_network()
   =20
    processed_files =3D get_processed_files()
   =20
    <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hljs-ke=
yword">in</span> processed_files:
        <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-stri=
ng">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" already proc=
essed. Skipping...'</span>)
        <span class=3D"hljs-keyword">return</span>

    start_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y%=
m%d%H%M'</span>)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <span class=
=3D"hljs-keyword">as</span> tsvfile:
        lines =3D tsvfile.readlines()

    <span class=3D"hljs-keyword">with</span> ThreadPoolExecutor() <span cla=
ss=3D"hljs-keyword">as</span> executor:
        futures =3D [executor.submit(process_tsv_line, line) <span class=3D=
"hljs-keyword">for</span> line <span class=3D"hljs-keyword">in</span> lines=
]
        results =3D [future.result() <span class=3D"hljs-keyword">for</span=
> future <span class=3D"hljs-keyword">in</span> futures]

    matching_files =3D [file <span class=3D"hljs-keyword">for</span> sublis=
t <span class=3D"hljs-keyword">in</span> results <span class=3D"hljs-keywor=
d">for</span> file <span class=3D"hljs-keyword">in</span> sublist]
    output_zip_name =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-stri=
ng">f'<span class=3D"hljs-subst">{start_time}</span>_output.zip'</span>)

    create_zip_file(output_zip_name, matching_files)
    update_processed_files(file_path)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f'ZIP file "<span class=3D"hljs-subst">{output_zip_name}</span>" created su=
ccessfully.'</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>This script uses the <code>watchdog</code> libr=
ary to watch for new TSV files in the specified directory (<code>TSV_DIRECT=
ORY_PATH</code>). When a new TSV file is detected, it triggers the <code>pr=
ocess_tsv_file</code> function to process the file. The script continues to=
 watch for new files indefinitely. Adjust the <code>TSV_DIRECTORY_PATH</cod=
e> variable to your specific network folder path for incoming TSV files.</p=
></div></div></div><div class=3D"flex justify-between empty:hidden gizmo:mt=
-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex"><div class=3D"te=
xt-gray-400 flex self-end lg:self-center justify-center gizmo:lg:justify-st=
art mt-2 gizmo:mt-0 visible gap-1"><button class=3D"flex ml-auto gizmo:ml-0=
 gap-1 items-center rounded-md p-1 text-xs gizmo:gap-1.5 gizmo:pl-0 dark:te=
xt-gray-400 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 hove=
r:text-gray-950 md:invisible md:group-hover:visible md:group-[.final-comple=
tion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 =
6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.=
4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 =
18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53=
513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 =
20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 =
8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg></button>=
<div class=3D"flex gap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabl=
ed:dark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 tex=
t-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible md:group=
-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12.1318 2.50389C=
12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.5778 2.06447C16.0449 2.37=
286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17.0722C19.7097 8.99999 2=
1.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.0931 20.7927 17.5124 22 1=
5.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4.34315 8.99999 6 8.9999=
9H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L12.1318 2.50389ZM10 20H1=
5.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19.0018 13.5262C19.3488 1=
2.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10.8494 14.1956 10.5941C1=
4.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.9932 6.62175C15.3384 5.49=
984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C10.0522 10.1742 9.56691=
 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 11V19C7 19.3506 7.06015=
 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5 11.4477 5.44772 11 6 1=
1H7Z" fill=3D"currentColor"></path></svg></button><button class=3D"p-1 gizm=
o:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-20=
0 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:grou=
p-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" hei=
ght=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd=
" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.=
4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.9=
3226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20=
728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0=
045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766=
 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.366=
37 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.3=
2185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96=
028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L=
13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4=
.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16=
.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5=
568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></button></d=
iv></div></div></div></div></div></div></div><div class=3D"w-full text-toke=
n-text-primary border-b border-black/10 gizmo:border-0 dark:border-gray-900=
/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg-gray-800 gizmo:dark:bg=
-transparent" data-testid=3D"conversation-turn-10" style=3D"--avatar-color:=
 #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 m=
d:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 g=
izmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-=
[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl=
:max-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relative item=
s-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-=
6 w-6 items-center justify-center overflow-hidden rounded-full"><div class=
=3D"relative flex"><img alt=3D"User" loading=3D"lazy" width=3D"24" height=
=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rounded-sm" src=3D"http=
s://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXY=
Nrg=3Ds96-c" style=3D"color: transparent;"></div></div></div></div></div><d=
iv class=3D"relative flex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[c=
alc(100%-115px)]"><div class=3D"font-semibold select-none">You</div><div cl=
ass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w=
-full gap-3 gizmo:gap-0"><div data-message-author-role=3D"user" data-messag=
e-id=3D"aaa217e4-4aba-49a3-a22f-8f2287e4c7c4" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.tex=
t-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"">I am not sure if you=
r code is outputting the correct zip file.  Review and rewrite to output zi=
p files with file name as the execution date, for each second directory in =
the path of each TSV line.</div></div></div><div class=3D"flex justify-betw=
een empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:=
lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-c=
enter gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=
=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:=
text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invis=
ible md:group-hover:visible md:group-[.final-completion]:visible"><div clas=
s=3D"flex items-center gap-1.5 text-xs"><svg width=3D"24" height=3D"24" vie=
wBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.292=
9 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21=
.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.69=
6 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.=
9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824=
 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13=
 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.2=
1655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L=
16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.=
71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.29=
29 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg></div></button></=
div></div></div></div></div></div></div><div class=3D"w-full text-token-tex=
t-primary border-b border-black/10 gizmo:border-0 dark:border-gray-900/50 g=
izmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:=
dark:bg-transparent" data-testid=3D"conversation-turn-11" style=3D"--avatar=
-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:=
gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:=
gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg=
:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48=
rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relati=
ve items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke =
flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><div=
 class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center just=
ify-center" style=3D"background-color: rgb(25, 195, 125); width: 24px; heig=
ht: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><te=
xt x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.980=
8 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 3=
6.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941=
 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.3=
6341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14=
.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4781=
5C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.=
0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.94=
4492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 =
2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.=
1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789=
 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21=
.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.57=
72C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 =
32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.845=
8 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 3=
7.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.=
1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 =
31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5=
549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 =
21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.37=
5 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 3=
7.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.5=
5718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408=
 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.724=
8L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24=
.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.74=
16 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 =
31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.=
19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2533=
4 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L1=
8.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.51=
73C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 2=
2.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29=
707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872=
 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12=
.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.319=
4 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35=
.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.59=
47 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 3=
2.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.012=
8C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.=
1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.796=
3 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 1=
1.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4=
053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077=
 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12=
.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8=
576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254=
 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12=
.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.994=
64 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4=
.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.53=
66 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L=
14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.=
4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></=
div></div></div></div></div><div class=3D"relative flex w-[calc(100%-50px)]=
 flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"fo=
nt-semibold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3=
"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div =
data-message-author-role=3D"assistant" data-message-id=3D"99d876b2-de61-405=
e-b271-f8aeaff0342a" class=3D"min-h-[20px] text-message flex flex-col items=
-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 ove=
rflow-x-auto"><div class=3D"markdown prose w-full break-words dark:prose-in=
vert dark"><p>I appreciate your clarification. I've reviewed and modified t=
he code to create separate ZIP files for each second directory in the path =
of each TSV line. Each ZIP file will be named with the execution date. Plea=
se find the updated code below:</p><pre><div class=3D"bg-black rounded-md">=
<div class=3D"flex items-center relative text-gray-200 bg-gray-800 gizmo:da=
rk:bg-token-surface-primary px-4 py-2 text-xs font-sans justify-between rou=
nded-t-md"><span>python</span><button class=3D"flex ml-auto gizmo:ml-0 gap-=
1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 =
6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.=
4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 =
18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53=
513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 =
20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 =
8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code=
</button></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespac=
e-pre hljs language-python"><span class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_FILE_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-string">'p=
rocessed_files.log'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            process_tsv_file(event.src_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_file</span>(<span class=3D"hljs-params">zip_name, file_paths</=
span>):
    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(zip_name, <spa=
n class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as</span> =
zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            zipf.write(file_path, os.path.basename(file_path))

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">process_tsv_line</span>(<span class=3D"hljs-params">line</span>):
    <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t col2 \t =
...</span>
    cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
    <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">le=
n</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
        directory_path =3D os.path.join(NETWORK_PATH, cols[<span class=3D"h=
ljs-number">1</span>].strip())
        matching_files =3D [os.path.join(directory_path, f) <span class=3D"=
hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> os.listdi=
r(directory_path) <span class=3D"hljs-keyword">if</span> os.path.isfile(os.=
path.join(directory_path, f))]
        <span class=3D"hljs-keyword">return</span> matching_files
    <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">get_processed_files</span>():
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(LOG_FILE_PATH, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            <span class=3D"hljs-keyword">return</span> [line.strip() <span =
class=3D"hljs-keyword">for</span> line <span class=3D"hljs-keyword">in</spa=
n> log_file.readlines()]
    <span class=3D"hljs-keyword">except</span> FileNotFoundError:
        <span class=3D"hljs-keyword">return</span> []

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">update_processed_files</span>(<span class=3D"hljs-params">filename</span>=
):
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(LOG_FILE_PATH, <span class=3D"hljs-string">'a'</span>) <span cl=
ass=3D"hljs-keyword">as</span> log_file:
        log_file.write(<span class=3D"hljs-string">f'<span class=3D"hljs-su=
bst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">process_tsv_file</span>(<span class=3D"hljs-params">file_path</span>):
    authenticate_to_network()
   =20
    processed_files =3D get_processed_files()
   =20
    <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hljs-ke=
yword">in</span> processed_files:
        <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-stri=
ng">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" already proc=
essed. Skipping...'</span>)
        <span class=3D"hljs-keyword">return</span>

    start_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y%=
m%d%H%M'</span>)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <span class=
=3D"hljs-keyword">as</span> tsvfile:
        lines =3D tsvfile.readlines()

    <span class=3D"hljs-keyword">for</span> line <span class=3D"hljs-keywor=
d">in</span> lines:
        <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t col2=
 \t ...</span>
        cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in=
">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
            second_directory =3D os.path.basename(os.path.normpath(cols[<sp=
an class=3D"hljs-number">1</span>].strip()))
            directory_path =3D os.path.join(NETWORK_PATH, second_directory)
           =20
            matching_files =3D [os.path.join(directory_path, f) <span class=
=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> os.li=
stdir(directory_path) <span class=3D"hljs-keyword">if</span> os.path.isfile=
(os.path.join(directory_path, f))]
           =20
            <span class=3D"hljs-keyword">if</span> matching_files:
                output_zip_name =3D os.path.join(NETWORK_PATH, <span class=
=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<span cla=
ss=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                create_zip_file(output_zip_name, matching_files)
                <span class=3D"hljs-built_in">print</span>(<span class=3D"h=
ljs-string">f'ZIP file "<span class=3D"hljs-subst">{output_zip_name}</span>=
" created successfully.'</span>)
   =20
    update_processed_files(file_path)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>This updated script creates a separate ZIP file=
 for each second directory in the path of each TSV line, with the ZIP file =
named using the execution date and second directory name. Adjust the <code>=
TSV_DIRECTORY_PATH</code> variable to your specific network folder path for=
 incoming TSV files.</p></div></div></div><div class=3D"flex justify-betwee=
n empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg=
:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-cen=
ter gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"=
flex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo:gap=
-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-200 disabled:dark:h=
over:text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible =
md:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C1=
0.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.=
8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34=
315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.3=
4315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44=
772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C1=
6 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"=
></path></svg></button><div class=3D"flex gap-1"><button class=3D"p-1 gizmo=
:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200=
 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group=
-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.57=
78 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17=
.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.09=
31 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4=
.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L1=
2.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19=
.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10=
.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.99=
32 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C=
10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 =
11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5=
 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></button><b=
utton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 =
dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-9=
50 md:invisible md:group-hover:visible md:group-[.final-completion]:visible=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0=
423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975=
 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.436=
84 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.=
34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 =
15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 =
4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13=
 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.66=
12 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 1=
9.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0=
045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.6=
4937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V=
12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></=
path></svg></button></div></div></div></div></div></div></div></div><div cl=
ass=3D"w-full text-token-text-primary border-b border-black/10 gizmo:border=
-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg=
-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-12" s=
tyle=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-cent=
er text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-=
base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5=
 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gi=
zmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex=
 flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizm=
o-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full"><div class=3D"relative flex"><img alt=3D"User" loading=3D"lazy"=
 width=3D"24" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rou=
nded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX=
38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div>=
</div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col =
gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-no=
ne">You</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex=
-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa2b830-e694-43a7-8f19-ea8ddd961fc3" class=3D=
"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D""=
>Have the ability to handle multiple TSV files created all at once.  Ensure=
 the observer has the ability to earmark that your process had picked up ea=
ch of those files.</div></div></div><div class=3D"flex justify-between empt=
y:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex"=
><div class=3D"text-gray-400 flex self-end lg:self-center justify-center gi=
zmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"p-1 gi=
zmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-=
200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:gr=
oup-hover:visible md:group-[.final-completion]:visible"><div class=3D"flex =
items-center gap-1.5 text-xs"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C=
15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21.4783 8.93=
588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.696 10.1489 =
19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.9355 3.292=
89 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824 14.4678C4=
.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13 7.41422L6=
.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.21655 18.78=
35L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L16.5858 11=
L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3=
027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291=
L18 9.5858Z" fill=3D"currentColor"></path></svg></div></button></div></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary =
border-b border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:=
border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:dark:bg-tr=
ansparent" data-testid=3D"conversation-turn-13" style=3D"--avatar-color: #1=
9c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:p=
y-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizm=
o:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38=
rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:ma=
x-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relative items-e=
nd"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w=
-6 items-center justify-center overflow-hidden rounded-full"><div class=3D"=
relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center=
" style=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24px;"=
><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-=
9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241=
 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6=
8622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 =
3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1=
295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1=
6803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085=
 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02=
839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5=
467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 2=
8.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.81=
23 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C=
15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.=
5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.170=
4 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 3=
5.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371=
 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16=
.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7=
601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 2=
6.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.28=
25V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C2=
9.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946=
 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6=
.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0=
187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 =
30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 =
25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.=
0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.864=
3 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM=
4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.=
4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638=
 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26=
.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.130=
7 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.=
06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.61=
94ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 =
12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.=
7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244=
 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.=
1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.604=
7 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20=
.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464=
 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6=
803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712=
L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16=
.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.539=
03 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 =
7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.=
5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.98=
93 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 =
19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3=
8544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.264=
9 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22=
.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.8635=
6 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 2=
1.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4=
983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div=
></div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col=
 gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"font-semibo=
ld select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div cl=
ass=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"bf37b785-abe9-4afc-8026-47=
51850e3224" class=3D"min-h-[20px] text-message flex flex-col items-start ga=
p-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-a=
uto"><div class=3D"markdown prose w-full break-words dark:prose-invert dark=
"><p>Certainly! I've made modifications to handle multiple TSV files create=
d simultaneously. The observer now keeps track of processed files for each =
TSV file. Please find the updated code below:</p><pre><div class=3D"bg-blac=
k rounded-md"><div class=3D"flex items-center relative text-gray-200 bg-gra=
y-800 gizmo:dark:bg-token-surface-primary px-4 py-2 text-xs font-sans justi=
fy-between rounded-t-md"><span>python</span><button class=3D"flex ml-auto g=
izmo:ml-0 gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-s=
m"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 1=
0 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.51=
94 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V1=
9C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.343=
15 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 2=
0H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 =
15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></=
svg>Copy code</button></div><div class=3D"p-4 overflow-y-auto"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'processed_files_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.process_tsv_file(event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" already =
processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        authenticate_to_network()
        start_time =3D datetime.now().strftime(<span class=3D"hljs-string">=
'%Y%m%d%H%M'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <span cl=
ass=3D"hljs-keyword">as</span> tsvfile:
            lines =3D tsvfile.readlines()

        <span class=3D"hljs-keyword">for</span> line <span class=3D"hljs-ke=
yword">in</span> lines:
            <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t =
col2 \t ...</span>
            cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                second_directory =3D os.path.basename(os.path.normpath(cols=
[<span class=3D"hljs-number">1</span>].strip()))
                directory_path =3D os.path.join(NETWORK_PATH, second_direct=
ory)
               =20
                matching_files =3D [os.path.join(directory_path, f) <span c=
lass=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> o=
s.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.path.is=
file(os.path.join(directory_path, f))]
               =20
                <span class=3D"hljs-keyword">if</span> matching_files:
                    output_zip_name =3D os.path.join(NETWORK_PATH, <span cl=
ass=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<span =
class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                    create_zip_file(output_zip_name, matching_files)
                    <span class=3D"hljs-built_in">print</span>(<span class=
=3D"hljs-string">f'ZIP file "<span class=3D"hljs-subst">{output_zip_name}</=
span>" created successfully.'</span>)
       =20
        self.processed_files.add(file_path)
        self.update_processed_files_log(file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_file</span>(<span class=3D"hljs-params">zip_name, file_paths</=
span>):
    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(zip_name, <spa=
n class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as</span> =
zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            zipf.write(file_path, os.path.basename(file_path))

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>In this version, a set (<code>processed_files</=
code>) is used to keep track of processed TSV files, and each TSV file has =
its own log directory. This ensures that each TSV file is processed indepen=
dently, and the observer marks each TSV file as processed. Adjust the <code=
>LOG_DIRECTORY_PATH</code> variable to your desired location for storing pr=
ocessed files logs.</p></div></div></div><div class=3D"flex justify-between=
 empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:=
flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-cent=
er gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"f=
lex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo:gap-=
1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-200 disabled:dark:ho=
ver:text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible m=
d:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8=
954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.804=
4 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315=
 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.3431=
5 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772=
 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7=
.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></=
path></svg></button><div class=3D"flex gap-1"><button class=3D"p-1 gizmo:pl=
-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200 da=
rk:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group-ho=
ver:visible md:group-[.final-completion]:visible"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.5778=
 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17.0=
722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.0931=
 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4.3=
4315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L12.=
1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19.0=
018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10.8=
494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.9932=
 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C10=
.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 11=
V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5 1=
1.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></button><but=
ton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 da=
rk:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950=
 md:invisible md:group-hover:visible md:group-[.final-completion]:visible">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0=
423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975=
 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.436=
84 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.=
34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 =
15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 =
4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13=
 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.66=
12 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 1=
9.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0=
045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.6=
4937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V=
12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></=
path></svg></button></div></div></div></div></div></div></div></div><div cl=
ass=3D"w-full text-token-text-primary border-b border-black/10 gizmo:border=
-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg=
-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-14" s=
tyle=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-cent=
er text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-=
base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5=
 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gi=
zmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex=
 flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizm=
o-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full"><div class=3D"relative flex"><img alt=3D"User" loading=3D"lazy"=
 width=3D"24" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rou=
nded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX=
38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div>=
</div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col =
gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-no=
ne">You</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex=
-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa2e92f-248a-467c-86ac-1b5dfa534cd6" class=3D=
"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D""=
>Add a limit to the output zip file size of 10gb.  Of more files need to be=
 written out to the same zip directory, create a new zip file with a part s=
uffix to the zip file name</div></div></div><div class=3D"flex justify-betw=
een empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:=
lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-c=
enter gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=
=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:=
text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invis=
ible md:group-hover:visible md:group-[.final-completion]:visible"><div clas=
s=3D"flex items-center gap-1.5 text-xs"><svg width=3D"24" height=3D"24" vie=
wBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.292=
9 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21=
.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.69=
6 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.=
9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824=
 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13=
 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.2=
1655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L=
16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.=
71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.29=
29 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg></div></button></=
div></div></div></div></div></div></div><div class=3D"w-full text-token-tex=
t-primary border-b border-black/10 gizmo:border-0 dark:border-gray-900/50 g=
izmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:=
dark:bg-transparent" data-testid=3D"conversation-turn-15" style=3D"--avatar=
-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:=
gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:=
gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg=
:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48=
rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relati=
ve items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke =
flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><div=
 class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center just=
ify-center" style=3D"background-color: rgb(25, 195, 125); width: 24px; heig=
ht: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><te=
xt x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.980=
8 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 3=
6.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941=
 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.3=
6341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14=
.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4781=
5C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.=
0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.94=
4492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 =
2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.=
1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789=
 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21=
.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.57=
72C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 =
32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.845=
8 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 3=
7.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.=
1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 =
31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5=
549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 =
21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.37=
5 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 3=
7.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.5=
5718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408=
 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.724=
8L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24=
.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.74=
16 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 =
31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.=
19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2533=
4 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L1=
8.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.51=
73C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 2=
2.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29=
707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872=
 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12=
.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.319=
4 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35=
.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.59=
47 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 3=
2.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.012=
8C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.=
1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.796=
3 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 1=
1.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4=
053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077=
 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12=
.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8=
576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254=
 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12=
.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.994=
64 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4=
.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.53=
66 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L=
14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.=
4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></=
div></div></div></div></div><div class=3D"relative flex w-[calc(100%-50px)]=
 flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"fo=
nt-semibold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3=
"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div =
data-message-author-role=3D"assistant" data-message-id=3D"4acb0259-e6ff-44e=
a-945e-5d4591b81d8a" class=3D"min-h-[20px] text-message flex flex-col items=
-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 ove=
rflow-x-auto"><div class=3D"markdown prose w-full break-words dark:prose-in=
vert dark"><p>Certainly! I've added functionality to limit the output ZIP f=
ile size to 10GB, and if more files need to be written to the same ZIP dire=
ctory, a new ZIP file with a part suffix is created. Please find the update=
d code below:</p><pre><div class=3D"bg-black rounded-md"><div class=3D"flex=
 items-center relative text-gray-200 bg-gray-800 gizmo:dark:bg-token-surfac=
e-primary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>p=
ython</span><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" c=
lip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.=
1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.80=
44 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C=
5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 =
6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19=
V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.=
10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></div><div=
 class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language=
-python"><span class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'processed_files_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.process_tsv_file(event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" already =
processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        authenticate_to_network()
        start_time =3D datetime.now().strftime(<span class=3D"hljs-string">=
'%Y%m%d%H%M'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <span cl=
ass=3D"hljs-keyword">as</span> tsvfile:
            lines =3D tsvfile.readlines()

        <span class=3D"hljs-keyword">for</span> line <span class=3D"hljs-ke=
yword">in</span> lines:
            <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t =
col2 \t ...</span>
            cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                second_directory =3D os.path.basename(os.path.normpath(cols=
[<span class=3D"hljs-number">1</span>].strip()))
                directory_path =3D os.path.join(NETWORK_PATH, second_direct=
ory)
               =20
                matching_files =3D [os.path.join(directory_path, f) <span c=
lass=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> o=
s.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.path.is=
file(os.path.join(directory_path, f))]
               =20
                <span class=3D"hljs-keyword">if</span> matching_files:
                    output_zip_name =3D os.path.join(NETWORK_PATH, <span cl=
ass=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<span =
class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                    create_zip_parts(output_zip_name, matching_files)
                    <span class=3D"hljs-built_in">print</span>(<span class=
=3D"hljs-string">f'ZIP file(s) "<span class=3D"hljs-subst">{output_zip_name=
}</span>" created successfully.'</span>)
       =20
        self.processed_files.add(file_path)
        self.update_processed_files_log(file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths<=
/span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            file_size =3D os.path.getsize(file_path)

            <span class=3D"hljs-keyword">if</span> current_zip_size + file_=
size &gt; ZIP_SIZE_LIMIT:
                part_number +=3D <span class=3D"hljs-number">1</span>
                current_zip_name =3D <span class=3D"hljs-string">f'<span cl=
ass=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_n=
umber}</span>'</span>
                current_zip_size =3D <span class=3D"hljs-number">0</span>

            zipf.write(file_path, os.path.basename(file_path))
            current_zip_size +=3D file_size

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>In this version, the <code>create_zip_parts</co=
de> function is responsible for handling the ZIP size limit and creating ne=
w ZIP files with part suffixes if needed. Adjust the <code>ZIP_SIZE_LIMIT</=
code> variable to your desired limit.</p></div></div></div><div class=3D"fl=
ex justify-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 =
lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-c=
enter justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1">=
<button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 =
text-xs gizmo:gap-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-20=
0 disabled:dark:hover:text-gray-400 hover:text-gray-950 md:invisible md:gro=
up-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.535=
13 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18=
.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.65=
69 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19=
C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5=
523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=
=3D"currentColor"></path></svg></button><div class=3D"flex gap-1"><button c=
lass=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:ho=
ver:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:i=
nvisible md:group-hover:visible md:group-[.final-completion]:visible"><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip=
-rule=3D"evenodd" d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.=
124 2.00775L13.5778 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L=
16.354 8.99999H17.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5=
677 19.0525C19.0931 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 =
19V12C3 10.3431 4.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094=
 8.6279 8.63561L12.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 1=
7.6381 18.5262L19.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6=
827 11 14.3841 10.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0=
442 9.70591L14.9932 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468=
L10.3644 9.62789C10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.4=
4772 20 10 20ZM7 11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 =
19.5523 5 19V12C5 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path>=
</svg></button><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hov=
er:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 =
hover:text-gray-950 md:invisible md:group-hover:visible md:group-[.final-co=
mpletion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.=
8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.3685=
5 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0=
732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.=
6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H1=
6.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4=
H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 =
11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4=
059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 =
18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.=
4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045=
 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4=
.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D=
"currentColor"></path></svg></button></div></div></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary border-b border-blac=
k/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-tr=
ansparent dark:bg-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conver=
sation-turn-16" style=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:=
py-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex f=
lex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:p=
x-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg=
:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"f=
lex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><=
div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center o=
verflow-hidden rounded-full"><div class=3D"relative flex"><img alt=3D"User"=
 loading=3D"lazy" width=3D"24" height=3D"24" decoding=3D"async" data-nimg=
=3D"1" class=3D"rounded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdF=
Tp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transpa=
rent;"></div></div></div></div></div><div class=3D"relative flex w-[calc(10=
0%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font=
-semibold select-none">You</div><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-m=
essage-author-role=3D"user" data-message-id=3D"aaa2e6b9-2f29-41b1-8547-7f03=
6b5f504e" class=3D"min-h-[20px] text-message flex flex-col items-start gap-=
3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-aut=
o"><div class=3D"">Work on every new TSV file in parallel </div></div></div=
><div class=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:justify-s=
tart gizmo:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex s=
elf-end lg:self-center justify-center gizmo:lg:justify-start mt-2 gizmo:mt-=
0 visible gap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:h=
over:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-40=
0 hover:text-gray-950 md:invisible md:group-hover:visible md:group-[.final-=
completion]:visible"><div class=3D"flex items-center gap-1.5 text-xs"><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip=
-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.=
7071 4.2929C21.4783 6.06414 21.4783 8.93588 19.7071 10.7071L18.7073 11.7069=
L11.1603 19.2539C10.7182 19.696 10.1489 19.989 9.53219 20.0918L4.1644 20.98=
64C3.84584 21.0395 3.52125 20.9355 3.29289 20.7071C3.06453 20.4788 2.96051 =
20.1542 3.0136 19.8356L3.90824 14.4678C4.01103 13.8511 4.30396 13.2818 4.74=
61 12.8397L13.2929 4.29291ZM13 7.41422L6.16031 14.2539C6.01293 14.4013 5.91=
529 14.591 5.88102 14.7966L5.21655 18.7835L9.20339 18.119C9.40898 18.0847 9=
.59872 17.9871 9.7461 17.8397L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00=
001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831=
 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor">=
</path></svg></div></button></div></div></div></div></div></div></div><div =
class=3D"w-full text-token-text-primary border-b border-black/10 gizmo:bord=
er-0 dark:border-gray-900/50 gizmo:dark:border-0 bg-gray-50 gizmo:bg-transp=
arent dark:bg-[#444654] gizmo:dark:bg-transparent" data-testid=3D"conversat=
ion-turn-17" style=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-=
2 justify-center text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex=
-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1=
 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:ma=
x-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex=
-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><div=
 class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center over=
flow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 tex=
t-white flex items-center justify-center" style=3D"background-color: rgb(25=
, 195, 125); width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" vi=
ewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><pat=
h d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.=
8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 =
32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.78=
93 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.305=
8 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624=
 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.175=
05C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905=
 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.=
81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.08=
92 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 3=
7.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3=
747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054=
 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33=
.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728=
 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.=
8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.88=
74 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36=
.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.496=
4 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21=
.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867=
 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.=
0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.197=
42 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L=
13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 =
14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7=
283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012=
L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33=
.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55=
279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071=
V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6=
4893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089=
 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.=
5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.0386=
2 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L2=
5.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4=
769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 =
18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3=
617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717=
 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.=
6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 =
31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8=
717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 =
10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.=
9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.120=
7 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C2=
9.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53=
945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.242=
4 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C1=
0.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2=
173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264=
C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9=
3941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024=
 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14=
.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.49=
78L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D=
"currentColor"></path></svg></div></div></div></div></div><div class=3D"rel=
ative flex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)=
] agent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><div cl=
ass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w=
-full gap-3 gizmo:gap-0"><div data-message-author-role=3D"assistant" data-m=
essage-id=3D"a2c13b37-2e57-49c3-8029-f0d612b797ba" class=3D"min-h-[20px] te=
xt-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words =
[.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-=
full break-words dark:prose-invert dark"><p>Certainly! I've modified the co=
de to process every new TSV file in parallel using the <code>concurrent.fut=
ures</code> module. Each TSV file is processed independently, and the creat=
ion of ZIP files is parallelized. Please find the updated code below:</p><p=
re><div class=3D"bg-black rounded-md"><div class=3D"flex items-center relat=
ive text-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-primary px-4 py-2=
 text-xs font-sans justify-between rounded-t-md"><span>python</span><button=
 class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg width=3D"24" hei=
ght=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd=
" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.5351=
3 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.=
6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.656=
9 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C=
6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.55=
23 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D=
"currentColor"></path></svg>Copy code</button></div><div class=3D"p-4 overf=
low-y-auto"><code class=3D"!whitespace-pre hljs language-python"><span clas=
s=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'processed_files_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" already =
processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        authenticate_to_network()
        start_time =3D datetime.now().strftime(<span class=3D"hljs-string">=
'%Y%m%d%H%M'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <span cl=
ass=3D"hljs-keyword">as</span> tsvfile:
            lines =3D tsvfile.readlines()

        futures =3D []
        <span class=3D"hljs-keyword">for</span> line <span class=3D"hljs-ke=
yword">in</span> lines:
            <span class=3D"hljs-comment"># Assuming TSV structure: col1 \t =
col2 \t ...</span>
            cols =3D line.split(<span class=3D"hljs-string">'\t'</span>)
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                second_directory =3D os.path.basename(os.path.normpath(cols=
[<span class=3D"hljs-number">1</span>].strip()))
                directory_path =3D os.path.join(NETWORK_PATH, second_direct=
ory)
               =20
                matching_files =3D [os.path.join(directory_path, f) <span c=
lass=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</span> o=
s.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.path.is=
file(os.path.join(directory_path, f))]
               =20
                <span class=3D"hljs-keyword">if</span> matching_files:
                    output_zip_name =3D os.path.join(NETWORK_PATH, <span cl=
ass=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<span =
class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                    futures.append(self.executor.submit(create_zip_parts, o=
utput_zip_name, matching_files))

        <span class=3D"hljs-comment"># Wait for all ZIP creation tasks to c=
omplete</span>
        <span class=3D"hljs-keyword">for</span> future <span class=3D"hljs-=
keyword">in</span> futures:
            future.result()

        self.processed_files.add(file_path)
        self.update_processed_files_log(file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths<=
/span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            file_size =3D os.path.getsize(file_path)

            <span class=3D"hljs-keyword">if</span> current_zip_size + file_=
size &gt; ZIP_SIZE_LIMIT:
                part_number +=3D <span class=3D"hljs-number">1</span>
                current_zip_name =3D <span class=3D"hljs-string">f'<span cl=
ass=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_n=
umber}</span>'</span>
                current_zip_size =3D <span class=3D"hljs-number">0</span>

            zipf.write(file_path, os.path.basename(file_path))
            current_zip_size +=3D file_size

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>Now, the script processes each new TSV file in =
parallel, and within each TSV file, the creation of ZIP files is also paral=
lelized for different second directories. Adjust the <code>ZIP_SIZE_LIMIT</=
code> variable to your desired limit.</p></div></div></div><div class=3D"fl=
ex justify-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 =
lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-c=
enter justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1">=
<button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 =
text-xs gizmo:gap-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-20=
0 disabled:dark:hover:text-gray-400 hover:text-gray-950 md:invisible md:gro=
up-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.535=
13 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18=
.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.65=
69 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19=
C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5=
523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=
=3D"currentColor"></path></svg></button><div class=3D"flex gap-1"><button c=
lass=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:ho=
ver:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:i=
nvisible md:group-hover:visible md:group-[.final-completion]:visible"><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip=
-rule=3D"evenodd" d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.=
124 2.00775L13.5778 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L=
16.354 8.99999H17.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5=
677 19.0525C19.0931 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 =
19V12C3 10.3431 4.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094=
 8.6279 8.63561L12.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 1=
7.6381 18.5262L19.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6=
827 11 14.3841 10.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0=
442 9.70591L14.9932 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468=
L10.3644 9.62789C10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.4=
4772 20 10 20ZM7 11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 =
19.5523 5 19V12C5 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path>=
</svg></button><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hov=
er:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 =
hover:text-gray-950 md:invisible md:group-hover:visible md:group-[.final-co=
mpletion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.=
8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.3685=
5 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0=
732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.=
6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H1=
6.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4=
H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 =
11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4=
059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 =
18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.=
4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045=
 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4=
.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D=
"currentColor"></path></svg></button></div></div></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary border-b border-blac=
k/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-tr=
ansparent dark:bg-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conver=
sation-turn-18" style=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:=
py-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex f=
lex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:p=
x-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg=
:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"f=
lex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><=
div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center o=
verflow-hidden rounded-full"><div class=3D"relative flex"><img alt=3D"User"=
 loading=3D"lazy" width=3D"24" height=3D"24" decoding=3D"async" data-nimg=
=3D"1" class=3D"rounded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdF=
Tp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transpa=
rent;"></div></div></div></div></div><div class=3D"relative flex w-[calc(10=
0%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font=
-semibold select-none">You</div><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-m=
essage-author-role=3D"user" data-message-id=3D"aaa266de-a6b0-4bd8-a3dd-e3c5=
8eb6a2b1" class=3D"min-h-[20px] text-message flex flex-col items-start gap-=
3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-aut=
o"><div class=3D"">Your input TSV files will be organized by datetime based=
 directories with a specific format.  Ensure that a lock or claimed file is=
 written in that directory so another instance of your program will not pro=
cess the same tsv file again</div></div></div><div class=3D"flex justify-be=
tween empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizm=
o:lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify=
-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=
=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:=
text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invis=
ible md:group-hover:visible md:group-[.final-completion]:visible"><div clas=
s=3D"flex items-center gap-1.5 text-xs"><svg width=3D"24" height=3D"24" vie=
wBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.292=
9 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21=
.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.69=
6 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.=
9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824=
 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13=
 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.2=
1655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L=
16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.=
71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.29=
29 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg></div></button></=
div></div></div></div></div></div></div><div class=3D"w-full text-token-tex=
t-primary border-b border-black/10 gizmo:border-0 dark:border-gray-900/50 g=
izmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:=
dark:bg-transparent" data-testid=3D"conversation-turn-19" style=3D"--avatar=
-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:=
gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:=
gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg=
:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48=
rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relati=
ve items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke =
flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><div=
 class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center just=
ify-center" style=3D"background-color: rgb(25, 195, 125); width: 24px; heig=
ht: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><te=
xt x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.980=
8 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 3=
6.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941=
 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.3=
6341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14=
.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4781=
5C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.=
0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.94=
4492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 =
2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.=
1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789=
 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21=
.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.57=
72C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 =
32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.845=
8 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 3=
7.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.=
1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 =
31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5=
549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 =
21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.37=
5 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 3=
7.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.5=
5718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408=
 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.724=
8L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24=
.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.74=
16 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 =
31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.=
19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2533=
4 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L1=
8.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.51=
73C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 2=
2.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29=
707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872=
 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12=
.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.319=
4 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35=
.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.59=
47 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 3=
2.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.012=
8C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.=
1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.796=
3 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 1=
1.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4=
053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077=
 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12=
.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8=
576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254=
 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12=
.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.994=
64 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4=
.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.53=
66 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L=
14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.=
4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></=
div></div></div></div></div><div class=3D"relative flex w-[calc(100%-50px)]=
 flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"fo=
nt-semibold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3=
"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div =
data-message-author-role=3D"assistant" data-message-id=3D"de6f0312-0b63-401=
4-97d0-3938d69b3daa" class=3D"min-h-[20px] text-message flex flex-col items=
-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 ove=
rflow-x-auto"><div class=3D"markdown prose w-full break-words dark:prose-in=
vert dark"><p>Certainly! To ensure that a specific TSV file is not processe=
d by multiple instances concurrently, you can use a lock or claimed file in=
 the directory. Here's the modified code with a simple lock mechanism:</p><=
pre><div class=3D"bg-black rounded-md"><div class=3D"flex items-center rela=
tive text-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-primary px-4 py-=
2 text-xs font-sans justify-between rounded-t-md"><span>python</span><butto=
n class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.535=
13 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18=
.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.65=
69 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19=
C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5=
523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=
=3D"currentColor"></path></svg>Copy code</button></div><div class=3D"p-4 ov=
erflow-y-auto"><code class=3D"!whitespace-pre hljs language-python"><span c=
lass=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'processed_files_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" already =
processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" is being=
 processed by another instance. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">acquire_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-comment"># Attempt to create a lock file, if it=
 already exists, return False</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(lock_file_path, <span class=3D"hljs-string">'x'</span>) <sp=
an class=3D"hljs-keyword">as</span> lock_file:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">True</span>
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-lite=
ral">False</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">release_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    os.remove(lock_file_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths<=
/span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            file_size =3D os.path.getsize(file_path)

            <span class=3D"hljs-keyword">if</span> current_zip_size + file_=
size &gt; ZIP_SIZE_LIMIT:
                part_number +=3D <span class=3D"hljs-number">1</span>
                current_zip_name =3D <span class=3D"hljs-string">f'<span cl=
ass=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_n=
umber}</span>'</span>
                current_zip_size =3D <span class=3D"hljs-number">0</span>

            zipf.write(file_path, os.path.basename(file_path))
            current_zip_size +=3D file_size

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>This code uses a lock file named <code>processi=
ng.lock</code> in the same directory as the TSV file. If the lock file is a=
lready present, it means another instance of the program is processing the =
TSV file, and the current instance skips processing. The lock is released a=
fter the TSV file processing is complete. Adjust the <code>TSV_DIRECTORY_PA=
TH</code> variable to your specific network folder path for incoming TSV fi=
les.</p></div></div></div><div class=3D"flex justify-between empty:hidden g=
izmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex"><div clas=
s=3D"text-gray-400 flex self-end lg:self-center justify-center gizmo:lg:jus=
tify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"flex ml-auto giz=
mo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo:gap-1.5 gizmo:pl-0 =
dark:text-gray-400 dark:hover:text-gray-200 disabled:dark:hover:text-gray-4=
00 hover:text-gray-950 md:invisible md:group-hover:visible md:group-[.final=
-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.8954=
3 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 =
2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.=
6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4=
H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.=
5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 =
8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg></bu=
tton><div class=3D"flex gap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md d=
isabled:dark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-40=
0 text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible md:=
group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12.1318 2.=
50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.5778 2.06447C16.044=
9 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17.0722C19.7097 8.9=
9999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.0931 20.7927 17.512=
4 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4.34315 8.99999 6 =
8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L12.1318 2.50389ZM1=
0 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19.0018 13.5262C19.=
3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10.8494 14.1956 10.=
5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.9932 6.62175C15.338=
4 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C10.0522 10.1742 9=
.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 11V19C7 19.3506 7=
.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5 11.4477 5.44772 =
11 6 11H7Z" fill=3D"currentColor"></path></svg></button><button class=3D"p-=
1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-g=
ray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible m=
d:group-hover:visible md:group-[.final-completion]:visible"><svg width=3D"2=
4" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"e=
venodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.99=
22L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 =
15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.9114=
5 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V1=
2C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 1=
5.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364=
 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.004=
51C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.990=
8 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19=
.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.=
0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31=
278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.552=
3 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></butt=
on></div></div></div></div></div></div></div></div><div class=3D"w-full tex=
t-token-text-primary border-b border-black/10 gizmo:border-0 dark:border-gr=
ay-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg-gray-800 gizmo:d=
ark:bg-transparent" data-testid=3D"conversation-turn-20" style=3D"--avatar-=
color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:g=
ap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:g=
ap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:=
max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48r=
em] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relativ=
e items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke f=
lex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><div =
class=3D"relative flex"><img alt=3D"User" loading=3D"lazy" width=3D"24" hei=
ght=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rounded-sm" src=3D"h=
ttps://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1G=
oXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div></div></div></div=
><div class=3D"relative flex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w=
-[calc(100%-115px)]"><div class=3D"font-semibold select-none">You</div><div=
 class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col ma=
x-w-full gap-3 gizmo:gap-0"><div data-message-author-role=3D"user" data-mes=
sage-id=3D"aaa279af-ee90-4bea-9e60-5a16d51ae1eb" class=3D"min-h-[20px] text=
-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.=
text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"">When you are done=
 processing any TSV file successfully, you can leave the lock file on the d=
irectory, except rename it to processed.</div></div></div><div class=3D"fle=
x justify-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 l=
g:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-ce=
nter justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><=
button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400=
 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-=
950 md:invisible md:group-hover:visible md:group-[.final-completion]:visibl=
e"><div class=3D"flex items-center gap-1.5 text-xs"><svg width=3D"24" heigh=
t=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/200=
0/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.478=
3 6.06414 21.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C1=
0.7182 19.696 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395=
 3.52125 20.9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.=
8356L3.90824 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929=
 4.29291ZM13 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102=
 14.7966L5.21655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7=
461 17.8397L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.7071=
2C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8=
.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg></div=
></button></div></div></div></div></div></div></div><div class=3D"w-full te=
xt-token-text-primary border-b border-black/10 gizmo:border-0 dark:border-g=
ray-900/50 gizmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#44=
4654] gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-21" style=
=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center t=
ext-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base=
 mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:=
max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:=
xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex fle=
x-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-sh=
adow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounde=
d-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items=
-center justify-center" style=3D"background-color: rgb(25, 195, 125); width=
: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=
=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16=
.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.39=
34 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.=
0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125=
 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708=
 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8=
.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087=
 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 =
18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66=
413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138=
C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.=
5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.670=
9 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 2=
8.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2=
332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 2=
8.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.96=
39 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733=
 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4=
156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 =
30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0=
198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C2=
9.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.88=
06 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804=
 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.=
8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15=
.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.719=
9 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C1=
4.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7=
263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1988=
5 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20=
.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.848=
63 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 1=
5.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.85=
57C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 =
15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.=
6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.480=
1 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20=
.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.838=
2 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C3=
2.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.54=
74 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35=
.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.271=
2C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10=
.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.95=
85 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 =
7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.=
0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.853=
1C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 =
19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.=
8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.981=
9 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 1=
7.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.850=
67C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9=
.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2=
479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975=
V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></p=
ath></svg></div></div></div></div></div><div class=3D"relative flex w-[calc=
(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div=
 class=3D"font-semibold select-none">ChatGPT</div><div class=3D"flex-col ga=
p-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:=
gap-0"><div data-message-author-role=3D"assistant" data-message-id=3D"cc37f=
85b-e6dc-409d-81ce-cb103a9a3edd" class=3D"min-h-[20px] text-message flex fl=
ex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&am=
p;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-words d=
ark:prose-invert dark"><p>Certainly! I've modified the code to rename the l=
ock file to "processed.lock" after successfully processing a TSV file. This=
 way, the lock file will still be present in the directory, but it will ind=
icate that the TSV file has been successfully processed. Here's the updated=
 code:</p><pre><div class=3D"bg-black rounded-md"><div class=3D"flex items-=
center relative text-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-prima=
ry px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</=
span><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 =
12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4=
649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315=
 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.4=
4772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6=
.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8=
 6Z" fill=3D"currentColor"></path></svg>Copy code</button></div><div class=
=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-pytho=
n"><span class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'processed_files_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" already =
processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">f'TSV file "<span class=3D"hljs-subst">{file_path}</span>" is being=
 processed by another instance. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

            <span class=3D"hljs-comment"># Rename the lock file to indicate=
 processing is complete</span>
            processed_lock_file_path =3D os.path.join(os.path.dirname(file_=
path), <span class=3D"hljs-string">'processed.lock'</span>)
            os.rename(lock_file_path, processed_lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">acquire_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-comment"># Attempt to create a lock file, if it=
 already exists, return False</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(lock_file_path, <span class=3D"hljs-string">'x'</span>) <sp=
an class=3D"hljs-keyword">as</span> lock_file:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">True</span>
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-lite=
ral">False</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">release_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    os.remove(lock_file_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths<=
/span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            file_size =3D os.path.getsize(file_path)

            <span class=3D"hljs-keyword">if</span> current_zip_size + file_=
size &gt; ZIP_SIZE_LIMIT:
                part_number +=3D <span class=3D"hljs-number">1</span>
                current_zip_name =3D <span class=3D"hljs-string">f'<span cl=
ass=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_n=
umber}</span>'</span>
                current_zip_size =3D <span class=3D"hljs-number">0</span>

            zipf.write(file_path, os.path.basename(file_path))
            current_zip_size +=3D file_size

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>This code adds a step to rename the lock file t=
o "processed.lock" after successfully processing a TSV file. Adjust the <co=
de>TSV_DIRECTORY_PATH</code> variable to your specific network folder path =
for incoming TSV files.</p></div></div></div><div class=3D"flex justify-bet=
ween empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo=
:lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-=
center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=
=3D"flex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo=
:gap-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-200 disabled:da=
rk:hover:text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visi=
ble md:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4=
C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 =
2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.=
34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5=
.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.=
44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16=
C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColo=
r"></path></svg></button><div class=3D"flex gap-1"><button class=3D"p-1 giz=
mo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-2=
00 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:gro=
up-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.=
5778 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H=
17.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.=
0931 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431=
 4.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561=
L12.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L=
19.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 =
10.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.=
9932 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.6278=
9C10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM=
7 11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12=
C5 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></button>=
<button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-40=
0 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray=
-950 md:invisible md:group-hover:visible md:group-[.final-completion]:visib=
le"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22=
.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.099=
75 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.4=
3684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 =
3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 1=
5 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.3939=
9 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 =
13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.=
6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608=
 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15=
.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4=
.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 =
5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor">=
</path></svg></button></div></div></div></div></div></div></div></div><div =
class=3D"w-full text-token-text-primary border-b border-black/10 gizmo:bord=
er-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:=
bg-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-22"=
 style=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-ce=
nter text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 tex=
t-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px=
-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] =
gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 fl=
ex flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gi=
zmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden =
rounded-full"><div class=3D"relative flex"><img alt=3D"User" loading=3D"laz=
y" width=3D"24" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"r=
ounded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570Y=
sX38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></di=
v></div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-co=
l gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-=
none">You</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex fl=
ex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-rol=
e=3D"user" data-message-id=3D"aaa28abf-7772-462d-945b-d18177e58dac" class=
=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pr=
e-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"">Create a detailed timestamped log file for each execution activity.</=
div></div></div><div class=3D"flex justify-between empty:hidden gizmo:mt-1 =
gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-=
gray-400 flex self-end lg:self-center justify-center gizmo:lg:justify-start=
 mt-2 gizmo:mt-0 visible gap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md =
disabled:dark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-4=
00 text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible md=
:group-[.final-completion]:visible"><div class=3D"flex items-center gap-1.5=
 text-xs"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"non=
e" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17=
.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21.4783 8.93588 19.7071 10.707=
1L18.7073 11.7069L11.1603 19.2539C10.7182 19.696 10.1489 19.989 9.53219 20.=
0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.9355 3.29289 20.7071C3.06453=
 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824 14.4678C4.01103 13.8511 4.3=
0396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13 7.41422L6.16031 14.2539C6.0=
1293 14.4013 5.91529 14.591 5.88102 14.7966L5.21655 18.7835L9.20339 18.119C=
9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L16.5858 11L13 7.41422ZM18 9.=
5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.292=
9 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=
=3D"currentColor"></path></svg></div></button></div></div></div></div></div=
></div></div><div class=3D"w-full text-token-text-primary border-b border-b=
lack/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-0 bg-gray-=
50 gizmo:bg-transparent dark:bg-[#444654] gizmo:dark:bg-transparent" data-t=
estid=3D"conversation-turn-23" style=3D"--avatar-color: #19c37d;"><div clas=
s=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div =
class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:=
px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max=
-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group">=
<div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div cla=
ss=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center j=
ustify-center overflow-hidden rounded-full"><div class=3D"relative p-1 roun=
ded-sm h-9 w-9 text-white flex items-center justify-center" style=3D"backgr=
ound-color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg width=3D"41=
" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">=
ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 3=
7.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.834=
04 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.=
85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.72=
49 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.422=
14C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8=
.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.95646=
4 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.544=
9 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.=
7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321=
 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17=
.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.49=
98C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 =
35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.1=
15 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 4=
0.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.=
8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666=
 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3=
813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213=
 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.98=
42 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 3=
5.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.5=
1397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.081=
8 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.=
902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24=
.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.08=
93 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 =
34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.=
17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.52=
28 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8=
.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.49=
79C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 =
28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55=
289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556=
L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12=
.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.99=
67 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37=
.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.30=
86 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 =
30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.33=
48 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 1=
4.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.450=
4 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V1=
1.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1=
048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376=
 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.=
40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.30=
55 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763=
 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10=
.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.426=
59 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3=
.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.86=
68 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C=
14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.=
9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985=
V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div=
><div class=3D"relative flex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w=
-[calc(100%-115px)] agent-turn"><div class=3D"font-semibold select-none">Ch=
atGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-g=
row flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=3D=
"assistant" data-message-id=3D"3daa9bcd-5d2e-443a-8900-b85227c20aa3" class=
=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pr=
e-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"markdown prose w-full break-words dark:prose-invert dark"><p>Certainly!=
 I've added a detailed timestamped log file for each execution activity. Th=
is log file will capture information about each TSV file processed, includi=
ng details about the creation of ZIP files, errors, and other relevant info=
rmation. Here's the modified code:</p><pre><div class=3D"bg-black rounded-m=
d"><div class=3D"flex items-center relative text-gray-200 bg-gray-800 gizmo=
:dark:bg-token-surface-primary px-4 py-2 text-xs font-sans justify-between =
rounded-t-md"><span>python</span><button class=3D"flex ml-auto gizmo:ml-0 g=
ap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 1=
0 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C1=
3.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.656=
9 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.=
53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.552=
3 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 1=
4 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy co=
de</button></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitesp=
ace-pre hljs language-python"><span class=3D"hljs-keyword">import</span> cs=
v
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'execution_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" already processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" is being processed by another instance.=
 Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

            log_message(<span class=3D"hljs-string">f'Successfully processe=
d TSV file: <span class=3D"hljs-subst">{file_path}</span>'</span>)

        <span class=3D"hljs-keyword">except</span> Exception <span class=3D=
"hljs-keyword">as</span> e:
            log_message(<span class=3D"hljs-string">f'Error processing TSV =
file "<span class=3D"hljs-subst">{file_path}</span>": <span class=3D"hljs-s=
ubst">{<span class=3D"hljs-built_in">str</span>(e)}</span>'</span>)

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

            <span class=3D"hljs-comment"># Rename the lock file to indicate=
 processing is complete</span>
            processed_lock_file_path =3D os.path.join(os.path.dirname(file_=
path), <span class=3D"hljs-string">'processed.lock'</span>)
            os.rename(lock_file_path, processed_lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">acquire_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-comment"># Attempt to create a lock file, if it=
 already exists, return False</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(lock_file_path, <span class=3D"hljs-string">'x'</span>) <sp=
an class=3D"hljs-keyword">as</span> lock_file:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">True</span>
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-lite=
ral">False</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">release_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    os.remove(lock_file_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths<=
/span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        <span class=3D"hljs-keyword">for</span> file_path <span class=3D"hl=
js-keyword">in</span> file_paths:
            file_size =3D os.path.getsize(file_path)

            <span class=3D"hljs-keyword">if</span> current_zip_size + file_=
size &gt; ZIP_SIZE_LIMIT:
                part_number +=3D <span class=3D"hljs-number">1</span>
                current_zip_name =3D <span class=3D"hljs-string">f'<span cl=
ass=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_n=
umber}</span>'</span>
                current_zip_size =3D <span class=3D"hljs-number">0</span>

            zipf.write(file_path, os.path.basename(file_path))
            current_zip_size +=3D file_size

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_message</span>(<span class=3D"hljs-params">message</span>):
    log_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y-%m=
-%d %H:%M:%S'</span>)
    log_entry =3D <span class=3D"hljs-string">f'[<span class=3D"hljs-subst"=
>{log_time
</span></span></code></div></div></pre></div></div></div><div class=3D"flex=
 justify-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg=
:block gizmo:lg:flex"><div class=3D"text-xs flex items-center justify-cente=
r gap-1 self-center pt-2 gizmo:pt-0 visible"><button class=3D"dark:text-whi=
te disabled:text-gray-300 dark:disabled:text-gray-400"><svg stroke=3D"curre=
ntColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-line=
cap=3D"round" stroke-linejoin=3D"round" class=3D"icon-xs" height=3D"1em" wi=
dth=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><polyline points=3D"15 18 =
9 12 15 6"></polyline></svg></button><span class=3D"flex-grow flex-shrink-0=
 tabular-nums">2 / 2</span><button disabled=3D"" class=3D"dark:text-white d=
isabled:text-gray-300 dark:disabled:text-gray-400"><svg stroke=3D"currentCo=
lor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=
=3D"round" stroke-linejoin=3D"round" class=3D"icon-xs" height=3D"1em" width=
=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><polyline points=3D"9 18 15 1=
2 9 6"></polyline></svg></button></div><div class=3D"text-gray-400 flex sel=
f-end lg:self-center justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 =
visible gap-1"><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center =
rounded-md p-1 text-xs gizmo:gap-1.5 gizmo:pl-0 dark:text-gray-400 dark:hov=
er:text-gray-200 disabled:dark:hover:text-gray-400 hover:text-gray-950 md:i=
nvisible md:group-hover:visible md:group-[.final-completion]:visible"><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip=
-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.104=
6 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 =
15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.3=
4315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6=
 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C=
18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.104=
57 8 6Z" fill=3D"currentColor"></path></svg></button><div class=3D"flex gap=
-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gra=
y-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-=
gray-950 md:invisible md:group-hover:visible md:group-[.final-completion]:v=
isible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M12.1318 2.50389C12.3321 2.15338 12.723=
5 1.95768 13.124 2.00775L13.5778 2.06447C16.0449 2.37286 17.636 4.83353 16.=
9048 7.20993L16.354 8.99999H17.0722C19.7097 8.99999 21.6253 11.5079 20.9313=
 14.0525L19.5677 19.0525C19.0931 20.7927 17.5124 22 15.7086 22H6C4.34315 22=
 3 20.6568 3 19V12C3 10.3431 4.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.=
49914 8.86094 8.6279 8.63561L12.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4=
008 19.3964 17.6381 18.5262L19.0018 13.5262C19.3488 12.2539 18.391 11 17.07=
22 11H15C14.6827 11 14.3841 10.8494 14.1956 10.5941C14.0071 10.3388 13.9509=
 10.0092 14.0442 9.70591L14.9932 6.62175C15.3384 5.49984 14.6484 4.34036 13=
.5319 4.08468L10.3644 9.62789C10.0522 10.1742 9.56691 10.5859 9 10.8098V19C=
9 19.5523 9.44772 20 10 20ZM7 11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C=
5.44772 20 5 19.5523 5 19V12C5 11.4477 5.44772 11 6 11H7Z" fill=3D"currentC=
olor"></path></svg></button><button class=3D"p-1 gizmo:pl-0 rounded-md disa=
bled:dark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 t=
ext-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible md:gro=
up-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"=
0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon=
-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.496=
1C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 2=
1.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.3792=
3 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 =
2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15=
 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.49=
61ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.=
4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.150=
6 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17=
.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.952=
3 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.00=
45 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.556=
8 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0=
045Z" fill=3D"currentColor"></path></svg></button></div></div></div></div><=
/div></div></div></div><div class=3D"w-full text-token-text-primary border-=
b border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-=
0 gizmo:bg-transparent dark:bg-gray-800 gizmo:dark:bg-transparent" data-tes=
tid=3D"conversation-turn-24" style=3D"--avatar-color: #19c37d;"><div class=
=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div c=
lass=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:p=
x-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-=
w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><=
div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div clas=
s=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center ju=
stify-center overflow-hidden rounded-full"><div class=3D"relative flex"><im=
g alt=3D"User" loading=3D"lazy" width=3D"24" height=3D"24" decoding=3D"asyn=
c" data-nimg=3D"1" class=3D"rounded-sm" src=3D"https://lh3.googleuserconten=
t.com/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"co=
lor: transparent;"></div></div></div></div></div><div class=3D"relative fle=
x w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)]"><div c=
lass=3D"font-semibold select-none">You</div><div class=3D"flex-col gap-1 md=
:gap-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa2a95c-9535-47=
b2-b0cf-f50d03635968" class=3D"min-h-[20px] text-message flex flex-col item=
s-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 ov=
erflow-x-auto"><div class=3D"">For each zip file, create an index file that=
 lists out each file that was packaged in the zip.</div></div></div><div cl=
ass=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:justify-start giz=
mo:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-end =
lg:self-center justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visibl=
e gap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:tex=
t-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:=
text-gray-950 md:invisible md:group-hover:visible md:group-[.final-completi=
on]:visible"><div class=3D"flex items-center gap-1.5 text-xs"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2=
929C21.4783 6.06414 21.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603=
 19.2539C10.7182 19.696 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.845=
84 21.0395 3.52125 20.9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 =
3.0136 19.8356L3.90824 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.83=
97L13.2929 4.29291ZM13 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.5=
91 5.88102 14.7966L5.21655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 1=
7.9871 9.7461 17.8397L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7=
071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731=
 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path><=
/svg></div></button></div></div></div></div></div></div></div><div class=3D=
"w-full text-token-text-primary border-b border-black/10 gizmo:border-0 dar=
k:border-gray-900/50 gizmo:dark:border-0 bg-gray-50 gizmo:bg-transparent da=
rk:bg-[#444654] gizmo:dark:bg-transparent" data-testid=3D"conversation-turn=
-25" style=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justif=
y-center text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4=
 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:x=
l:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40r=
em] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-=
0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=
=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-h=
idden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-whit=
e flex items-center justify-center" style=3D"background-color: rgb(25, 195,=
 125); width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=
=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=
=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.840=
9 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.=
0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 =
23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0=
.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.=
34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C=
3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16=
.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.819=
66 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 =
4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3=
704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747=
 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26=
.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.51=
79C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29=
.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.855=
6 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 =
19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.01=
61L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 3=
0.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.00=
68 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21=
.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.089=
2 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 =
27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.=
699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.=
8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283=
 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16=
.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.98=
11 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279=
 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19=
.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6489=
3 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15=
.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.508=
2L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 1=
7.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5=
976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769=
 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.=
8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617=
 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32=
.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.606=
6 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.=
955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717=
L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.=
0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.978=
3 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 1=
1.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6=
608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945=
 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 2=
1.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8=
195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173=
 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16=
.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9394=
1 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.=
58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.24=
66 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L=
24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"cu=
rrentColor"></path></svg></div></div></div></div></div><div class=3D"relati=
ve flex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)] a=
gent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll gap-3 gizmo:gap-0"><div data-message-author-role=3D"assistant" data-mess=
age-id=3D"b56b22dd-fd69-438a-b3e1-92f0c67d466b" class=3D"min-h-[20px] text-=
message flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.t=
ext-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-ful=
l break-words dark:prose-invert dark"><p>Certainly! I've added functionalit=
y to create an index file for each ZIP file. The index file will list out e=
ach file that was packaged in the corresponding ZIP file. Here's the modifi=
ed code:</p><pre><div class=3D"bg-black rounded-md"><div class=3D"flex item=
s-center relative text-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-pri=
mary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python=
</span><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 =
4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15=
.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.343=
15 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6=
.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18=
 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457=
 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></div><div clas=
s=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-pyth=
on"><span class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'execution_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" already processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" is being processed by another instance.=
 Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

            log_message(<span class=3D"hljs-string">f'Successfully processe=
d TSV file: <span class=3D"hljs-subst">{file_path}</span>'</span>)

        <span class=3D"hljs-keyword">except</span> Exception <span class=3D=
"hljs-keyword">as</span> e:
            log_message(<span class=3D"hljs-string">f'Error processing TSV =
file "<span class=3D"hljs-subst">{file_path}</span>": <span class=3D"hljs-s=
ubst">{<span class=3D"hljs-built_in">str</span>(e)}</span>'</span>)

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

            <span class=3D"hljs-comment"># Rename the lock file to indicate=
 processing is complete</span>
            processed_lock_file_path =3D os.path.join(os.path.dirname(file_=
path), <span class=3D"hljs-string">'processed.lock'</span>)
            os.rename(lock_file_path, processed_lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">acquire_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-comment"># Attempt to create a lock file, if it=
 already exists, return False</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(lock_file_path, <span class=3D"hljs-string">'x'</span>) <sp=
an class=3D"hljs-keyword">as</span> lock_file:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">True</span>
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-lite=
ral">False</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">release_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    os.remove(lock_file_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths<=
/span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        index_file_path =3D <span class=3D"hljs-string">f'<span class=3D"hl=
js-subst">{current_zip_name}</span>_index.txt'</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(index_file_path, <span class=3D"hljs-string">'w'</span>) <s=
pan class=3D"hljs-keyword">as</span> index_file:
            <span class=3D"hljs-keyword">for</span> file_path <span class=
=3D"hljs-keyword">in</span> file_paths:
                file_size =3D os.path.getsize(file_path)

                <span class=3D"hljs-keyword">if</span> current_zip_size + f=
ile_size &gt; ZIP_SIZE_LIMIT:
                    part_number +=3D <span class=3D"hljs-number">1</span>
                    current_zip_name =3D <span class=3D"hljs-string">f'<spa=
n class=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{pa=
rt_number}</span>'</span>
                    current_zip_size =3D <span class=3D"hljs-number">0</spa=
n>

                zipf.write(file_path, os.path.basename(file_path))
                current_zip_size +=3D file_size

                index_file.write(<span class=3D"hljs-string">f'<span class=
=3D"hljs-subst">{file_path}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_message</span>(<span class=3D"hljs-params">message</span>):
    log_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y-%m=
-%d %H:%M:%S'</span>)
    log_entry =3D <span class=3D"hljs-string">f'[<span class=3D"hljs-subst"=
>{log_time}</span>] <span class=3D"hljs-subst">{message}</span>'</span>
    log_file_path =3D os.path.join(LOG_DIRECTORY_PATH, <span class=3D"hljs-=
string">'execution_log.txt'</span>)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <span cl=
ass=3D"hljs-keyword">as</span> log_file:
        log_file.write(<span class=3D"hljs-string">f'<span class=3D"hljs-su=
bst">{log_entry}</span>\n'</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>Now, for each ZIP file created, an index file w=
ith the name <code>{zip_name}_index.txt</code> will be generated, listing a=
ll the files packaged in the corresponding ZIP file. The log messages are a=
lso written to an execution log file (<code>execution_log.txt</code>) in th=
e specified <code>LOG_DIRECTORY_PATH</code>.</p></div></div></div><div clas=
s=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo=
:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-end lg=
:self-center justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible =
gap-1"><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center rounded-=
md p-1 text-xs gizmo:gap-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-=
gray-200 disabled:dark:hover:text-gray-400 hover:text-gray-950 md:invisible=
 md:group-hover:visible md:group-[.final-completion]:visible"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4=
ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 =
4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 =
4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772=
 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.447=
72 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z"=
 fill=3D"currentColor"></path></svg></button><div class=3D"flex gap-1"><but=
ton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 da=
rk:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950=
 md:invisible md:group-hover:visible md:group-[.final-completion]:visible">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95=
768 13.124 2.00775L13.5778 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7=
.20993L16.354 8.99999H17.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.05=
25L19.5677 19.0525C19.0931 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.=
6568 3 19V12C3 10.3431 4.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 =
8.86094 8.6279 8.63561L12.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19=
.3964 17.6381 18.5262L19.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H=
15C14.6827 11 14.3841 10.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.00=
92 14.0442 9.70591L14.9932 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 =
4.08468L10.3644 9.62789C10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5=
523 9.44772 20 10 20ZM7 11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.4477=
2 20 5 19.5523 5 19V12C5 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor">=
</path></svg></button><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:d=
ark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gr=
ay-400 hover:text-gray-950 md:invisible md:group-hover:visible md:group-[.f=
inal-completion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24=
 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6=
725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271=
 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4=
921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0=
045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.00=
45 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14=
.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4=
.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.80=
89 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C=
8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8=
258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM=
17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19=
.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" =
fill=3D"currentColor"></path></svg></button></div></div></div></div></div><=
/div></div></div><div class=3D"w-full text-token-text-primary border-b bord=
er-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-0 gizm=
o:bg-transparent dark:bg-gray-800 gizmo:dark:bg-transparent" data-testid=3D=
"conversation-turn-26" style=3D"--avatar-color: #19c37d;"><div class=3D"p-4=
 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div class=3D=
"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 giz=
mo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl g=
izmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div cla=
ss=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt=
-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-c=
enter overflow-hidden rounded-full"><div class=3D"relative flex"><img alt=
=3D"User" loading=3D"lazy" width=3D"24" height=3D"24" decoding=3D"async" da=
ta-nimg=3D"1" class=3D"rounded-sm" src=3D"https://lh3.googleusercontent.com=
/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: =
transparent;"></div></div></div></div></div><div class=3D"relative flex w-[=
calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)]"><div class=
=3D"font-semibold select-none">You</div><div class=3D"flex-col gap-1 md:gap=
-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><di=
v data-message-author-role=3D"user" data-message-id=3D"aaa2ca69-01f0-4cd6-8=
c28-e6144ba4d855" class=3D"min-h-[20px] text-message flex flex-col items-st=
art gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overfl=
ow-x-auto"><div class=3D"">Ensure that a summary file is written out as wel=
l that contains a reference to the index file and the total number of lines=
 in the index file.  Add a logical header to this summary file and pipe del=
imit the values.</div></div></div><div class=3D"flex justify-between empty:=
hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg:flex"><=
div class=3D"text-gray-400 flex self-end lg:self-center justify-center gizm=
o:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"p-1 gizm=
o:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-20=
0 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:grou=
p-hover:visible md:group-[.final-completion]:visible"><div class=3D"flex it=
ems-center gap-1.5 text-xs"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 =
24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15=
.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21.4783 8.9358=
8 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.696 10.1489 19=
.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.9355 3.29289=
 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824 14.4678C4.0=
1103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13 7.41422L6.1=
6031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.21655 18.7835=
L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L16.5858 11L1=
3 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.302=
7 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L1=
8 9.5858Z" fill=3D"currentColor"></path></svg></div></button></div></div></=
div></div></div></div></div><div class=3D"w-full text-token-text-primary bo=
rder-b border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:bo=
rder-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:dark:bg-tran=
sparent" data-testid=3D"conversation-turn-27" style=3D"--avatar-color: #19c=
37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-=
6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:=
gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38re=
m] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-=
w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col relative items-end=
"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6=
 items-center justify-center overflow-hidden rounded-full"><div class=3D"re=
lative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center" =
style=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24px;"><=
svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-999=
9" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38=
.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6862=
2C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.4=
0259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295=
 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1680=
3 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.=
76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839=
 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467=
 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3=
141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 =
35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.=
9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.508=
7 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 3=
7.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9=
659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40=
.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.87=
07ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601=
 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2=
663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V=
19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.9=
77 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34=
.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39=
227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187=
 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.=
902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.=
1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.073=
6 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 3=
5.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.2=
9707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.401=
3 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.=
36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.55=
42L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 2=
8.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.067=
16 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194Z=
M31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.=
4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.763=
1 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37=
.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.175=
9C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 3=
0.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.53=
38C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14=
.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803=
 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16=
.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.09=
21 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 =
26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.5=
9508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.546=
4 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 =
10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.=
9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3854=
4 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3=
.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.93=
7 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 1=
4.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9=
419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983=
L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></=
div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col gi=
zmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D"font-semibold =
select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div class=
=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message=
-author-role=3D"assistant" data-message-id=3D"55bfd25f-4266-4a9f-90fb-71867=
8208e2d" class=3D"min-h-[20px] text-message flex flex-col items-start gap-3=
 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto=
"><div class=3D"markdown prose w-full break-words dark:prose-invert dark"><=
p>Certainly! I've added functionality to create a summary file for each exe=
cution. This summary file contains a reference to the index file and the to=
tal number of lines in the index file. Each line in the summary file is pip=
e-delimited with a logical header. Here's the modified code:</p><pre><div c=
lass=3D"bg-black rounded-md"><div class=3D"flex items-center relative text-=
gray-200 bg-gray-800 gizmo:dark:bg-token-surface-primary px-4 py-2 text-xs =
font-sans justify-between rounded-t-md"><span>python</span><button class=3D=
"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M1=
2 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.226=
75 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20=
 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C=
4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523=
 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6=
H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentC=
olor"></path></svg>Copy code</button></div><div class=3D"p-4 overflow-y-aut=
o"><code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs=
-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'execution_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" already processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" is being processed by another instance.=
 Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files, start_time))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

            log_message(<span class=3D"hljs-string">f'Successfully processe=
d TSV file: <span class=3D"hljs-subst">{file_path}</span>'</span>)

        <span class=3D"hljs-keyword">except</span> Exception <span class=3D=
"hljs-keyword">as</span> e:
            log_message(<span class=3D"hljs-string">f'Error processing TSV =
file "<span class=3D"hljs-subst">{file_path}</span>": <span class=3D"hljs-s=
ubst">{<span class=3D"hljs-built_in">str</span>(e)}</span>'</span>)

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

            <span class=3D"hljs-comment"># Rename the lock file to indicate=
 processing is complete</span>
            processed_lock_file_path =3D os.path.join(os.path.dirname(file_=
path), <span class=3D"hljs-string">'processed.lock'</span>)
            os.rename(lock_file_path, processed_lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">acquire_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-comment"># Attempt to create a lock file, if it=
 already exists, return False</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(lock_file_path, <span class=3D"hljs-string">'x'</span>) <sp=
an class=3D"hljs-keyword">as</span> lock_file:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">True</span>
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-lite=
ral">False</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">release_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    os.remove(lock_file_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths,=
 start_time</span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        index_file_path =3D <span class=3D"hljs-string">f'<span class=3D"hl=
js-subst">{current_zip_name}</span>_index.txt'</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(index_file_path, <span class=3D"hljs-string">'w'</span>) <s=
pan class=3D"hljs-keyword">as</span> index_file:
            <span class=3D"hljs-keyword">for</span> file_path <span class=
=3D"hljs-keyword">in</span> file_paths:
                file_size =3D os.path.getsize(file_path)

                <span class=3D"hljs-keyword">if</span> current_zip_size + f=
ile_size &gt; ZIP_SIZE_LIMIT:
                    part_number +=3D <span class=3D"hljs-number">1</span>
                    current_zip_name =3D <span class=3D"hljs-string">f'<spa=
n class=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{pa=
rt_number}</span>'</span>
                    current_zip_size =3D <span class=3D"hljs-number">0</spa=
n>

              =20
</code></div></div></pre></div></div></div><div class=3D"flex justify-betwe=
en empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:l=
g:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-ce=
nter gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D=
"flex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo:ga=
p-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-200 disabled:dark:=
hover:text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible=
 md:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" view=
Box=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C1=
0.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.=
8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34=
315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.3=
4315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44=
772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C1=
6 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"=
></path></svg></button><div class=3D"flex gap-1"><button class=3D"p-1 gizmo=
:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200=
 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group=
-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.57=
78 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17=
.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.09=
31 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4=
.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L1=
2.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19=
.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10=
.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.99=
32 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C=
10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 =
11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5=
 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></button><b=
utton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 =
dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-9=
50 md:invisible md:group-hover:visible md:group-[.final-completion]:visible=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0=
423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975=
 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.436=
84 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.=
34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 =
15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 =
4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13=
 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.66=
12 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 1=
9.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0=
045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.6=
4937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V=
12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></=
path></svg></button></div></div></div></div></div></div></div></div><div cl=
ass=3D"w-full text-token-text-primary border-b border-black/10 gizmo:border=
-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg=
-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-28" s=
tyle=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-cent=
er text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-=
base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5=
 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gi=
zmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex=
 flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizm=
o-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full"><div class=3D"relative flex"><img alt=3D"User" loading=3D"lazy"=
 width=3D"24" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rou=
nded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX=
38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div>=
</div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col =
gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-no=
ne">You</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex=
-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa2f79f-865b-444b-a3e1-eb8da37fad3c" class=3D=
"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D""=
>Also add a file, name it with suffix of chksm.txt that contains the md5 ch=
ecksum values of each index file and zip file</div></div></div><div class=
=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:=
gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex self-end lg:=
self-center justify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible g=
ap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-g=
ray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:tex=
t-gray-950 md:invisible md:group-hover:visible md:group-[.final-completion]=
:visible"><div class=3D"flex items-center gap-1.5 text-xs"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929=
C21.4783 6.06414 21.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19=
.2539C10.7182 19.696 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 =
21.0395 3.52125 20.9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0=
136 19.8356L3.90824 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L=
13.2929 4.29291ZM13 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 =
5.88102 14.7966L5.21655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9=
871 9.7461 17.8397L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071=
 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19=
.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></sv=
g></div></button></div></div></div></div></div></div></div><div class=3D"w-=
full text-token-text-primary border-b border-black/10 gizmo:border-0 dark:b=
order-gray-900/50 gizmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:=
bg-[#444654] gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-29=
" style=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-c=
enter text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 te=
xt-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:p=
x-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem]=
 gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 f=
lex flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"g=
izmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden=
 rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white fle=
x items-center justify-center" style=3D"background-color: rgb(25, 195, 125)=
; width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 =
0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-s=
m" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.=
5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.274=
4 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4=
985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 =
1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C=
16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.=
44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 =
10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.=
721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.47=
59 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 =
32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8=
907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366=
C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39=
.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.50=
27 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38=
.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.451=
7 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 =
37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.90=
04 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 2=
6.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.95=
41 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30=
.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.483=
8 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 =
5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7=
248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.=
8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376=
 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33=
.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.387=
85 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364=
 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.1=
9351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.826=
7 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28=
.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.0404=
6 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3=
.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4=
981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928=
 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.=
6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878=
 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30=
.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.958=
6 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0=
556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045=
 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.=
9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.075=
3 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L2=
4.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31=
589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334=
 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L1=
0.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9=
441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848=
 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.=
21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.103=
4 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14=
.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.48=
77 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 =
17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentCol=
or"></path></svg></div></div></div></div></div><div class=3D"relative flex =
w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-tur=
n"><div class=3D"font-semibold select-none">ChatGPT</div><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3=
 gizmo:gap-0"><div data-message-author-role=3D"assistant" data-message-id=
=3D"8c8fb6ba-c393-487f-a83c-e570c9c26d02" class=3D"min-h-[20px] text-messag=
e flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-me=
ssage+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full brea=
k-words dark:prose-invert dark"><p>Certainly! I've added functionality to g=
enerate an MD5 checksum file for each index file and ZIP file. The checksum=
 file will be named with a suffix of <code>chksm.txt</code>. Here's the mod=
ified code:</p><pre><div class=3D"bg-black rounded-md"><div class=3D"flex i=
tems-center relative text-gray-200 bg-gray-800 gizmo:dark:bg-token-surface-=
primary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>pyt=
hon</span><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-center"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.10=
46 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044=
 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.=
34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 =
6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7=
C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10=
457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></div><div c=
lass=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-p=
ython"><span class=3D"hljs-keyword">import</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> hashlib
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'execution_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" already processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" is being processed by another instance.=
 Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files, start_time))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

            log_message(<span class=3D"hljs-string">f'Successfully processe=
d TSV file: <span class=3D"hljs-subst">{file_path}</span>'</span>)

        <span class=3D"hljs-keyword">except</span> Exception <span class=3D=
"hljs-keyword">as</span> e:
            log_message(<span class=3D"hljs-string">f'Error processing TSV =
file "<span class=3D"hljs-subst">{file_path}</span>": <span class=3D"hljs-s=
ubst">{<span class=3D"hljs-built_in">str</span>(e)}</span>'</span>)

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

            <span class=3D"hljs-comment"># Rename the lock file to indicate=
 processing is complete</span>
            processed_lock_file_path =3D os.path.join(os.path.dirname(file_=
path), <span class=3D"hljs-string">'processed.lock'</span>)
            os.rename(lock_file_path, processed_lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">acquire_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-comment"># Attempt to create a lock file, if it=
 already exists, return False</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(lock_file_path, <span class=3D"hljs-string">'x'</span>) <sp=
an class=3D"hljs-keyword">as</span> lock_file:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">True</span>
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-lite=
ral">False</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">release_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    os.remove(lock_file_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths,=
 start_time</span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        index_file_path =3D <span class=3D"hljs-string">f'<span class=3D"hl=
js-subst">{current_zip_name}</span>_index.txt'</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(index_file_path, <span class=3D"hljs-string">'w'</span>) <s=
pan class=3D"hljs-keyword">as</span> index_file:
            <span class=3D"hljs-keyword">for</span> file_path <span class=
=3D"hljs-keyword">in</span> file_paths:
                file_size =3D os.path.getsize(file_path)

                <span class=3D"hljs-keyword">if</span> current_zip_size + f=
ile_size &gt; ZIP_SIZE_LIMIT:
                    part_number +=3D <span class=3D"hljs-number">1</span>
                    current_zip_name =3D <span class=3D"hljs-string">f'<spa=
n class=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{pa=
rt_number}</span>'</span>
                    current_zip_size =3D <span class=3D"hljs-number">0</spa=
n>

                zipf.write(file_path, os.path.basename(file_path))
                current_zip_size +=3D file_size

                index_file.write(<span class=3D"hljs-string">f'<span class=
=3D"hljs-subst">{file_path}</span>\n'</span>)

        <span class=3D"hljs-comment"># Generate checksum file for index fil=
e and ZIP file</span>
        generate_checksum_file(index_file_path, start_time)
        generate_checksum_file(current_zip_name, start_time)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">generate_checksum_file</span>(<span class=3D"hljs-params">file_path, star=
t_time</span>):
    checksum_file_path =3D <span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{file_path}</span>_<span class=3D"hljs-subst">{start_time}</span>_=
chksm.txt'</span>
    md5 =3D hashlib.md5()

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(file_path, <span class=3D"hljs-string">'rb'</span>) <span class=
=3D"hljs-keyword">as</span> file:
        <span class=3D"hljs-keyword">while</span> chunk :=3D file.read(<spa=
n class=3D"hljs-number">8192</span>):
            md5.update(chunk)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(checksum_file_path, <span class=3D"hljs-string">'w'</span>) <sp=
an class=3D"hljs-keyword">as</span> checksum_file:
        checksum_file.write(<span class=3D"hljs-string">f'MD5|<span class=
=3D"hljs-subst">{md5.hexdigest()}</span>|<span class=3D"hljs-subst">{file_p=
ath}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_message</span>(<span class=3D"hljs-params">message</span>):
    log_time =3D datetime.now().strftime(<span class=3D"hljs-string">'%Y-%m=
-%d %H:%M:%S'</span>)
    log_entry =3D <span class=3D"hljs-string">f'[<span class=3D"hljs-subst"=
>{log_time}</span>] <span class=3D"hljs-subst">{message}</span>'</span>
    log_file_path =3D os.path.join(LOG_DIRECTORY_PATH, <span class=3D"hljs-=
string">'execution_log.txt'</span>)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <span cl=
ass=3D"hljs-keyword">as</span> log_file:
        log_file.write(<span class=3D"hljs-string">f'<span class=3D"hljs-su=
bst">{log_entry}</span>\n'</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    observer =3D Observer()
    event_handler =3D TSVHandler()
    observer.schedule(event_handler, TSV_DIRECTORY_PATH, recursive=3D<span =
class=3D"hljs-literal">False</span>)
    observer.start()

    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">while</span> <span class=3D"hljs-liter=
al">True</span>:
            time.sleep(<span class=3D"hljs-number">1</span>)
    <span class=3D"hljs-keyword">except</span> KeyboardInterrupt:
        observer.stop()
    observer.join()
</code></div></div></pre><p>Now, for each index file and ZIP file, a checks=
um file (<code>chksm.txt</code>) is generated, containing the MD5 checksum =
values. The checksum file is named with a suffix indicating the type of fil=
e it corresponds to.</p></div></div></div><div class=3D"flex justify-betwee=
n empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:lg=
:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-cen=
ter gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D"=
flex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo:gap=
-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-200 disabled:dark:h=
over:text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible =
md:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C1=
0.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.=
8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34=
315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.3=
4315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44=
772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C1=
6 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"=
></path></svg></button><div class=3D"flex gap-1"><button class=3D"p-1 gizmo=
:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200=
 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group=
-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.57=
78 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17=
.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.09=
31 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4=
.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L1=
2.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19=
.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10=
.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.99=
32 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C=
10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 =
11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5=
 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></button><b=
utton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 =
dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-9=
50 md:invisible md:group-hover:visible md:group-[.final-completion]:visible=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0=
423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975=
 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.436=
84 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.=
34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 =
15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 =
4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13=
 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.66=
12 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 1=
9.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0=
045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.6=
4937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V=
12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></=
path></svg></button></div></div></div></div></div></div></div></div><div cl=
ass=3D"w-full text-token-text-primary border-b border-black/10 gizmo:border=
-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg=
-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-30" s=
tyle=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-cent=
er text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-=
base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5=
 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gi=
zmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex=
 flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizm=
o-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full"><div class=3D"relative flex"><img alt=3D"User" loading=3D"lazy"=
 width=3D"24" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rou=
nded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX=
38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div>=
</div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col =
gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-no=
ne">You</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex=
-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa276cf-7167-40d1-a9aa-79c08cf39321" class=3D=
"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D""=
>Email everytime this program fails.  Ensure the TSV lock is removed and it=
 is reprocessed on future runs.</div></div></div><div class=3D"flex justify=
-between empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block g=
izmo:lg:flex"><div class=3D"text-gray-400 flex self-end lg:self-center just=
ify-center gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button cl=
ass=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hov=
er:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:in=
visible md:group-hover:visible md:group-[.final-completion]:visible"><div c=
lass=3D"flex items-center gap-1.5 text-xs"><svg width=3D"24" height=3D"24" =
viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cl=
ass=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.=
2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414=
 21.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19=
.696 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 =
20.9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90=
824 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291Z=
M13 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L=
5.21655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.83=
97L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973=
 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18=
.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg></div></button=
></div></div></div></div></div></div></div><div class=3D"w-full text-token-=
text-primary border-b border-black/10 gizmo:border-0 dark:border-gray-900/5=
0 gizmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] giz=
mo:dark:bg-transparent" data-testid=3D"conversation-turn-31" style=3D"--ava=
tar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-center text-base =
md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-base mx-auto =
md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl=
 lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-=
[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex flex-col rel=
ative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stro=
ke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><=
div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center j=
ustify-center" style=3D"background-color: rgb(25, 195, 125); width: 24px; h=
eight: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img">=
<text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.=
9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9107=
6 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62=
941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 =
1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044=
 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4=
7815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 =
11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0=
.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.90=
26 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 =
34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9=
789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144=
 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38=
.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.81=
67 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.=
8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.454=
4 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 =
36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.10=
03 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 2=
6.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.96=
56 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32=
.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.497=
8 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C=
5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8=
408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.=
7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556=
C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34=
.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.392=
27 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327=
C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2=
5334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.940=
4L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28=
.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3213=
5 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4=
.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4=
872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111=
 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.=
3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432=
 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30=
.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.732=
8 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.=
0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 =
10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.=
7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.083=
7 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C2=
5.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78=
077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826=
 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C1=
0.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9=
254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696=
C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.=
99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.042=
7 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14=
.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.71=
75L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L=
20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg=
></div></div></div></div></div><div class=3D"relative flex w-[calc(100%-50p=
x)] flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-turn"><div class=3D=
"font-semibold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:ga=
p-3"><div class=3D"flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"0a3c5dd0-d1b5-=
4f9a-832e-55838acb7dbd" class=3D"min-h-[20px] text-message flex flex-col it=
ems-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
overflow-x-auto"><div class=3D"markdown prose w-full break-words dark:prose=
-invert dark"><p>Integrating email notifications and handling TSV file repr=
ocessing on failure involves adding an email sending function and modifying=
 the error handling in the code. Please note that you need to have an SMTP =
server to send emails. Here's the modified code:</p><pre><div class=3D"bg-b=
lack rounded-md"><div class=3D"flex items-center relative text-gray-200 bg-=
gray-800 gizmo:dark:bg-token-surface-primary px-4 py-2 text-xs font-sans ju=
stify-between rounded-t-md"><span>python</span><button class=3D"flex ml-aut=
o gizmo:ml-0 gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D=
"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"ico=
n-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 =
4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10=
.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 =
7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.=
34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 =
7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.104=
57 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path=
></svg>Copy code</button></div><div class=3D"p-4 overflow-y-auto"><code cla=
ss=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">im=
port</span> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> hashlib
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon
<span class=3D"hljs-keyword">import</span> smtplib
<span class=3D"hljs-keyword">from</span> email.mime.text <span class=3D"hlj=
s-keyword">import</span> MIMEText
<span class=3D"hljs-keyword">from</span> email.mime.multipart <span class=
=3D"hljs-keyword">import</span> MIMEMultipart

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'execution_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>
SMTP_SERVER =3D <span class=3D"hljs-string">'your_smtp_server'</span>
SMTP_PORT =3D <span class=3D"hljs-number">587</span>
SMTP_USERNAME =3D <span class=3D"hljs-string">'your_smtp_username'</span>
SMTP_PASSWORD =3D <span class=3D"hljs-string">'your_smtp_password'</span>
EMAIL_TO =3D <span class=3D"hljs-string">'recipient@example.com'</span>
EMAIL_FROM =3D <span class=3D"hljs-string">'sender@example.com'</span>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" already processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" is being processed by another instance.=
 Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files, start_time))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

            log_message(<span class=3D"hljs-string">f'Successfully processe=
d TSV file: <span class=3D"hljs-subst">{file_path}</span>'</span>)

        <span class=3D"hljs-keyword">except</span> Exception <span class=3D=
"hljs-keyword">as</span> e:
            log_message(<span class=3D"hljs-string">f'Error processing TSV =
file "<span class=3D"hljs-subst">{file_path}</span>": <span class=3D"hljs-s=
ubst">{<span class=3D"hljs-built_in">str</span>(e)}</span>'</span>)
            send_email_notification(file_path, <span class=3D"hljs-built_in=
">str</span>(e))

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

            <span class=3D"hljs-comment"># Rename the lock file to indicate=
 processing is complete</span>
            processed_lock_file_path =3D os.path.join(os.path.dirname(file_=
path), <span class=3D"hljs-string">'processed.lock'</span>)
            os.rename(lock_file_path, processed_lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">authenticate_to_network</span>():
    net_resource =3D {<span class=3D"hljs-string">'remote'</span>: NETWORK_=
PATH, <span class=3D"hljs-string">'username'</span>: USERNAME, <span class=
=3D"hljs-string">'password'</span>: PASSWORD, <span class=3D"hljs-string">'=
domain'</span>: DOMAIN}
    win32net.NetUseAdd(<span class=3D"hljs-literal">None</span>, <span clas=
s=3D"hljs-number">2</span>, net_resource)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">acquire_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-comment"># Attempt to create a lock file, if it=
 already exists, return False</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(lock_file_path, <span class=3D"hljs-string">'x'</span>) <sp=
an class=3D"hljs-keyword">as</span> lock_file:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">True</span>
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-lite=
ral">False</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">release_lock</span>(<span class=3D"hljs-params">lock_file_path</span>):
    os.remove(lock_file_path)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_zip_parts</span>(<span class=3D"hljs-params">zip_name, file_paths,=
 start_time</span>):
    current_zip_size =3D <span class=3D"hljs-number">0</span>
    part_number =3D <span class=3D"hljs-number">1</span>
    current_zip_name =3D <span class=3D"hljs-string">f'<span class=3D"hljs-=
subst">{zip_name}</span>.part<span class=3D"hljs-subst">{part_number}</span=
>'</span>

    <span class=3D"hljs-keyword">with</span> zipfile.ZipFile(current_zip_na=
me, <span class=3D"hljs-string">'w'</span>) <span class=3D"hljs-keyword">as=
</span> zipf:
        index_file_path =3D <span class=3D"hljs-string">f'<span class=3D"hl=
js-subst">{current_zip_name}</span>_index.txt'</span>
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(index_file_path, <span class=3D"hljs-string">'w'</span>) <s=
pan class=3D"hljs-keyword">as</span> index_file:
            <span class=3D"hljs-keyword">for</span> file_path <span class=
=3D"hljs-keyword">in</span> file_paths:
                file_size =3D os.path.getsize(file_path)

                <span class=3D"hljs-keyword">if</span> current_zip_size + f=
ile_size &gt; ZIP_SIZE_LIMIT:
                    part_number +=3D <span class=3D"hljs-number">1</span>
                    current_zip_name =3D <span class=3D"hljs-string">f'<spa=
n class=3D"hljs-subst">{zip_name}</span>.part<span class=3D"hljs-subst">{pa=
rt_number}</span>'</span>
                    current_zip_size =3D <span class=3D"hljs-number">0</spa=
n>

                zipf.write(file_path, os.path.basename(file_path))
                current_zip_size +=3D file_size

                index_file.write(<span class=3D"hljs-string">f'<span class=
=3D"hljs-subst">{file_path}</span>\n'</span>)

        <span class=3D"hljs-comment"># Generate checksum file for index fil=
e and ZIP file</span>
        generate_checksum_file(index_file_path, start_time)
        generate_checksum_file(current_zip_name, start_time)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">generate_checksum_file</span>(<span class=3D"hljs-params">file_path, star=
t_time</span>):
    checksum_file_path =3D <span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{file_path}</span>_<span class=3D"hljs-subst">{start_time}</span>_=
chksm.txt'</span>
    md5 =3D hashlib.md5()

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(file_path, <span class=3D"hljs-string">'rb'</span>) <span class=
=3D"hljs-keyword">as</span> file:
        <span class=3D"hljs-keyword">while</span> chunk :=3D file.read(<spa=
n class=3D"hljs-number">8192</span>):
            md5.update(chunk)

    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(checksum_file_path, <span class=3D"hljs-string">'w'</span>) <sp=
an class=3D"hljs-keyword">as</span> checksum_file:
        checksum_file.write(<span class=3D"hljs-string">f'MD5|<span class=
=3D"hljs-subst">{md5.hexdigest()}</span>|<span class=3D"hljs-subst">{file_p=
ath}</span>\n'</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">send_email_notification</span>(<span class=3D"hljs-params">file_path, err=
or_message</span>):
    subject =3D <span class=3D"hljs-string">'Error in TSV Processing Progra=
m'</span>
    body =3D <span class=3D"hljs-string">f'TSV file processing failed. File=
: <span class=3D"hljs-subst">{file_path}</span>\nError: <span class=3D"hljs=
-subst">{error_message}</span>'</span>

    msg =3D MIMEMultipart()
    msg.attach(MIMEText(body, <span class=3D"hljs-string">'plain'</span>))
    msg[<span class=3D"hljs-string">'Subject'</span>] =3D subject
    msg[<span class=3D"hljs-string">'From'</span>] =3D EMAIL_FROM
    msg[<span class=3D"hljs-string">'To'</span>] =3D EMAIL_TO

    <span class=3D"hljs-keyword">with</span> smtplib.SMTP(SMTP_SERVER, SMTP=
_PORT) <span class=3D"hljs-keyword">as</span> server:
        server.start
</code></div></div></pre></div></div></div><div class=3D"flex justify-betwe=
en empty:hidden gizmo:mt-1 gizmo:justify-start gizmo:gap-3 lg:block gizmo:l=
g:flex"><div class=3D"text-gray-400 flex self-end lg:self-center justify-ce=
nter gizmo:lg:justify-start mt-2 gizmo:mt-0 visible gap-1"><button class=3D=
"flex ml-auto gizmo:ml-0 gap-1 items-center rounded-md p-1 text-xs gizmo:ga=
p-1.5 gizmo:pl-0 dark:text-gray-400 dark:hover:text-gray-200 disabled:dark:=
hover:text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visible=
 md:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" view=
Box=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C1=
0.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.=
8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34=
315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.3=
4315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44=
772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C1=
6 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"=
></path></svg></button><div class=3D"flex gap-1"><button class=3D"p-1 gizmo=
:pl-0 rounded-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200=
 dark:text-gray-400 text-gray-400 hover:text-gray-950 md:invisible md:group=
-hover:visible md:group-[.final-completion]:visible"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.57=
78 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17=
.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.09=
31 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4=
.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L1=
2.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19=
.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10=
.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.99=
32 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C=
10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 =
11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5=
 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></button><b=
utton class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:text-gray-400 =
dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hover:text-gray-9=
50 md:invisible md:group-hover:visible md:group-[.final-completion]:visible=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0=
423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975=
 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.436=
84 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.=
34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 =
15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 =
4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13=
 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.66=
12 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 1=
9.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0=
045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.6=
4937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V=
12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></=
path></svg></button></div></div></div></div></div></div></div></div><div cl=
ass=3D"w-full text-token-text-primary border-b border-black/10 gizmo:border=
-0 dark:border-gray-900/50 gizmo:dark:border-0 gizmo:bg-transparent dark:bg=
-gray-800 gizmo:dark:bg-transparent" data-testid=3D"conversation-turn-32" s=
tyle=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:py-2 justify-cent=
er text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex flex-1 gap-4 text-=
base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5=
 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gi=
zmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"flex-shrink-0 flex=
 flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizm=
o-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full"><div class=3D"relative flex"><img alt=3D"User" loading=3D"lazy"=
 width=3D"24" height=3D"24" decoding=3D"async" data-nimg=3D"1" class=3D"rou=
nded-sm" src=3D"https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX=
38W1NzJzFewCUbv1GoXYNrg=3Ds96-c" style=3D"color: transparent;"></div></div>=
</div></div></div><div class=3D"relative flex w-[calc(100%-50px)] flex-col =
gizmo:w-full lg:w-[calc(100%-115px)]"><div class=3D"font-semibold select-no=
ne">You</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex=
-grow flex-col max-w-full gap-3 gizmo:gap-0"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa20794-bff3-4755-b3af-1e45a97e558e" class=3D=
"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D""=
>After each successful processing of a TSV file and the resulting zip files=
, index file, summary file and chksm file has been written out; run an azco=
py command in parallel to upload these files with the best performance sett=
ings.  Preserve the same directory structure at destination.</div></div></d=
iv><div class=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:justify=
-start gizmo:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 flex=
 self-end lg:self-center justify-center gizmo:lg:justify-start mt-2 gizmo:m=
t-0 visible gap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark=
:hover:text-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-=
400 hover:text-gray-950 md:invisible md:group-hover:visible md:group-[.fina=
l-completion]:visible"><div class=3D"flex items-center gap-1.5 text-xs"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" cl=
ip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 1=
9.7071 4.2929C21.4783 6.06414 21.4783 8.93588 19.7071 10.7071L18.7073 11.70=
69L11.1603 19.2539C10.7182 19.696 10.1489 19.989 9.53219 20.0918L4.1644 20.=
9864C3.84584 21.0395 3.52125 20.9355 3.29289 20.7071C3.06453 20.4788 2.9605=
1 20.1542 3.0136 19.8356L3.90824 14.4678C4.01103 13.8511 4.30396 13.2818 4.=
7461 12.8397L13.2929 4.29291ZM13 7.41422L6.16031 14.2539C6.01293 14.4013 5.=
91529 14.591 5.88102 14.7966L5.21655 18.7835L9.20339 18.119C9.40898 18.0847=
 9.59872 17.9871 9.7461 17.8397L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.=
00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.28=
31 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor=
"></path></svg></div></button></div></div></div></div></div></div></div><di=
v class=3D"w-full text-token-text-primary border-b border-black/10 gizmo:bo=
rder-0 dark:border-gray-900/50 gizmo:dark:border-0 bg-gray-50 gizmo:bg-tran=
sparent dark:bg-[#444654] gizmo:dark:bg-transparent" data-testid=3D"convers=
ation-turn-33" style=3D"--avatar-color: #19c37d;"><div class=3D"p-4 gizmo:p=
y-2 justify-center text-base md:gap-6 md:py-6 m-auto"><div class=3D"flex fl=
ex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px=
-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:=
max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group"><div class=3D"fl=
ex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><d=
iv class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center ov=
erflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 t=
ext-white flex items-center justify-center" style=3D"background-color: rgb(=
25, 195, 125); width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" =
viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cl=
ass=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><p=
ath d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C3=
7.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.367=
6 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.=
7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3=
058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.676=
24 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.1=
7505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.4989=
05 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C=
2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.=
0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141=
 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18=
.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.50=
54 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 =
33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.07=
28 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C3=
9.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.=
8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 =
36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4=
964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 =
21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.98=
67 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 3=
7.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.1=
9742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.124=
4L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.90=
2 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24=
.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.10=
12L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 =
33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.=
55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.60=
71V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8=
.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.50=
89 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 2=
8.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03=
862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411=
L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12=
.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.001=
7 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37=
.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.17=
17 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C3=
2.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.169=
8 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14=
.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.220=
6 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 1=
1.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1=
207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482=
C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.=
53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2=
424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602=
C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11=
.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.822=
64C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3=
.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.90=
24 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 =
14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.=
4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=
=3D"currentColor"></path></svg></div></div></div></div></div><div class=3D"=
relative flex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115=
px)] agent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><div=
 class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col ma=
x-w-full gap-3 gizmo:gap-0"><div data-message-author-role=3D"assistant" dat=
a-message-id=3D"99d133ac-f04d-4cd7-af54-9655d4c7be0a" class=3D"min-h-[20px]=
 text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose=
 w-full break-words dark:prose-invert dark"><p>Certainly! To achieve this, =
you can use the <code>subprocess</code> module to run the <code>azcopy</cod=
e> command after the successful processing of each TSV file. Here's the mod=
ified code with the added functionality:</p><pre><div class=3D"bg-black rou=
nded-md"><div class=3D"flex items-center relative text-gray-200 bg-gray-800=
 gizmo:dark:bg-token-surface-primary px-4 py-2 text-xs font-sans justify-be=
tween rounded-t-md"><span>python</span><button class=3D"flex ml-auto gizmo:=
ml-0 gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 =
24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><p=
ath fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.8=
9543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 =
12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 =
20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 =
7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C=
17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.10=
46 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>C=
opy code</button></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!w=
hitespace-pre hljs language-python"><span class=3D"hljs-keyword">import</sp=
an> csv
<span class=3D"hljs-keyword">import</span> os
<span class=3D"hljs-keyword">import</span> zipfile
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> hashlib
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime
<span class=3D"hljs-keyword">from</span> concurrent.futures <span class=3D"=
hljs-keyword">import</span> ThreadPoolExecutor
<span class=3D"hljs-keyword">from</span> watchdog.observers <span class=3D"=
hljs-keyword">import</span> Observer
<span class=3D"hljs-keyword">from</span> watchdog.events <span class=3D"hlj=
s-keyword">import</span> FileSystemEventHandler
<span class=3D"hljs-keyword">import</span> win32net
<span class=3D"hljs-keyword">import</span> win32netcon
<span class=3D"hljs-keyword">import</span> smtplib
<span class=3D"hljs-keyword">from</span> email.mime.text <span class=3D"hlj=
s-keyword">import</span> MIMEText
<span class=3D"hljs-keyword">from</span> email.mime.multipart <span class=
=3D"hljs-keyword">import</span> MIMEMultipart
<span class=3D"hljs-keyword">import</span> subprocess

NETWORK_PATH =3D <span class=3D"hljs-string">r'\\your\network\path'</span>
DOMAIN =3D <span class=3D"hljs-string">'your_domain'</span>
USERNAME =3D <span class=3D"hljs-string">'your_username'</span>
PASSWORD =3D <span class=3D"hljs-string">'your_password'</span>
LOG_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'execution_logs'</span>)
TSV_DIRECTORY_PATH =3D os.path.join(NETWORK_PATH, <span class=3D"hljs-strin=
g">'tsv_files'</span>)
ZIP_SIZE_LIMIT =3D <span class=3D"hljs-number">10</span> * <span class=3D"h=
ljs-number">1024</span> * <span class=3D"hljs-number">1024</span> * <span c=
lass=3D"hljs-number">1024</span>  <span class=3D"hljs-comment"># 10GB</span=
>
SMTP_SERVER =3D <span class=3D"hljs-string">'your_smtp_server'</span>
SMTP_PORT =3D <span class=3D"hljs-number">587</span>
SMTP_USERNAME =3D <span class=3D"hljs-string">'your_smtp_username'</span>
SMTP_PASSWORD =3D <span class=3D"hljs-string">'your_smtp_password'</span>
EMAIL_TO =3D <span class=3D"hljs-string">'recipient@example.com'</span>
EMAIL_FROM =3D <span class=3D"hljs-string">'sender@example.com'</span>
AZCOPY_PATH =3D <span class=3D"hljs-string">'C:\\Program Files (x86)\\Micro=
soft SDKs\\Azure\\AzCopy\\azcopy.exe'</span>  <span class=3D"hljs-comment">=
# Update with your AzCopy path</span>
DESTINATION_CONTAINER =3D <span class=3D"hljs-string">'your_storage_account=
_url'</span>  <span class=3D"hljs-comment"># Update with your Azure Storage=
 Account URL</span>

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TSVHandler</span>(<span class=3D"hljs-title class_ inherited__">FileSystem=
EventHandler</span>):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        self.processed_files =3D <span class=3D"hljs-built_in">set</span>()
        self.executor =3D ThreadPoolExecutor()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_created</span>(<span class=3D"hljs-params">self, event</span>):
        <span class=3D"hljs-keyword">if</span> event.is_directory:
            <span class=3D"hljs-keyword">return</span>
        <span class=3D"hljs-keyword">if</span> event.src_path.lower().endsw=
ith(<span class=3D"hljs-string">'.tsv'</span>):
            self.executor.submit(self.process_tsv_file, event.src_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">process_tsv_file</span>(<span class=3D"hljs-params">self, file_path</=
span>):
        <span class=3D"hljs-keyword">if</span> file_path <span class=3D"hlj=
s-keyword">in</span> self.processed_files:
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" already processed. Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-comment"># Try to acquire a lock file, if alrea=
dy acquired, skip processing</span>
        lock_file_path =3D os.path.join(os.path.dirname(file_path), <span c=
lass=3D"hljs-string">'processing.lock'</span>)
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> acquire_lock(lock_file_path):
            log_message(<span class=3D"hljs-string">f'TSV file "<span class=
=3D"hljs-subst">{file_path}</span>" is being processed by another instance.=
 Skipping...'</span>)
            <span class=3D"hljs-keyword">return</span>

        <span class=3D"hljs-keyword">try</span>:
            authenticate_to_network()
            start_time =3D datetime.now().strftime(<span class=3D"hljs-stri=
ng">'%Y%m%d%H%M'</span>)

            <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-bu=
ilt_in">open</span>(file_path, <span class=3D"hljs-string">'r'</span>) <spa=
n class=3D"hljs-keyword">as</span> tsvfile:
                lines =3D tsvfile.readlines()

            futures =3D []
            <span class=3D"hljs-keyword">for</span> line <span class=3D"hlj=
s-keyword">in</span> lines:
                <span class=3D"hljs-comment"># Assuming TSV structure: col1=
 \t col2 \t ...</span>
                cols =3D line.split(<span class=3D"hljs-string">'\t'</span>=
)
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">len</span>(cols) &gt;=3D <span class=3D"hljs-number">2</span>:
                    second_directory =3D os.path.basename(os.path.normpath(=
cols[<span class=3D"hljs-number">1</span>].strip()))
                    directory_path =3D os.path.join(NETWORK_PATH, second_di=
rectory)
                   =20
                    matching_files =3D [os.path.join(directory_path, f) <sp=
an class=3D"hljs-keyword">for</span> f <span class=3D"hljs-keyword">in</spa=
n> os.listdir(directory_path) <span class=3D"hljs-keyword">if</span> os.pat=
h.isfile(os.path.join(directory_path, f))]
                   =20
                    <span class=3D"hljs-keyword">if</span> matching_files:
                        output_zip_name =3D os.path.join(NETWORK_PATH, <spa=
n class=3D"hljs-string">f'<span class=3D"hljs-subst">{start_time}</span>_<s=
pan class=3D"hljs-subst">{second_directory}</span>_output.zip'</span>)
                        futures.append(self.executor.submit(create_zip_part=
s, output_zip_name, matching_files, start_time))

            <span class=3D"hljs-comment"># Wait for all ZIP creation tasks =
to complete</span>
            <span class=3D"hljs-keyword">for</span> future <span class=3D"h=
ljs-keyword">in</span> futures:
                future.result()

            self.processed_files.add(file_path)
            self.update_processed_files_log(file_path)

            log_message(<span class=3D"hljs-string">f'Successfully processe=
d TSV file: <span class=3D"hljs-subst">{file_path}</span>'</span>)

            <span class=3D"hljs-comment"># Upload files using AzCopy</span>
            azcopy_command =3D <span class=3D"hljs-string">f'<span class=3D=
"hljs-subst">{AZCOPY_PATH}</span> copy "<span class=3D"hljs-subst">{NETWORK=
_PATH}</span>" "<span class=3D"hljs-subst">{DESTINATION_CONTAINER}</span>/<=
span class=3D"hljs-subst">{os.path.basename(NETWORK_PATH)}</span>" --recurs=
ive=3Dtrue'</span>
            subprocess.run(azcopy_command, shell=3D<span class=3D"hljs-lite=
ral">True</span>, stdout=3Dsubprocess.PIPE, stderr=3Dsubprocess.PIPE)

            log_message(<span class=3D"hljs-string">'Files uploaded success=
fully.'</span>)

        <span class=3D"hljs-keyword">except</span> Exception <span class=3D=
"hljs-keyword">as</span> e:
            log_message(<span class=3D"hljs-string">f'Error processing TSV =
file "<span class=3D"hljs-subst">{file_path}</span>": <span class=3D"hljs-s=
ubst">{<span class=3D"hljs-built_in">str</span>(e)}</span>'</span>)
            send_email_notification(file_path, <span class=3D"hljs-built_in=
">str</span>(e))

        <span class=3D"hljs-keyword">finally</span>:
            <span class=3D"hljs-comment"># Release the lock file</span>
            release_lock(lock_file_path)

            <span class=3D"hljs-comment"># Rename the lock file to indicate=
 processing is complete</span>
            processed_lock_file_path =3D os.path.join(os.path.dirname(file_=
path), <span class=3D"hljs-string">'processed.lock'</span>)
            os.rename(lock_file_path, processed_lock_file_path)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_processed_files_log</span>(<span class=3D"hljs-params">self, f=
ilename</span>):
        log_directory =3D os.path.join(LOG_DIRECTORY_PATH, os.path.basename=
(filename).replace(<span class=3D"hljs-string">'.tsv'</span>, <span class=
=3D"hljs-string">''</span>))
        os.makedirs(log_directory, exist_ok=3D<span class=3D"hljs-literal">=
True</span>)
        log_file_path =3D os.path.join(log_directory, <span class=3D"hljs-s=
tring">'processed_files.log'</span>)

        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(log_file_path, <span class=3D"hljs-string">'a'</span>) <spa=
n class=3D"hljs-keyword">as</span> log_file:
            log_file.write(<span class=3D"hljs-string">f'<span class=3D"hlj=
s-subst">{filename}</span>\n'</span>)

<span class=3D"hljs-comment"># Rest of the code remains unchanged</span>
</code></div></div></pre><p>Make sure to update the <code>AZCOPY_PATH</code=
> variable with the correct path to your AzCopy executable, and the <code>D=
ESTINATION_CONTAINER</code> variable with the appropriate Azure Storage Acc=
ount URL. This modification will execute the AzCopy command</p></div></div>=
</div><div class=3D"flex justify-between empty:hidden gizmo:mt-1 gizmo:just=
ify-start gizmo:gap-3 lg:block gizmo:lg:flex"><div class=3D"text-gray-400 f=
lex self-end lg:self-center justify-center gizmo:lg:justify-start mt-2 gizm=
o:mt-0 visible gap-1"><button class=3D"flex ml-auto gizmo:ml-0 gap-1 items-=
center rounded-md p-1 text-xs gizmo:gap-1.5 gizmo:pl-0 dark:text-gray-400 d=
ark:hover:text-gray-200 disabled:dark:hover:text-gray-400 hover:text-gray-9=
50 md:invisible md:group-hover:visible md:group-[.final-completion]:visible=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543=
 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 =
2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 2=
2H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44=
772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 1=
8 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 =
8 7.10457 8 6Z" fill=3D"currentColor"></path></svg></button><div class=3D"f=
lex gap-1"><button class=3D"p-1 gizmo:pl-0 rounded-md disabled:dark:hover:t=
ext-gray-400 dark:hover:text-gray-200 dark:text-gray-400 text-gray-400 hove=
r:text-gray-950 md:invisible md:group-hover:visible md:group-[.final-comple=
tion]:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12.1318 2.50389C12.3321 2.153=
38 12.7235 1.95768 13.124 2.00775L13.5778 2.06447C16.0449 2.37286 17.636 4.=
83353 16.9048 7.20993L16.354 8.99999H17.0722C19.7097 8.99999 21.6253 11.507=
9 20.9313 14.0525L19.5677 19.0525C19.0931 20.7927 17.5124 22 15.7086 22H6C4=
.34315 22 3 20.6568 3 19V12C3 10.3431 4.34315 8.99999 6 8.99999H8C8.25952 8=
.99999 8.49914 8.86094 8.6279 8.63561L12.1318 2.50389ZM10 20H15.7086C16.610=
5 20 17.4008 19.3964 17.6381 18.5262L19.0018 13.5262C19.3488 12.2539 18.391=
 11 17.0722 11H15C14.6827 11 14.3841 10.8494 14.1956 10.5941C14.0071 10.338=
8 13.9509 10.0092 14.0442 9.70591L14.9932 6.62175C15.3384 5.49984 14.6484 4=
.34036 13.5319 4.08468L10.3644 9.62789C10.0522 10.1742 9.56691 10.5859 9 10=
.8098V19C9 19.5523 9.44772 20 10 20ZM7 11V19C7 19.3506 7.06015 19.6872 7.17=
071 20H6C5.44772 20 5 19.5523 5 19V12C5 11.4477 5.44772 11 6 11H7Z" fill=3D=
"currentColor"></path></svg></button><button class=3D"p-1 gizmo:pl-0 rounde=
d-md disabled:dark:hover:text-gray-400 dark:hover:text-gray-200 dark:text-g=
ray-400 text-gray-400 hover:text-gray-950 md:invisible md:group-hover:visib=
le md:group-[.final-completion]:visible"><svg width=3D"24" height=3D"24" vi=
ewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.87=
27 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C=
7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 =
15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2=
 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 1=
9.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8=
727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.=
00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.620=
36 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9=
.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.37=
21C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.556=
8 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.00=
45C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.004=
5 13H17.0045Z" fill=3D"currentColor"></path></svg></button></div></div></di=
v></div></div></div></div></div><button class=3D"cursor-pointer absolute z-=
10 rounded-full gizmo:bg-clip-padding border text-gray-600 dark:border-whit=
e/10 dark:bg-white/10 dark:text-gray-200 right-1/2 border-black/10 bg-token=
-surface-primary bottom-5"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" class=3D"m-1 text-black dark:text-white"><path d=3D"M17=
 13L12 18L7 13M12 6L12 17" stroke=3D"currentColor" stroke-width=3D"2" strok=
e-linecap=3D"round" stroke-linejoin=3D"round"></path></svg></button></div><=
/div><button class=3D"react-scroll-to-bottom--css-pswpx-1tj0vk3 scroll-conv=
o" type=3D"button"></button></div></div><div class=3D"w-full pt-2 md:pt-0 b=
order-t md:border-t-0 gizmo:border-t-0 dark:border-white/20 md:border-trans=
parent md:dark:border-transparent md:pl-2 gizmo:pl-0 gizmo:md:pl-0 md:w-[ca=
lc(100%-.5rem)]"><form class=3D"stretch mx-2 flex flex-row gap-3 last:mb-2 =
md:mx-4 md:last:mb-6 lg:mx-auto lg:max-w-2xl xl:max-w-3xl"><div class=3D"re=
lative flex h-full flex-1 items-stretch md:flex-col"><div class=3D"flex w-f=
ull items-center"><div class=3D"overflow-hidden gizmo:[&amp;:has(textarea:f=
ocus)]:border-token-border-xheavy gizmo:[&amp;:has(textarea:focus)]:shadow-=
[0_2px_6px_rgba(0,0,0,.05)] flex flex-col w-full dark:border-gray-900/50 gi=
zmo:dark:border-token-border-heavy flex-grow relative border border-black/1=
0 gizmo:border-token-border-heavy dark:text-white rounded-xl gizmo:rounded-=
2xl shadow-xs dark:shadow-xs dark:bg-gray-700 bg-white gizmo:dark:bg-gray-8=
00 gizmo:shadow-[0_0_0_2px_rgba(255,255,255,0.95)] gizmo:dark:shadow-[0_0_0=
_2px_rgba(52,53,65,0.95)]"><textarea id=3D"prompt-textarea" tabindex=3D"0" =
data-id=3D"request-:r1i:-0" rows=3D"1" placeholder=3D"Message ChatGPT=E2=80=
=A6" class=3D"m-0 w-full resize-none border-0 bg-transparent py-[10px] pr-1=
0 focus:ring-0 focus-visible:ring-0 dark:bg-transparent md:py-4 md:pr-12 gi=
zmo:md:py-3.5 gizmo:placeholder-black/50 gizmo:dark:placeholder-white/50 pl=
-3 md:pl-4" style=3D"max-height: 200px; height: 52px; overflow-y: hidden;">=
</textarea><div class=3D"absolute bottom-0 right-2 top-0 p-1 md:right-3 md:=
p-2"><div class=3D"flex h-full"><div class=3D"flex h-full flex-row items-ce=
nter justify-center gap-3"><button type=3D"button" class=3D"rounded-full bo=
rder-2 border-gizmo-gray-950 p-1 dark:border-gray-200" aria-label=3D"Stop g=
enerating"><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 16 16" =
fill=3D"currentColor" class=3D"h-2 w-2 text-gizmo-gray-950 dark:text-gray-2=
00" height=3D"16" width=3D"16"><path d=3D"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2=
 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2z" stroke-width=3D"0"></path></svg></b=
utton></div></div></div></div></div></div></form><div class=3D"relative px-=
2 py-2 text-center text-xs text-gray-600 dark:text-gray-300 md:px-[60px]"><=
span>ChatGPT can make mistakes. Consider checking important information.</s=
pan></div></div></div><div class=3D"group fixed bottom-3 right-3 z-10 hidde=
n gap-1 lg:flex"><div class=3D"group relative" data-headlessui-state=3D""><=
button class=3D"flex items-center justify-center rounded-full border border=
-gray-200 bg-gray-50 text-gray-600 dark:border-white/10 dark:bg-white/10 da=
rk:text-gray-200" id=3D"headlessui-menu-button-:r1k:" type=3D"button" aria-=
haspopup=3D"true" aria-expanded=3D"false" data-headlessui-state=3D""><div c=
lass=3D"flex h-6 w-6 items-center justify-center text-xs">?</div></button><=
/div></div></main></div></div><div class=3D"absolute left-0 right-0 top-0 z=
-[2]"></div></div><iframe height=3D"1" width=3D"1" style=3D"position: absol=
ute; top: 0px; left: 0px; border: none; visibility: hidden;"></iframe><next=
-route-announcer><p aria-live=3D"assertive" id=3D"__next-route-announcer__"=
 role=3D"alert" style=3D"border: 0px; clip: rect(0px, 0px, 0px, 0px); heigh=
t: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; t=
op: 0px; width: 1px; white-space: nowrap; overflow-wrap: normal;">ChatGPT</=
p></next-route-announcer><div portal-container=3D""><span class=3D"pointer-=
events-none fixed inset-0 z-[60] mx-auto my-2 flex max-w-[560px] flex-col i=
tems-stretch justify-start md:pb-5"></span></div><iframe id=3D"intercom-fra=
me" style=3D"position: absolute !important; opacity: 0 !important; width: 1=
px !important; height: 1px !important; top: 0 !important; left: 0 !importan=
t; border: none !important; display: block !important; z-index: -1 !importa=
nt; pointer-events: none;" aria-hidden=3D"true" tabindex=3D"-1" title=3D"In=
tercom"></iframe><div class=3D"intercom-lightweight-app"></div></body></htm=
l>
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2437623a-71de-4145-bfcd-65daae7f5182@mhtml.blink

@charset "utf-8";

.r34K7X1zGgAi6DllVF3T { box-sizing: border-box; border: 0px; margin: 0px; p=
adding: 0px; overflow: hidden; z-index: 2147483647; pointer-events: none; v=
isibility: hidden; opacity: 0; transition: opacity 300ms linear 0s; height:=
 0px; width: 0px; position: absolute; top: -9999px; left: -9999px; }

.r34K7X1zGgAi6DllVF3T.active { display: block; visibility: visible; }

.r34K7X1zGgAi6DllVF3T.active.show { opacity: 1; pointer-events: inherit; po=
sition: inherit; }

.r34K7X1zGgAi6DllVF3T.active.show.in-situ { width: inherit; height: inherit=
; }

.r34K7X1zGgAi6DllVF3T.active.show.lightbox { position: fixed; inset: 0px; w=
idth: 100% !important; height: 100% !important; }

.r34K7X1zGgAi6DllVF3T.active.show.inline { position: static; left: 0px; top=
: 0px; }
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-d85db212-118b-4923-8d25-4640518d2750@mhtml.blink

@charset "utf-8";

.r34K7X1zGgAi6DllVF3T { box-sizing: border-box; border: 0px; margin: 0px; p=
adding: 0px; overflow: hidden; z-index: 2147483647; pointer-events: none; v=
isibility: hidden; opacity: 0; transition: opacity 300ms linear 0s; height:=
 0px; width: 0px; position: absolute; top: -9999px; left: -9999px; }

.r34K7X1zGgAi6DllVF3T.active { display: block; visibility: visible; }

.r34K7X1zGgAi6DllVF3T.active.show { opacity: 1; pointer-events: inherit; po=
sition: inherit; }

.r34K7X1zGgAi6DllVF3T.active.show.in-situ { width: inherit; height: inherit=
; }

.r34K7X1zGgAi6DllVF3T.active.show.lightbox { position: fixed; inset: 0px; w=
idth: 100% !important; height: 100% !important; }

.r34K7X1zGgAi6DllVF3T.active.show.inline { position: static; left: 0px; top=
: 0px; }
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-cbdfb0a6-12ff-4ab5-85d7-f17afd22035f@mhtml.blink

@charset "utf-8";

.react-scroll-to-bottom--css-pswpx-79elbk { position: relative; }

.react-scroll-to-bottom--css-pswpx-1n7m0yu { height: 100%; overflow-y: auto=
; width: 100%; }

.react-scroll-to-bottom--css-pswpx-1tj0vk3 { background-color: rgba(0, 0, 0=
, 0.2); border-radius: 10px; border-width: 0px; bottom: 5px; cursor: pointe=
r; height: 20px; outline: 0px; position: absolute; right: 20px; width: 20px=
; }

.react-scroll-to-bottom--css-pswpx-1tj0vk3:hover { background-color: rgba(0=
, 0, 0, 0.4); }

.react-scroll-to-bottom--css-pswpx-1tj0vk3:active { background-color: rgba(=
0, 0, 0, 0.6); }
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-1fb7a503-6ad2-4b82-8f49-bd7de8a92a44@mhtml.blink

@charset "utf-8";

@keyframes intercom-lightweight-app-launcher {=20
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes intercom-lightweight-app-gradient {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes intercom-lightweight-app-messenger {=20
  0% { opacity: 0; transform: scale(0); }
  40% { opacity: 1; }
  100% { transform: scale(1); }
}

.intercom-lightweight-app { position: fixed; z-index: 2147483001; width: 0p=
x; height: 0px; font-family: intercom-font, "Helvetica Neue", "Apple Color =
Emoji", Helvetica, Arial, sans-serif; }

.intercom-lightweight-app-gradient { position: fixed; z-index: 2147483002; =
width: 500px; height: 500px; bottom: 0px; right: 0px; pointer-events: none;=
 background: radial-gradient(at right bottom, rgba(29, 39, 54, 0.16) 0%, rg=
ba(29, 39, 54, 0) 72%); animation: 200ms ease-out 0s 1 normal none running =
intercom-lightweight-app-gradient; }

.intercom-lightweight-app-launcher { position: fixed; z-index: 2147483003; =
border: none; bottom: 20px; right: 20px; max-width: 48px; width: 48px; max-=
height: 48px; height: 48px; border-radius: 50%; background: rgb(32, 33, 35)=
; cursor: pointer; box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 6px 0px, rgba(0,=
 0, 0, 0.16) 0px 2px 32px 0px; transition: transform 167ms cubic-bezier(0.3=
3, 0, 0, 1) 0s; box-sizing: content-box; padding: 0px !important; margin: 0=
px !important; }

.intercom-lightweight-app-launcher:hover { transition: transform 250ms cubi=
c-bezier(0.33, 0, 0, 1) 0s; transform: scale(1.1); }

.intercom-lightweight-app-launcher:active { transform: scale(0.85); transit=
ion: transform 134ms cubic-bezier(0.45, 0, 0.2, 1) 0s; }

.intercom-lightweight-app-launcher:focus { outline: none; }

.intercom-lightweight-app-launcher-icon { display: flex; align-items: cente=
r; justify-content: center; position: absolute; top: 0px; left: 0px; width:=
 48px; height: 48px; transition: transform 100ms linear 0s, opacity 80ms li=
near 0s; }

.intercom-lightweight-app-launcher-icon-open { opacity: 1; transform: rotat=
e(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-open svg { width: 24px; height: 24p=
x; }

.intercom-lightweight-app-launcher-icon-open svg path { fill: rgb(255, 255,=
 255); }

.intercom-lightweight-app-launcher-icon-self-serve { opacity: 1; transform:=
 rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-self-serve svg { height: 44px; }

.intercom-lightweight-app-launcher-icon-self-serve svg path { fill: rgb(255=
, 255, 255); }

.intercom-lightweight-app-launcher-custom-icon-open { max-height: 24px; max=
-width: 24px; opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-minimize { opacity: 0; transform: r=
otate(-60deg) scale(0); }

.intercom-lightweight-app-launcher-icon-minimize svg path { fill: rgb(255, =
255, 255); }

.intercom-lightweight-app-messenger { position: fixed; z-index: 2147483003;=
 overflow: hidden; background-color: white; animation: 250ms cubic-bezier(0=
, 1, 1, 1) 0s 1 normal none running intercom-lightweight-app-messenger; tra=
nsform-origin: right bottom; width: 400px; height: calc(100% - 40px); max-h=
eight: 704px; min-height: 250px; right: 20px; bottom: 20px; box-shadow: rgb=
a(0, 0, 0, 0.16) 0px 5px 40px; border-radius: 16px; }

.intercom-lightweight-app-messenger-header { height: 64px; border-bottom: n=
one; background: rgb(32, 33, 35); }

.intercom-lightweight-app-messenger-footer { position: absolute; bottom: 0p=
x; width: 100%; height: 80px; background: rgb(255, 255, 255); font-size: 14=
px; line-height: 21px; border-top: 1px solid rgba(0, 0, 0, 0.05); box-shado=
w: rgba(0, 0, 0, 0.05) 0px 0px 25px; }

@media print {
  .intercom-lightweight-app { display: none; }
}
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/_next/static/css/53c17921e0c481ce.css

@charset "utf-8";

@font-face { font-display: swap; font-family: Signifier; font-style: normal=
; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-light.c131ea48.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: italic=
; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-light-italic.ae129369.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: normal=
; font-weight: 700; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-bold.3a11015f.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: italic=
; font-weight: 700; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-bold-italic.52d511e3.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: norma=
l; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-buch.13189857.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: itali=
c; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-buch-kursiv.1052965d.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: norma=
l; font-weight: 500; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-kraftig.204b461c.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: itali=
c; font-weight: 500; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-kraftig-kursiv.a0040f3f.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: norma=
l; font-weight: 600; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-halbfett.977f1845.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: itali=
c; font-weight: 600; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-halbfett-kursiv.cb37a814.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Mono"; font-style=
: normal; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/stati=
c/media/soehne-mono-buch.de677af1.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Mono"; font-style=
: normal; font-weight: 700; src: url("https://cdn.oaistatic.com/_next/stati=
c/media/soehne-mono-halbfett.b082e8e2.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Mono"; font-style=
: italic; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/stati=
c/media/soehne-mono-buch-kursiv.8eeb89d0.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Circle"; font-sty=
le: normal; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/sta=
tic/media/soehne-circle-buch.d446e5e9.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Circle"; font-sty=
le: normal; font-weight: 600; src: url("https://cdn.oaistatic.com/_next/sta=
tic/media/soehne-circle-halbfett.9eb377ad.woff2") format("woff2"); }

*, ::after, ::before { border: 0px solid rgb(217, 217, 227); box-sizing: bo=
rder-box; }

::after, ::before { --tw-content: ""; }

html { text-size-adjust: 100%; font-feature-settings: normal; font-family: =
S=C3=B6hne, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Ub=
untu, Cantarell, "Noto Sans", sans-serif, "Helvetica Neue", Arial, "Apple C=
olor Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-=
variation-settings: normal; line-height: 1.5; tab-size: 4; }

body { line-height: inherit; margin: 0px; }

hr { border-top-width: 1px; color: inherit; height: 0px; }

abbr:where([title]) { text-decoration: underline dotted currentcolor; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-family: "S=C3=B6hne Mono", Monaco, "Andale Mono=
", "Ubuntu Mono", monospace; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { border-collapse: collapse; border-color: inherit; text-indent: 0px;=
 }

button, input, optgroup, select, textarea { color: inherit; font-family: in=
herit; font-size: 100%; font-weight: inherit; line-height: inherit; margin:=
 0px; padding: 0px; }

button, select { text-transform: none; }

[type=3D"button"], [type=3D"reset"], [type=3D"submit"], button { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dd, dl, fieldset, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { =
margin: 0px; }

fieldset, legend { padding: 0px; }

menu, ol, ul { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { col=
or: rgb(172, 172, 190); }

input::placeholder, textarea::placeholder { color: rgb(172, 172, 190); }

[role=3D"button"], button { cursor: pointer; }

:disabled { cursor: default; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; ver=
tical-align: middle; }

img, video { height: auto; max-width: 100%; }

[hidden] { display: none; }

[multiple], [type=3D"date"], [type=3D"datetime-local"], [type=3D"email"], [=
type=3D"month"], [type=3D"number"], [type=3D"password"], [type=3D"search"],=
 [type=3D"tel"], [type=3D"text"], [type=3D"time"], [type=3D"url"], [type=3D=
"week"], select, textarea { --tw-shadow: 0 0 transparent; appearance: none;=
 background-color: rgb(255, 255, 255); border-color: rgb(142, 142, 160); bo=
rder-radius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; =
padding: 0.5rem 0.75rem; }

[multiple]:focus, [type=3D"date"]:focus, [type=3D"datetime-local"]:focus, [=
type=3D"email"]:focus, [type=3D"month"]:focus, [type=3D"number"]:focus, [ty=
pe=3D"password"]:focus, [type=3D"search"]:focus, [type=3D"tel"]:focus, [typ=
e=3D"text"]:focus, [type=3D"time"]:focus, [type=3D"url"]:focus, [type=3D"we=
ek"]:focus, select:focus, textarea:focus { --tw-ring-inset: var(--tw-empty,=
/*!*/ /*!*/); --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --=
tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0=
 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow:=
 var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--t=
w-ring-color); border-color: rgb(37, 99, 235); box-shadow: var(--tw-ring-of=
fset-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transparent s=
olid 2px; outline-offset: 2px; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { col=
or: rgb(142, 142, 160); opacity: 1; }

input::placeholder, textarea::placeholder { color: rgb(142, 142, 160); opac=
ity: 1; }

::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

::-webkit-date-and-time-value { min-height: 1.5em; }

::-webkit-datetime-edit, ::-webkit-datetime-edit-day-field, ::-webkit-datet=
ime-edit-hour-field, ::-webkit-datetime-edit-meridiem-field, ::-webkit-date=
time-edit-millisecond-field, ::-webkit-datetime-edit-minute-field, ::-webki=
t-datetime-edit-month-field, ::-webkit-datetime-edit-second-field, ::-webki=
t-datetime-edit-year-field { padding-bottom: 0px; padding-top: 0px; }

select { background-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg x=
mlns=3D'http://www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 20 20'%3E%=
3Cpath stroke=3D'%238e8ea0' stroke-linecap=3D'round' stroke-linejoin=3D'rou=
nd' stroke-width=3D'1.5' d=3D'm6 8 4 4 4-4'/%3E%3C/svg%3E"); background-pos=
ition: right 0.5rem center; background-repeat: no-repeat; background-size: =
1.5em 1.5em; padding-right: 2.5rem; -webkit-print-color-adjust: exact; }

[multiple] { background-image: none; background-position: 0px 0px; backgrou=
nd-repeat: repeat; background-size: initial; padding-right: 0.75rem; -webki=
t-print-color-adjust: inherit; }

[type=3D"checkbox"], [type=3D"radio"] { --tw-shadow: 0 0 transparent; appea=
rance: none; background-color: rgb(255, 255, 255); background-origin: borde=
r-box; border-color: rgb(142, 142, 160); border-width: 1px; color: rgb(37, =
99, 235); display: inline-block; flex-shrink: 0; height: 1rem; padding: 0px=
; -webkit-print-color-adjust: exact; user-select: none; vertical-align: mid=
dle; width: 1rem; }

[type=3D"checkbox"] { border-radius: 0px; }

[type=3D"radio"] { border-radius: 100%; }

[type=3D"checkbox"]:focus, [type=3D"radio"]:focus { --tw-ring-inset: var(--=
tw-empty,/*!*/ /*!*/); --tw-ring-offset-width: 2px; --tw-ring-offset-color:=
 #fff; --tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-ins=
et) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-rin=
g-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow); outline: transparent solid 2px; outline-offse=
t: 2px; }

[type=3D"checkbox"]:checked, [type=3D"radio"]:checked { background-color: c=
urrentcolor; background-position: 50% center; background-repeat: no-repeat;=
 background-size: 100% 100%; border-color: transparent; }

[type=3D"checkbox"]:checked { background-image: url("data:image/svg+xml;cha=
rset=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://w=
ww.w3.org/2000/svg'%3E%3Cpath d=3D'M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1 1=
 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1 1=
.414 0z'/%3E%3C/svg%3E"); }

[type=3D"radio"]:checked { background-image: url("data:image/svg+xml;charse=
t=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://www.=
w3.org/2000/svg'%3E%3Ccircle cx=3D'8' cy=3D'8' r=3D'3'/%3E%3C/svg%3E"); }

[type=3D"checkbox"]:checked:focus, [type=3D"checkbox"]:checked:hover, [type=
=3D"radio"]:checked:focus, [type=3D"radio"]:checked:hover { background-colo=
r: currentcolor; border-color: transparent; }

[type=3D"checkbox"]:indeterminate { background-color: currentcolor; backgro=
und-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg xmlns=3D'http://w=
ww.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 16 16'%3E%3Cpath stroke=3D=
'%23fff' stroke-linecap=3D'round' stroke-linejoin=3D'round' stroke-width=3D=
'2' d=3D'M4 8h8'/%3E%3C/svg%3E"); background-position: 50% center; backgrou=
nd-repeat: no-repeat; background-size: 100% 100%; border-color: transparent=
; }

[type=3D"checkbox"]:indeterminate:focus, [type=3D"checkbox"]:indeterminate:=
hover { background-color: currentcolor; border-color: transparent; }

[type=3D"file"] { background: initial; border-color: inherit; border-radius=
: 0px; border-width: 0px; font-size: inherit; line-height: inherit; padding=
: 0px; }

[type=3D"file"]:focus { outline: -webkit-focus-ring-color auto 1px; }

h1 { font-size: 1.875rem; line-height: 2.25rem; }

h1, h2, h3 { font-weight: 600; }

h2, h3 { font-size: 1.5rem; line-height: 2rem; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { appearance: none; margin: 0px; }

*, ::after, ::before { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-=
from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ;=
 --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-s=
pacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-widt=
h: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); =
--tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent=
; --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-=
blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rota=
te: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --t=
w-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --=
tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: =
; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ;=
 }

::-webkit-backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --=
tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --t=
w-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; =
--tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-fr=
om-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; -=
-tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spa=
cing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width:=
 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --=
tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; =
--tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-bl=
ur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate=
: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-=
backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw=
-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; =
--tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-posit=
ion: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordi=
nal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; =
--tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --=
tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --tw-ring-=
offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; --tw-sha=
dow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-blur: ; --=
tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw=
-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop=
-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdro=
p-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-bac=
kdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

:root { --white: #fff; --black: #000; --gray-50: #f7f7f8; --gray-100: #ecec=
f1; --gray-200: #d9d9e3; --gray-300: #c5c5d2; --gray-400: #acacbe; --gray-5=
00: #8e8ea0; --gray-600: #565869; --gray-700: #40414f; --gray-800: #343541;=
 --gray-900: #202123; --gray-950: #050509; --gizmo-gray-500: #999; --gizmo-=
gray-600: #666; --gizmo-gray-950: #0f0f0f; }

html { --text-primary: var(--gray-800); --text-secondary: var(--gray-600); =
--text-tertiary: var(--gray-500); --surface-primary: var(--white); --surfac=
e-secondary: var(--gray-50); --surface-tertiary: var(--gray-100); --border-=
light: var(--gray-100); --border-medium: var(--gray-200); --border-heavy: v=
ar(--gray-300); --border-xheavy: var(--gray-400); }

.dark { --text-primary: var(--gray-100); --text-secondary: var(--gray-300);=
 --text-tertiary: var(--gray-500); --surface-primary: var(--gray-900); --su=
rface-secondary: var(--gray-800); --surface-tertiary: var(--gray-700); --bo=
rder-light: var(--gray-700); --border-medium: var(--gray-600); --border-hea=
vy: var(--gray-500); --border-xheavy: var(--gray-400); }

.gizmo { --text-primary: var(--gizmo-gray-950); --text-secondary: var(--giz=
mo-gray-600); --text-tertiary: var(--gizmo-gray-500); --surface-primary: va=
r(--white); --surface-secondary: var(--gray-50); --surface-tertiary: var(--=
gray-100); --border-light: rgba(0,0,0,.1); --border-medium: rgba(0,0,0,.15)=
; --border-heavy: rgba(0,0,0,.2); --border-xheavy: rgba(0,0,0,.25); }

.gizmo.dark { --text-primary: var(--gray-100); --text-secondary: var(--gray=
-300); --text-tertiary: var(--gizmo-gray-500); --surface-primary: var(--gra=
y-900); --surface-secondary: var(--gray-800); --surface-tertiary: var(--gra=
y-700); --border-light: rgba(217,217,227,.1); --border-medium: rgba(217,217=
,227,.15); --border-heavy: rgba(217,217,227,.2); --border-xheavy: rgba(217,=
217,227,.25); }

textarea:focus { border-color: inherit; box-shadow: none; outline: none; }

::-webkit-scrollbar { height: 1rem; width: 0.5rem; }

::-webkit-scrollbar:horizontal { height: 0.5rem; width: 1rem; }

::-webkit-scrollbar-track { background-color: transparent; border-radius: 9=
999px; }

::-webkit-scrollbar-thumb { --tw-border-opacity: 1; background-color: rgba(=
217, 217, 227, 0.8); border-color: rgba(255,255,255,var(--tw-border-opacity=
)); border-radius: 9999px; border-width: 1px; }

::-webkit-scrollbar-thumb:hover { --tw-bg-opacity: 1; background-color: rgb=
a(217,217,227,var(--tw-bg-opacity)); }

.dark ::-webkit-scrollbar-thumb { background-color: rgba(255, 255, 255, 0.1=
); }

.dark ::-webkit-scrollbar-thumb:hover { background-color: rgba(255, 255, 25=
5, 0.3); }

@media (min-width: 768px) {
  .scrollbar-trigger ::-webkit-scrollbar-thumb { visibility: hidden; }
  .scrollbar-trigger:hover ::-webkit-scrollbar-thumb { visibility: visible;=
 }
}

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.prose { color: var(--tw-prose-body); max-width: 65ch; }

.prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"] *)) { co=
lor: var(--tw-prose-lead); font-size: 1.25em; line-height: 1.6; margin-bott=
om: 1.2em; margin-top: 1.2em; }

.prose :where(a):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-pr=
ose-links); font-weight: 500; text-decoration: underline; }

.prose :where(strong):not(:where([class~=3D"not-prose"] *)) { color: var(--=
tw-prose-bold); font-weight: 600; }

.prose :where(a strong):not(:where([class~=3D"not-prose"] *)) { color: inhe=
rit; }

.prose :where(blockquote strong):not(:where([class~=3D"not-prose"] *)) { co=
lor: inherit; }

.prose :where(thead th strong):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(ol):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
decimal; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; =
}

.prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-alpha; }

.prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-alpha; }

.prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-roman; }

.prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-roman; }

.prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: decimal; }

.prose :where(ul):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
disc; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; }

.prose :where(ol > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-counters); font-weight: 400; }

.prose :where(ul > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-bullets); }

.prose :where(hr):not(:where([class~=3D"not-prose"] *)) { border-color: var=
(--tw-prose-hr); border-top-width: 1px; margin-bottom: 3em; margin-top: 3em=
; }

.prose :where(blockquote):not(:where([class~=3D"not-prose"] *)) { border-le=
ft-color: var(--tw-prose-quote-borders); border-left-width: 0.25rem; color:=
 var(--tw-prose-quotes); font-style: normal; font-weight: 500; margin-botto=
m: 1.6em; margin-top: 1.6em; padding-left: 1em; quotes: "=E2=80=9C" "=E2=80=
=9D" "=E2=80=98" "=E2=80=99"; }

.prose :where(blockquote p:first-of-type):not(:where([class~=3D"not-prose"]=
 *))::before { content: open-quote; }

.prose :where(blockquote p:last-of-type):not(:where([class~=3D"not-prose"] =
*))::after { content: close-quote; }

.prose :where(h1):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 2.25em; font-weight: 800; line-height: 1.11111; =
margin-bottom: 0.888889em; margin-top: 0px; }

.prose :where(h1 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 900; }

.prose :where(h2):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.5em; font-weight: 700; line-height: 1.33333; m=
argin-bottom: 1em; margin-top: 2em; }

.prose :where(h2 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 800; }

.prose :where(h3):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.25em; font-weight: 600; line-height: 1.6; marg=
in-bottom: 0.6em; margin-top: 1.6em; }

.prose :where(h3 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(h4):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-weight: 600; line-height: 1.5; margin-bottom: 0.5em; m=
argin-top: 1.5em; }

.prose :where(h4 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(img):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 2=
em; margin-top: 2em; }

.prose :where(figure > *):not(:where([class~=3D"not-prose"] *)) { margin-bo=
ttom: 0px; margin-top: 0px; }

.prose :where(figcaption):not(:where([class~=3D"not-prose"] *)) { color: va=
r(--tw-prose-captions); font-size: 0.875em; line-height: 1.42857; margin-to=
p: 0.857143em; }

.prose :where(code):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-code); font-size: 0.875em; font-weight: 600; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::before { content=
: "`"; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::after { content:=
 "`"; }

.prose :where(a code):not(:where([class~=3D"not-prose"] *)) { color: inheri=
t; }

.prose :where(h1 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(h2 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.875em; }

.prose :where(h3 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.9em; }

.prose :where(h4 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(blockquote code):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(thead th code):not(:where([class~=3D"not-prose"] *)) { color:=
 inherit; }

.prose :where(pre):not(:where([class~=3D"not-prose"] *)) { background-color=
: transparent; border-radius: 0.375rem; color: currentcolor; font-size: 0.8=
75em; font-weight: 400; line-height: 1.71429; margin: 0px; overflow-x: auto=
; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *)) { background-=
color: transparent; border-radius: 0px; border-width: 0px; color: inherit; =
font-family: inherit; font-size: inherit; font-weight: inherit; line-height=
: inherit; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::before { con=
tent: none; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::after { cont=
ent: none; }

.prose :where(table):not(:where([class~=3D"not-prose"] *)) { font-size: 0.8=
75em; line-height: 1.71429; margin-bottom: 2em; margin-top: 2em; table-layo=
ut: auto; text-align: left; width: 100%; }

.prose :where(thead):not(:where([class~=3D"not-prose"] *)) { border-bottom-=
color: var(--tw-prose-th-borders); border-bottom-width: 1px; }

.prose :where(thead th):not(:where([class~=3D"not-prose"] *)) { color: var(=
--tw-prose-headings); font-weight: 600; padding-bottom: 0.571429em; padding=
-left: 0.571429em; padding-right: 0.571429em; vertical-align: bottom; }

.prose :where(tbody tr):not(:where([class~=3D"not-prose"] *)) { border-bott=
om-color: var(--tw-prose-td-borders); border-bottom-width: 1px; }

.prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose"] *)) { =
border-bottom-width: 0px; }

.prose :where(tbody td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: baseline; }

.prose :where(tfoot):not(:where([class~=3D"not-prose"] *)) { border-top-col=
or: var(--tw-prose-th-borders); border-top-width: 1px; }

.prose :where(tfoot td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: top; }

.prose { --tw-prose-body: #374151; --tw-prose-headings: #111827; --tw-prose=
-lead: #4b5563; --tw-prose-links: #111827; --tw-prose-bold: #111827; --tw-p=
rose-counters: #6b7280; --tw-prose-bullets: #d1d5db; --tw-prose-hr: #e5e7eb=
; --tw-prose-quotes: #111827; --tw-prose-quote-borders: #e5e7eb; --tw-prose=
-captions: #6b7280; --tw-prose-code: #111827; --tw-prose-pre-code: #e5e7eb;=
 --tw-prose-pre-bg: #1f2937; --tw-prose-th-borders: #d1d5db; --tw-prose-td-=
borders: #e5e7eb; --tw-prose-invert-body: #d1d5db; --tw-prose-invert-headin=
gs: #fff; --tw-prose-invert-lead: #9ca3af; --tw-prose-invert-links: #fff; -=
-tw-prose-invert-bold: #fff; --tw-prose-invert-counters: #9ca3af; --tw-pros=
e-invert-bullets: #4b5563; --tw-prose-invert-hr: #374151; --tw-prose-invert=
-quotes: #f3f4f6; --tw-prose-invert-quote-borders: #374151; --tw-prose-inve=
rt-captions: #9ca3af; --tw-prose-invert-code: #fff; --tw-prose-invert-pre-c=
ode: #d1d5db; --tw-prose-invert-pre-bg: rgba(0,0,0,.5); --tw-prose-invert-t=
h-borders: #4b5563; --tw-prose-invert-td-borders: #374151; font-size: 1rem;=
 line-height: 1.75; }

.prose :where(p):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 1.2=
5em; margin-top: 1.25em; }

.prose :where(video):not(:where([class~=3D"not-prose"] *)) { margin-bottom:=
 2em; margin-top: 2em; }

.prose :where(figure):not(:where([class~=3D"not-prose"] *)) { margin-bottom=
: 2em; margin-top: 2em; }

.prose :where(li):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 0.=
5em; margin-top: 0.5em; }

.prose :where(ol > li):not(:where([class~=3D"not-prose"] *)) { padding-left=
: 0.375em; }

.prose :where(ul > li):not(:where([class~=3D"not-prose"] *)) { padding-left=
: 0.375em; }

.prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) { m=
argin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(.prose > ul > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(.prose > ol > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"not-prose"]=
 *)) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(hr + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h2 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h3 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h4 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(thead th:first-child):not(:where([class~=3D"not-prose"] *)) {=
 padding-left: 0px; }

.prose :where(thead th:last-child):not(:where([class~=3D"not-prose"] *)) { =
padding-right: 0px; }

.prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"] *)) { p=
adding: 0.571429em; }

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class=
~=3D"not-prose"] *)) { padding-left: 0px; }

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=
=3D"not-prose"] *)) { padding-right: 0px; }

.prose :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *)) =
{ margin-top: 0px; }

.prose :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)) {=
 margin-bottom: 0px; }

.prose-sm :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.571429em; margin-top: 0.571429em; }

.prose-sm :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-sm :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-base :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose-base :where(.prose > ul > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ul > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > ol > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ol > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > :first-child):not(:where([class~=3D"not-prose"]=
 *)) { margin-top: 0px; }

.prose-base :where(.prose > :last-child):not(:where([class~=3D"not-prose"] =
*)) { margin-bottom: 0px; }

.prose-lg :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.888889em; margin-top: 0.888889em; }

.prose-lg :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-lg :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.8em; margin-top: 0.8em; }

.prose-xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-2xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *))=
 { margin-bottom: 0.833333em; margin-top: 0.833333em; }

.prose-2xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] =
*)) { margin-top: 0px; }

.prose-2xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *=
)) { margin-bottom: 0px; }

.form-input, .form-multiselect, .form-select, .form-textarea { --tw-shadow:=
 0 0 transparent; appearance: none; background-color: rgb(255, 255, 255); b=
order-color: rgb(142, 142, 160); border-radius: 0px; border-width: 1px; fon=
t-size: 1rem; line-height: 1.5rem; padding: 0.5rem 0.75rem; }

.form-input:focus, .form-multiselect:focus, .form-select:focus, .form-texta=
rea:focus { --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/); --tw-ring-offset-=
width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ri=
ng-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) va=
r(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 cal=
c(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); border-color: rg=
b(37, 99, 235); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shad=
ow),var(--tw-shadow); outline: transparent solid 2px; outline-offset: 2px; =
}

.form-input::-webkit-input-placeholder, .form-textarea::-webkit-input-place=
holder { color: rgb(142, 142, 160); opacity: 1; }

.form-input::placeholder, .form-textarea::placeholder { color: rgb(142, 142=
, 160); opacity: 1; }

.form-input::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

.form-input::-webkit-date-and-time-value { min-height: 1.5em; }

.form-input::-webkit-datetime-edit, .form-input::-webkit-datetime-edit-day-=
field, .form-input::-webkit-datetime-edit-hour-field, .form-input::-webkit-=
datetime-edit-meridiem-field, .form-input::-webkit-datetime-edit-millisecon=
d-field, .form-input::-webkit-datetime-edit-minute-field, .form-input::-web=
kit-datetime-edit-month-field, .form-input::-webkit-datetime-edit-second-fi=
eld, .form-input::-webkit-datetime-edit-year-field { padding-bottom: 0px; p=
adding-top: 0px; }

.btn { align-items: center; border-color: transparent; border-radius: 0.5re=
m; border-width: 1px; display: inline-flex; font-size: 0.875rem; font-weigh=
t: 500; line-height: 1.25rem; padding: 0.5rem 0.75rem; pointer-events: auto=
; }

.btn:focus { outline: transparent solid 2px; outline-offset: 2px; }

.btn:disabled { cursor: not-allowed; opacity: 0.5; }

.btn:active { opacity: 0.8; }

.btn-primary { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: =
rgba(16,163,127,var(--tw-bg-opacity)); color: rgba(255,255,255,var(--tw-tex=
t-opacity)); }

.btn-primary:hover { --tw-bg-opacity: 1; background-color: rgba(26,127,100,=
var(--tw-bg-opacity)); }

.btn-primary:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 va=
r(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: va=
r(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-r=
ing-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-primary.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(25=
,195,125,var(--tw-ring-opacity)); }

.btn-primary:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(25=
,195,125,var(--tw-ring-opacity)); }

.btn-danger { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: r=
gba(185,28,28,var(--tw-bg-opacity)); color: rgba(255,255,255,var(--tw-text-=
opacity)); }

.btn-danger:hover { --tw-bg-opacity: 1; background-color: rgba(153,27,27,va=
r(--tw-bg-opacity)); }

.btn-danger:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var=
(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var=
(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ri=
ng-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-sh=
adow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-danger.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220=
,38,38,var(--tw-ring-opacity)); }

.btn-danger:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220=
,38,38,var(--tw-ring-opacity)); }

.btn-danger:disabled:hover { --tw-bg-opacity: 1; background-color: rgba(185=
,28,28,var(--tw-bg-opacity)); }

.btn-danger-outline { --tw-border-opacity: 1; --tw-text-opacity: 1; border-=
color: rgba(185,28,28,var(--tw-border-opacity)); border-width: 1px; color: =
rgba(185,28,28,var(--tw-text-opacity)); }

.btn-danger-outline:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0=
 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-sha=
dow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var=
(--tw-ring-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-o=
ffset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-danger-outline.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: =
rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-danger-outline:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: =
rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-neutral { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(-=
-tw-bg-opacity)); border-color: rgba(0, 0, 0, 0.1); border-width: 1px; colo=
r: var(--text-primary); font-size: 0.875rem; line-height: 1.25rem; }

.btn-neutral:hover { --tw-bg-opacity: 1; background-color: rgba(247,247,248=
,var(--tw-bg-opacity)); }

.btn-neutral:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 va=
r(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: va=
r(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-r=
ing-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-neutral.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(86=
,88,105,var(--tw-ring-opacity)); }

.btn-neutral:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(86=
,88,105,var(--tw-ring-opacity)); }

.dark .btn-neutral { --tw-border-opacity: 1; --tw-bg-opacity: 1; --tw-text-=
opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); border-c=
olor: rgba(86,88,105,var(--tw-border-opacity)); color: rgba(217,217,227,var=
(--tw-text-opacity)); }

.dark .btn-neutral:hover { --tw-bg-opacity: 1; background-color: rgba(64,65=
,79,var(--tw-bg-opacity)); }

.dark .btn-neutral.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: r=
gba(255,255,255,var(--tw-ring-opacity)); }

.dark .btn-neutral:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: r=
gba(255,255,255,var(--tw-ring-opacity)); }

.btn-dark { --tw-border-opacity: 1; --tw-bg-opacity: 1; --tw-text-opacity: =
1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); border-color: rgb=
a(86,88,105,var(--tw-border-opacity)); border-width: 1px; color: rgba(255,2=
55,255,var(--tw-text-opacity)); }

.btn-dark:hover { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(-=
-tw-bg-opacity)); }

.btn-light { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rg=
ba(236,236,241,var(--tw-bg-opacity)); color: rgba(0,0,0,var(--tw-text-opaci=
ty)); }

.btn-light:hover { --tw-bg-opacity: 1; background-color: rgba(255,255,255,v=
ar(--tw-bg-opacity)); }

.btn-disabled { --tw-bg-opacity: 1; --tw-text-opacity: 1; color: rgba(142,1=
42,160,var(--tw-text-opacity)); cursor: not-allowed; }

.btn-disabled, .btn-disabled:hover { background-color: rgba(236,236,241,var=
(--tw-bg-opacity)); }

.btn-disabled:hover { --tw-bg-opacity: 1; }

.btn-small { padding: 0.25rem 0.5rem; }

.hide-scrollbar { }

.hide-scrollbar ::-webkit-scrollbar { display: none; }

.sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height: 1px; =
margin: -1px; overflow: hidden; padding: 0px; position: absolute; white-spa=
ce: nowrap; width: 1px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.visible { visibility: visible; }

.\!invisible { visibility: hidden !important; }

.invisible { visibility: hidden; }

.collapse { visibility: collapse; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.\!sticky { position: sticky !important; }

.sticky { position: sticky; }

.inset-0 { inset: 0px; }

.inset-12 { inset: 3rem; }

.inset-y-0 { bottom: 0px; top: 0px; }

.inset-y-1\/2 { bottom: 50%; top: 50%; }

.-left-1 { left: -0.25rem; }

.-left-2 { left: -0.5rem; }

.-right-1 { right: -0.25rem; }

.-top-0 { top: 0px; }

.-top-0\.5 { top: -0.125rem; }

.-top-1 { top: -0.25rem; }

.-top-16 { top: -4rem; }

.-top-\[1px\] { top: -1px; }

.bottom-0 { bottom: 0px; }

.bottom-1 { bottom: 0.25rem; }

.bottom-1\.5 { bottom: 0.375rem; }

.bottom-2 { bottom: 0.5rem; }

.bottom-2\.5 { bottom: 0.625rem; }

.bottom-3 { bottom: 0.75rem; }

.bottom-4 { bottom: 1rem; }

.bottom-5 { bottom: 1.25rem; }

.bottom-\[124px\] { bottom: 124px; }

.bottom-full { bottom: 100%; }

.left-0 { left: 0px; }

.left-0\.5 { left: 0.125rem; }

.left-1 { left: 0.25rem; }

.left-1\.5 { left: 0.375rem; }

.left-1\/2 { left: 50%; }

.left-16 { left: 4rem; }

.left-2 { left: 0.5rem; }

.left-3 { left: 0.75rem; }

.left-4 { left: 1rem; }

.left-5 { left: 1.25rem; }

.left-\[50\%\] { left: 50%; }

.left-\[7px\] { left: 7px; }

.left-full { left: 100%; }

.right-0 { right: 0px; }

.right-1 { right: 0.25rem; }

.right-1\/2 { right: 50%; }

.right-11 { right: 2.75rem; }

.right-16 { right: 4rem; }

.right-2 { right: 0.5rem; }

.right-3 { right: 0.75rem; }

.right-4 { right: 1rem; }

.right-6 { right: 1.5rem; }

.top-0 { top: 0px; }

.top-1 { top: 0.25rem; }

.top-1\/2 { top: 50%; }

.top-11 { top: 2.75rem; }

.top-14 { top: 3.5rem; }

.top-2 { top: 0.5rem; }

.top-3 { top: 0.75rem; }

.top-4 { top: 1rem; }

.top-5 { top: 1.25rem; }

.top-6 { top: 1.5rem; }

.top-8 { top: 2rem; }

.top-\[-3px\] { top: -3px; }

.top-\[-6px\] { top: -6px; }

.top-\[20px\] { top: 20px; }

.top-\[50\%\] { top: 50%; }

.top-\[calc\(100\%-10px\)\] { top: calc(100% - 10px); }

.top-full { top: 100%; }

.-z-0, .z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-40 { z-index: 40; }

.z-50 { z-index: 50; }

.z-\[14\] { z-index: 14; }

.z-\[15\] { z-index: 15; }

.z-\[16\] { z-index: 16; }

.z-\[17\] { z-index: 17; }

.z-\[2\] { z-index: 2; }

.z-\[60\] { z-index: 60; }

.col-auto { grid-column: auto; }

.col-span-1 { grid-column: span 1 / span 1; }

.col-span-3 { grid-column: span 3 / span 3; }

.col-start-2 { grid-column-start: 2; }

.row-auto { grid-row: auto; }

.row-span-4 { grid-row: span 4 / span 4; }

.row-start-2 { grid-row-start: 2; }

.float-left { float: left; }

.m-0 { margin: 0px; }

.m-1 { margin: 0.25rem; }

.m-1\.5 { margin: 0.375rem; }

.m-2 { margin: 0.5rem; }

.m-4 { margin: 1rem; }

.m-6 { margin: 1.5rem; }

.m-auto { margin: auto; }

.-mx-1 { margin-left: -0.25rem; margin-right: -0.25rem; }

.-mx-4 { margin-left: -1rem; margin-right: -1rem; }

.-my-0 { margin-bottom: 0px; margin-top: 0px; }

.-my-0\.5 { margin-bottom: -0.125rem; margin-top: -0.125rem; }

.-my-1 { margin-bottom: -0.25rem; margin-top: -0.25rem; }

.-my-2 { margin-bottom: -0.5rem; margin-top: -0.5rem; }

.mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }

.mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }

.mx-4 { margin-left: 1rem; margin-right: 1rem; }

.mx-6 { margin-left: 1.5rem; margin-right: 1.5rem; }

.mx-8 { margin-left: 2rem; margin-right: 2rem; }

.mx-auto { margin-left: auto; margin-right: auto; }

.my-0 { margin-bottom: 0px; margin-top: 0px; }

.my-1 { margin-bottom: 0.25rem; margin-top: 0.25rem; }

.my-1\.5 { margin-bottom: 0.375rem; margin-top: 0.375rem; }

.my-10 { margin-bottom: 2.5rem; margin-top: 2.5rem; }

.my-2 { margin-bottom: 0.5rem; margin-top: 0.5rem; }

.my-2\.5 { margin-bottom: 0.625rem; margin-top: 0.625rem; }

.my-3 { margin-bottom: 0.75rem; margin-top: 0.75rem; }

.my-4 { margin-bottom: 1rem; margin-top: 1rem; }

.my-auto { margin-bottom: auto; margin-top: auto; }

.-ml-0 { margin-left: 0px; }

.-ml-0\.5 { margin-left: -0.125rem; }

.-ml-1 { margin-left: -0.25rem; }

.-ml-2 { margin-left: -0.5rem; }

.-ml-4 { margin-left: -1rem; }

.-ml-8 { margin-left: -2rem; }

.-ml-\[1px\] { margin-left: -1px; }

.-mr-1 { margin-right: -0.25rem; }

.-mr-12 { margin-right: -3rem; }

.-mr-2 { margin-right: -0.5rem; }

.-mt-0 { margin-top: 0px; }

.-mt-0\.5 { margin-top: -0.125rem; }

.-mt-\[0\.75px\] { margin-top: -0.75px; }

.-mt-\[3px\] { margin-top: -3px; }

.mb-0 { margin-bottom: 0px; }

.mb-0\.5 { margin-bottom: 0.125rem; }

.mb-1 { margin-bottom: 0.25rem; }

.mb-1\.5 { margin-bottom: 0.375rem; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-12 { margin-bottom: 3rem; }

.mb-16 { margin-bottom: 4rem; }

.mb-2 { margin-bottom: 0.5rem; }

.mb-3 { margin-bottom: 0.75rem; }

.mb-4 { margin-bottom: 1rem; }

.mb-5 { margin-bottom: 1.25rem; }

.mb-6 { margin-bottom: 1.5rem; }

.mb-7 { margin-bottom: 1.75rem; }

.mb-8 { margin-bottom: 2rem; }

.mb-auto { margin-bottom: auto; }

.ml-0 { margin-left: 0px; }

.ml-0\.5 { margin-left: 0.125rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-12 { margin-left: 3rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-6 { margin-left: 1.5rem; }

.ml-auto { margin-left: auto; }

.mr-0 { margin-right: 0px; }

.mr-1 { margin-right: 0.25rem; }

.mr-2 { margin-right: 0.5rem; }

.mr-3 { margin-right: 0.75rem; }

.mr-4 { margin-right: 1rem; }

.mr-8 { margin-right: 2rem; }

.mr-auto { margin-right: auto; }

.mt-0 { margin-top: 0px; }

.mt-0\.5 { margin-top: 0.125rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-7 { margin-top: 1.75rem; }

.mt-8 { margin-top: 2rem; }

.mt-\[-2px\] { margin-top: -2px; }

.mt-auto { margin-top: auto; }

.box-content { box-sizing: content-box; }

.line-clamp-1 { -webkit-line-clamp: 1; }

.line-clamp-1, .line-clamp-2 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-2 { -webkit-line-clamp: 2; }

.line-clamp-3 { -webkit-line-clamp: 3; }

.line-clamp-3, .line-clamp-6 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-6 { -webkit-line-clamp: 6; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.flow-root { display: flow-root; }

.grid { display: grid; }

.contents { display: contents; }

.hidden { display: none; }

.aspect-\[4\/7\] { aspect-ratio: 4 / 7; }

.aspect-\[7\/4\] { aspect-ratio: 7 / 4; }

.aspect-square { aspect-ratio: 1 / 1; }

.h-0 { height: 0px; }

.h-1 { height: 0.25rem; }

.h-1\.5 { height: 0.375rem; }

.h-1\/4 { height: 25%; }

.h-10 { height: 2.5rem; }

.h-11 { height: 2.75rem; }

.h-12 { height: 3rem; }

.h-14 { height: 3.5rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\/3 { height: 66.6667%; }

.h-20 { height: 5rem; }

.h-24 { height: 6rem; }

.h-3 { height: 0.75rem; }

.h-3\.5 { height: 0.875rem; }

.h-32 { height: 8rem; }

.h-36 { height: 9rem; }

.h-4 { height: 1rem; }

.h-40 { height: 10rem; }

.h-44 { height: 11rem; }

.h-48 { height: 12rem; }

.h-5 { height: 1.25rem; }

.h-52 { height: 13rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-96 { height: 24rem; }

.h-\[100dvh\] { height: 100dvh; }

.h-\[1200px\] { height: 1200px; }

.h-\[128px\] { height: 128px; }

.h-\[12px\] { height: 12px; }

.h-\[14px\] { height: 14px; }

.h-\[15px\] { height: 15px; }

.h-\[18px\] { height: 18px; }

.h-\[19px\] { height: 19px; }

.h-\[1px\] { height: 1px; }

.h-\[21px\] { height: 21px; }

.h-\[22px\] { height: 22px; }

.h-\[23px\] { height: 23px; }

.h-\[25px\] { height: 25px; }

.h-\[30px\] { height: 30px; }

.h-\[34px\] { height: 34px; }

.h-\[36px\] { height: 36px; }

.h-\[3px\] { height: 3px; }

.h-\[404px\] { height: 404px; }

.h-\[42px\] { height: 42px; }

.h-\[50px\] { height: 50px; }

.h-\[60px\] { height: 60px; }

.h-\[66\%\] { height: 66%; }

.h-\[70px\] { height: 70px; }

.h-\[70vh\] { height: 70vh; }

.h-\[72px\] { height: 72px; }

.h-auto { height: auto; }

.h-fit { height: fit-content; }

.h-full { height: 100%; }

.h-px { height: 1px; }

.h-screen { height: 100vh; }

.\!max-h-\[100vh\] { max-height: 100vh !important; }

.max-h-0 { max-height: 0px; }

.max-h-32 { max-height: 8rem; }

.max-h-5 { max-height: 1.25rem; }

.max-h-60 { max-height: 15rem; }

.max-h-64 { max-height: 16rem; }

.max-h-72 { max-height: 18rem; }

.max-h-\[28rem\] { max-height: 28rem; }

.max-h-\[450px\] { max-height: 450px; }

.max-h-\[75vh\] { max-height: 75vh; }

.max-h-\[80vh\] { max-height: 80vh; }

.max-h-\[85vh\] { max-height: 85vh; }

.max-h-\[calc\(100vh-150px\)\] { max-height: calc(100vh - 150px); }

.max-h-\[calc\(100vh-300px\)\] { max-height: calc(100vh - 300px); }

.min-h-0 { min-height: 0px; }

.min-h-\[1\.5rem\] { min-height: 1.5rem; }

.min-h-\[200px\] { min-height: 200px; }

.min-h-\[20px\] { min-height: 20px; }

.min-h-\[24px\] { min-height: 24px; }

.min-h-\[40px\] { min-height: 40px; }

.min-h-\[44px\] { min-height: 44px; }

.min-h-\[4rem\] { min-height: 4rem; }

.min-h-\[50vh\] { min-height: 50vh; }

.min-h-\[60px\] { min-height: 60px; }

.min-h-\[71px\] { min-height: 71px; }

.min-h-\[80vh\] { min-height: 80vh; }

.min-h-fit { min-height: fit-content; }

.min-h-full { min-height: 100%; }

.min-h-screen { min-height: 100vh; }

.w-0 { width: 0px; }

.w-1 { width: 0.25rem; }

.w-1\.5 { width: 0.375rem; }

.w-1\/2 { width: 50%; }

.w-1\/3 { width: 33.3333%; }

.w-1\/4 { width: 25%; }

.w-10 { width: 2.5rem; }

.w-104 { width: 26rem; }

.w-11 { width: 2.75rem; }

.w-12 { width: 3rem; }

.w-14 { width: 3.5rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\/3 { width: 66.6667%; }

.w-20 { width: 5rem; }

.w-28 { width: 7rem; }

.w-3 { width: 0.75rem; }

.w-3\.5 { width: 0.875rem; }

.w-3\/5 { width: 60%; }

.w-32 { width: 8rem; }

.w-4 { width: 1rem; }

.w-40 { width: 10rem; }

.w-48 { width: 12rem; }

.w-5 { width: 1.25rem; }

.w-6 { width: 1.5rem; }

.w-60 { width: 15rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-80 { width: 20rem; }

.w-9 { width: 2.25rem; }

.w-96 { width: 24rem; }

.w-\[103px\] { width: 103px; }

.w-\[120px\] { width: 120px; }

.w-\[128px\] { width: 128px; }

.w-\[14px\] { width: 14px; }

.w-\[15px\] { width: 15px; }

.w-\[184px\] { width: 184px; }

.w-\[18px\] { width: 18px; }

.w-\[2\.5px\] { width: 2.5px; }

.w-\[209px\] { width: 209px; }

.w-\[218px\] { width: 218px; }

.w-\[21px\] { width: 21px; }

.w-\[23px\] { width: 23px; }

.w-\[25vw\] { width: 25vw; }

.w-\[260px\] { width: 260px; }

.w-\[280px\] { width: 280px; }

.w-\[30px\] { width: 30px; }

.w-\[34px\] { width: 34px; }

.w-\[3px\] { width: 3px; }

.w-\[42px\] { width: 42px; }

.w-\[66\%\] { width: 66%; }

.w-\[70px\] { width: 70px; }

.w-\[72px\] { width: 72px; }

.w-\[860px\] { width: 860px; }

.w-\[88px\] { width: 88px; }

.w-\[90vw\] { width: 90vw; }

.w-\[960px\] { width: 960px; }

.w-\[calc\(100\%\+4rem\)\] { width: calc(100% + 4rem); }

.w-\[calc\(100\%-50px\)\] { width: calc(100% - 50px); }

.w-auto { width: auto; }

.w-fit { width: fit-content; }

.w-full { width: 100%; }

.w-px { width: 1px; }

.w-screen { width: 100vw; }

.min-w-0 { min-width: 0px; }

.min-w-\[100px\] { min-width: 100px; }

.min-w-\[100vw\] { min-width: 100vw; }

.min-w-\[175px\] { min-width: 175px; }

.min-w-\[180px\] { min-width: 180px; }

.min-w-\[200px\] { min-width: 200px; }

.min-w-\[220px\] { min-width: 220px; }

.min-w-\[256px\] { min-width: 256px; }

.min-w-\[25vw\] { min-width: 25vw; }

.min-w-\[280px\] { min-width: 280px; }

.min-w-\[300px\] { min-width: 300px; }

.min-w-\[32px\] { min-width: 32px; }

.min-w-\[340px\] { min-width: 340px; }

.min-w-\[50px\] { min-width: 50px; }

.min-w-\[8rem\] { min-width: 8rem; }

.min-w-full { min-width: 100%; }

.\!max-w-\[500px\] { max-width: 500px !important; }

.\!max-w-\[80vw\] { max-width: 80vw !important; }

.max-w-2xl { max-width: 42rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-5xl { max-width: 64rem; }

.max-w-6xl { max-width: 72rem; }

.max-w-7xl { max-width: 80rem; }

.max-w-\[100vw\] { max-width: 100vw; }

.max-w-\[160px\] { max-width: 160px; }

.max-w-\[200px\] { max-width: 200px; }

.max-w-\[220px\] { max-width: 220px; }

.max-w-\[320px\] { max-width: 320px; }

.max-w-\[350px\] { max-width: 350px; }

.max-w-\[372px\] { max-width: 372px; }

.max-w-\[400px\] { max-width: 400px; }

.max-w-\[440px\] { max-width: 440px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-\[550px\] { max-width: 550px; }

.max-w-\[560px\] { max-width: 560px; }

.max-w-\[650px\] { max-width: 650px; }

.max-w-\[90vw\] { max-width: 90vw; }

.max-w-\[calc\(100vw-3rem\)\] { max-width: calc(100vw - 3rem); }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.max-w-xs { max-width: 20rem; }

.flex-1 { flex: 1 1 0%; }

.flex-auto { flex: 1 1 auto; }

.flex-initial { flex: 0 1 auto; }

.flex-none { flex: 0 0 auto; }

.flex-shrink { flex-shrink: 1; }

.flex-shrink-0 { flex-shrink: 0; }

.shrink { flex-shrink: 1; }

.shrink-0 { flex-shrink: 0; }

.flex-grow { flex-grow: 1; }

.flex-grow-0 { flex-grow: 0; }

.grow { flex-grow: 1; }

.table-auto { table-layout: auto; }

.table-fixed { table-layout: fixed; }

.border-separate { border-collapse: separate; }

.border-spacing-0 { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px;=
 border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y); }

.origin-\[50\%_50\%\] { transform-origin: 50% 50%; }

.-translate-x-1\/2 { --tw-translate-x: -50%; }

.-translate-x-1\/2, .-translate-x-\[calc\(100\%\+4px\)\] { transform: trans=
late(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) =
skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) s=
caleY(var(--tw-scale-y)); }

.-translate-x-\[calc\(100\%\+4px\)\] { --tw-translate-x: calc(-100% + -4px)=
; }

.-translate-x-full { --tw-translate-x: -100%; }

.-translate-x-full, .-translate-y-1\/2 { transform: translate(var(--tw-tran=
slate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-translate-y-1\/2 { --tw-translate-y: -50%; }

.translate-x-0 { --tw-translate-x: 0px; }

.translate-x-0, .translate-x-0\.5 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-x-0\.5 { --tw-translate-x: 0.125rem; }

.translate-x-1 { --tw-translate-x: 0.25rem; }

.translate-x-1, .translate-x-1\/2 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-x-1\/2 { --tw-translate-x: 50%; }

.translate-x-\[-50\%\] { --tw-translate-x: -50%; }

.translate-x-\[-50\%\], .translate-x-\[260px\] { transform: translate(var(-=
-tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(=
--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(=
--tw-scale-y)); }

.translate-x-\[260px\] { --tw-translate-x: 260px; }

.translate-x-full { --tw-translate-x: 100%; }

.translate-x-full, .translate-y-0 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-y-0 { --tw-translate-y: 0px; }

.translate-y-1 { --tw-translate-y: 0.25rem; }

.translate-y-1, .translate-y-3 { transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) sk=
ewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); =
}

.translate-y-3 { --tw-translate-y: 0.75rem; }

.translate-y-\[-50\%\] { --tw-translate-y: -50%; }

.translate-y-\[-50\%\], .translate-y-\[calc\(-50\%-1em\)\] { transform: tra=
nslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)=
) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))=
 scaleY(var(--tw-scale-y)); }

.translate-y-\[calc\(-50\%-1em\)\] { --tw-translate-y: calc(-50% - 1em); }

.translate-y-\[calc\(-50\%-1em\+16px\)\] { --tw-translate-y: calc(-50% - 1e=
m + 16px); }

.translate-y-\[calc\(-50\%-1em-16px\)\], .translate-y-\[calc\(-50\%-1em\+16=
px\)\] { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) =
rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) sc=
aleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-y-\[calc\(-50\%-1em-16px\)\] { --tw-translate-y: calc(-50% - 1em=
 - 16px); }

.translate-y-\[calc\(100\%-71px\)\] { --tw-translate-y: calc(100% - 71px); =
}

.-rotate-180, .translate-y-\[calc\(100\%-71px\)\] { transform: translate(va=
r(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }

.-rotate-180 { --tw-rotate: -180deg; }

.-rotate-45 { --tw-rotate: -45deg; }

.-rotate-45, .-rotate-90 { transform: translate(var(--tw-translate-x),var(-=
-tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(va=
r(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-rotate-90 { --tw-rotate: -90deg; }

.rotate-0 { --tw-rotate: 0deg; }

.rotate-0, .rotate-180 { transform: translate(var(--tw-translate-x),var(--t=
w-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(=
--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-180 { --tw-rotate: 180deg; }

.rotate-45 { --tw-rotate: 45deg; }

.rotate-45, .rotate-90 { transform: translate(var(--tw-translate-x),var(--t=
w-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(=
--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-90 { --tw-rotate: 90deg; }

.scale-0 { --tw-scale-x: 0; --tw-scale-y: 0; }

.-scale-x-100, .scale-0 { transform: translate(var(--tw-translate-x),var(--=
tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var=
(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-scale-x-100 { --tw-scale-x: -1; }

.scale-x-75 { --tw-scale-x: .75; }

.scale-x-75, .transform { transform: translate(var(--tw-translate-x),var(--=
tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var=
(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@-webkit-keyframes pulse {=20
  50% { opacity: 0.5; }
}

@keyframes pulse {=20
  50% { opacity: 0.5; }
}

.animate-pulse { animation: 2s cubic-bezier(0.4, 0, 0.6, 1) 0s infinite nor=
mal none running pulse; }

@-webkit-keyframes slideDownAndFade {=20
  0% { opacity: 0; transform: translateY(-2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.animate-slideDownAndFade { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0=
s 1 normal none running slideDownAndFade; }

@-webkit-keyframes slideLeftAndFade {=20
  0% { opacity: 0; transform: translateX(2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.animate-slideLeftAndFade { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0=
s 1 normal none running slideLeftAndFade; }

@-webkit-keyframes spin {=20
  100% { transform: rotate(1turn); }
}

@keyframes spin {=20
  100% { transform: rotate(1turn); }
}

.animate-spin { animation: 1s linear 0s infinite normal none running spin; =
}

.cursor-auto { cursor: auto; }

.cursor-default { cursor: default; }

.cursor-not-allowed { cursor: not-allowed; }

.cursor-pointer { cursor: pointer; }

.cursor-progress { cursor: progress; }

.cursor-wait { cursor: wait; }

.select-none { user-select: none; }

.resize-none { resize: none; }

.resize { resize: both; }

.list-decimal { list-style-type: decimal; }

.list-disc { list-style-type: disc; }

.list-none { list-style-type: none; }

.appearance-none { appearance: none; }

.grid-flow-row { grid-auto-flow: row; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }

.grid-cols-\[10px_1fr_10px\] { grid-template-columns: 10px 1fr 10px; }

.grid-cols-\[auto_max-content\] { grid-template-columns: auto max-content; =
}

.grid-cols-\[repeat\(auto-fit\,minmax\(250px\,1fr\)\)\] { grid-template-col=
umns: repeat(auto-fit, minmax(250px, 1fr)); }

.grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }

.grid-rows-\[minmax\(10px\,_1fr\)_auto_minmax\(10px\,_1fr\)\] { grid-templa=
te-rows: minmax(10px, 1fr) auto minmax(10px, 1fr); }

.flex-row { flex-direction: row; }

.flex-col { flex-direction: column; }

.flex-col-reverse { flex-direction: column-reverse; }

.flex-wrap { flex-wrap: wrap; }

.flex-wrap-reverse { flex-wrap: wrap-reverse; }

.place-items-center { place-items: center; }

.content-center { align-content: center; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.items-stretch { align-items: stretch; }

.justify-start { justify-content: flex-start; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.justify-around { justify-content: space-around; }

.justify-stretch { justify-content: stretch; }

.justify-items-center { justify-items: center; }

.\!gap-1 { gap: 0.25rem !important; }

.gap-0 { gap: 0px; }

.gap-0\.5 { gap: 0.125rem; }

.gap-1 { gap: 0.25rem; }

.gap-1\.5 { gap: 0.375rem; }

.gap-10 { gap: 2.5rem; }

.gap-2 { gap: 0.5rem; }

.gap-2\.5 { gap: 0.625rem; }

.gap-3 { gap: 0.75rem; }

.gap-3\.5 { gap: 0.875rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-7 { gap: 1.75rem; }

.gap-x-1 { column-gap: 0.25rem; }

.gap-x-1\.5 { column-gap: 0.375rem; }

.gap-x-3 { column-gap: 0.75rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-x-6 { column-gap: 1.5rem; }

.gap-x-9 { column-gap: 2.25rem; }

.gap-y-2 { row-gap: 0.5rem; }

.gap-y-4 { row-gap: 1rem; }

.-space-y-px > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; m=
argin-bottom: calc(-1px*var(--tw-space-y-reverse)); margin-top: calc(-1px*(=
1 - var(--tw-space-y-reverse))); }

.space-x-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(.25rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(=
.25rem*var(--tw-space-x-reverse)); }

.space-x-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; =
margin-left: calc(.375rem*(1 - var(--tw-space-x-reverse))); margin-right: c=
alc(.375rem*var(--tw-space-x-reverse)); }

.space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.=
5rem*var(--tw-space-x-reverse)); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(1rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(1r=
em*var(--tw-space-x-reverse)); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.25rem*var(--tw-space-y-reverse)); margin-top: calc(.25rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; =
margin-bottom: calc(.375rem*var(--tw-space-y-reverse)); margin-top: calc(.3=
75rem*(1 - var(--tw-space-y-reverse))); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.5rem*var(--tw-space-y-reverse)); margin-top: calc(.5rem*(=
1 - var(--tw-space-y-reverse))); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.75rem*var(--tw-space-y-reverse)); margin-top: calc(.75rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(1rem*var(--tw-space-y-reverse)); margin-top: calc(1rem*(1 =
- var(--tw-space-y-reverse))); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; bor=
der-left-width: calc(1px*(1 - var(--tw-divide-x-reverse))); border-right-wi=
dth: calc(1px*var(--tw-divide-x-reverse)); }

.divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: 0; bor=
der-bottom-width: calc(1px*var(--tw-divide-y-reverse)); border-top-width: c=
alc(1px*(1 - var(--tw-divide-y-reverse))); }

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgba(217,217,227,var(--tw-divide-opacity)); }

.divide-token-border-light > :not([hidden]) ~ :not([hidden]) { border-color=
: var(--border-light); }

.divide-white\/10 > :not([hidden]) ~ :not([hidden]) { border-color: rgba(25=
5, 255, 255, 0.1); }

.self-start { align-self: flex-start; }

.self-end { align-self: flex-end; }

.self-center { align-self: center; }

.self-stretch { align-self: stretch; }

.justify-self-start { justify-self: start; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.overflow-y-hidden { overflow-y: hidden; }

.overflow-y-scroll { overflow-y: scroll; }

.truncate { overflow: hidden; white-space: nowrap; }

.overflow-ellipsis, .text-ellipsis, .truncate { text-overflow: ellipsis; }

.whitespace-nowrap { white-space: nowrap; }

.\!whitespace-pre { white-space: pre !important; }

.whitespace-pre-line { white-space: pre-line; }

.\!whitespace-pre-wrap { white-space: pre-wrap !important; }

.whitespace-pre-wrap { white-space: pre-wrap; }

.break-words { overflow-wrap: break-word; }

.break-all { word-break: break-all; }

.\!rounded { border-radius: 0.25rem !important; }

.\!rounded-lg { border-radius: 0.5rem !important; }

.rounded { border-radius: 0.25rem; }

.rounded-\[38px\] { border-radius: 38px; }

.rounded-\[4px\] { border-radius: 4px; }

.rounded-\[5px\] { border-radius: 5px; }

.rounded-\[6px\] { border-radius: 6px; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-md { border-radius: 0.375rem; }

.rounded-none { border-radius: 0px; }

.rounded-sm { border-radius: 0.125rem; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-b-lg { border-bottom-left-radius: 0.5rem; border-bottom-right-radi=
us: 0.5rem; }

.rounded-l-full { border-bottom-left-radius: 9999px; border-top-left-radius=
: 9999px; }

.rounded-l-md { border-bottom-left-radius: 0.375rem; border-top-left-radius=
: 0.375rem; }

.rounded-l-none { border-bottom-left-radius: 0px; border-top-left-radius: 0=
px; }

.rounded-r-full { border-bottom-right-radius: 9999px; border-top-right-radi=
us: 9999px; }

.rounded-r-md { border-bottom-right-radius: 0.375rem; border-top-right-radi=
us: 0.375rem; }

.rounded-r-none { border-bottom-right-radius: 0px; border-top-right-radius:=
 0px; }

.rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radius=
: 30px; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.rounded-t-none { border-top-left-radius: 0px; border-top-right-radius: 0px=
; }

.rounded-t-xl { border-top-left-radius: 0.75rem; border-top-right-radius: 0=
.75rem; }

.rounded-br-sm { border-bottom-right-radius: 0.125rem; }

.border { border-width: 1px; }

.border-0 { border-width: 0px; }

.border-2 { border-width: 2px; }

.border-\[0\.5px\] { border-width: 0.5px; }

.border-y { border-top-width: 1px; }

.border-b, .border-y { border-bottom-width: 1px; }

.border-b-\[0\.5px\] { border-bottom-width: 0.5px; }

.border-l { border-left-width: 1px; }

.border-l-0 { border-left-width: 0px; }

.border-l-2 { border-left-width: 2px; }

.border-l-4 { border-left-width: 4px; }

.border-l-8 { border-left-width: 8px; }

.border-r { border-right-width: 1px; }

.border-r-8 { border-right-width: 8px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-t-8 { border-top-width: 8px; }

.border-dashed { border-style: dashed; }

.border-none { border-style: none; }

.border-black { --tw-border-opacity: 1; border-color: rgba(0,0,0,var(--tw-b=
order-opacity)); }

.border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }

.border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.border-black\/30 { border-color: rgba(0, 0, 0, 0.3); }

.border-black\/5 { border-color: rgba(0, 0, 0, 0.05); }

.border-brand-green { --tw-border-opacity: 1; border-color: rgba(25,195,125=
,var(--tw-border-opacity)); }

.border-gizmo-gray-950 { --tw-border-opacity: 1; border-color: rgba(15,15,1=
5,var(--tw-border-opacity)); }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236,241,v=
ar(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgba(217,217,227,v=
ar(--tw-border-opacity)); }

.border-gray-300 { --tw-border-opacity: 1; border-color: rgba(197,197,210,v=
ar(--tw-border-opacity)); }

.border-gray-400 { --tw-border-opacity: 1; border-color: rgba(172,172,190,v=
ar(--tw-border-opacity)); }

.border-gray-500 { --tw-border-opacity: 1; border-color: rgba(142,142,160,v=
ar(--tw-border-opacity)); }

.border-gray-700 { --tw-border-opacity: 1; border-color: rgba(64,65,79,var(=
--tw-border-opacity)); }

.border-gray-800 { --tw-border-opacity: 1; border-color: rgba(52,53,65,var(=
--tw-border-opacity)); }

.border-gray-950 { --tw-border-opacity: 1; border-color: rgba(5,5,9,var(--t=
w-border-opacity)); }

.border-green-500 { --tw-border-opacity: 1; border-color: rgba(25,195,125,v=
ar(--tw-border-opacity)); }

.border-green-600 { --tw-border-opacity: 1; border-color: rgba(16,163,127,v=
ar(--tw-border-opacity)); }

.border-orange-400 { --tw-border-opacity: 1; border-color: rgba(255,128,82,=
var(--tw-border-opacity)); }

.border-orange-500 { --tw-border-opacity: 1; border-color: rgba(224,108,43,=
var(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgba(239,68,68,var(=
--tw-border-opacity)); }

.border-token-border-heavy { border-color: var(--border-heavy); }

.border-token-border-light { border-color: var(--border-light); }

.border-token-border-medium { border-color: var(--border-medium); }

.border-token-surface-primary { border-color: var(--surface-primary); }

.border-token-surface-secondary { border-color: var(--surface-secondary); }

.border-token-surface-tertiary { border-color: var(--surface-tertiary); }

.border-token-text-tertiary { border-color: var(--text-tertiary); }

.border-transparent { border-color: transparent; }

.border-white { --tw-border-opacity: 1; border-color: rgba(255,255,255,var(=
--tw-border-opacity)); }

.border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.border-y-token-border-medium { border-bottom-color: var(--border-medium); =
border-top-color: var(--border-medium); }

.border-l-transparent { border-left-color: transparent; }

.border-r-transparent { border-right-color: transparent; }

.border-t-\[\#0077FF\] { --tw-border-opacity: 1; border-top-color: rgba(0,1=
19,255,var(--tw-border-opacity)); }

.border-opacity-75 { --tw-border-opacity: 0.75; }

.\!bg-brand-purple { --tw-bg-opacity: 1 !important; background-color: rgba(=
171,104,255,var(--tw-bg-opacity)) !important; }

.\!bg-gray-200 { --tw-bg-opacity: 1 !important; background-color: rgba(217,=
217,227,var(--tw-bg-opacity)) !important; }

.\!bg-gray-700 { --tw-bg-opacity: 1 !important; background-color: rgba(64,6=
5,79,var(--tw-bg-opacity)) !important; }

.\!bg-transparent { background-color: transparent !important; }

.bg-\[\#0077FF\] { --tw-bg-opacity: 1; background-color: rgba(0,119,255,var=
(--tw-bg-opacity)); }

.bg-\[\#10A37F\] { --tw-bg-opacity: 1; background-color: rgba(16,163,127,va=
r(--tw-bg-opacity)); }

.bg-\[\#3C46FF\] { --tw-bg-opacity: 1; background-color: rgba(60,70,255,var=
(--tw-bg-opacity)); }

.bg-\[\#4046EC\] { --tw-bg-opacity: 1; background-color: rgba(64,70,236,var=
(--tw-bg-opacity)); }

.bg-\[\#B161FD\] { --tw-bg-opacity: 1; background-color: rgba(177,97,253,va=
r(--tw-bg-opacity)); }

.bg-\[\#F8CA27\] { --tw-bg-opacity: 1; background-color: rgba(248,202,39,va=
r(--tw-bg-opacity)); }

.bg-\[\#FF5588\] { --tw-bg-opacity: 1; background-color: rgba(255,85,136,va=
r(--tw-bg-opacity)); }

.bg-\[\#FF6E3C\] { --tw-bg-opacity: 1; background-color: rgba(255,110,60,va=
r(--tw-bg-opacity)); }

.bg-\[rgba\(30\,203\,239\,0\.07\)\] { background-color: rgba(30, 203, 239, =
0.07); }

.bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,var(--tw-bg-op=
acity)); }

.bg-black\/20 { background-color: rgba(0, 0, 0, 0.2); }

.bg-black\/5 { background-color: rgba(0, 0, 0, 0.05); }

.bg-black\/50 { background-color: rgba(0, 0, 0, 0.5); }

.bg-black\/90 { background-color: rgba(0, 0, 0, 0.9); }

.bg-black\/\[\.04\] { background-color: rgba(0, 0, 0, 0.04); }

.bg-black\/\[\.08\] { background-color: rgba(0, 0, 0, 0.08); }

.bg-black\/\[\.12\] { background-color: rgba(0, 0, 0, 0.12); }

.bg-blue-100 { --tw-bg-opacity: 1; background-color: rgba(219,234,254,var(-=
-tw-bg-opacity)); }

.bg-blue-200 { --tw-bg-opacity: 1; background-color: rgba(191,219,254,var(-=
-tw-bg-opacity)); }

.bg-blue-300 { --tw-bg-opacity: 1; background-color: rgba(121,137,255,var(-=
-tw-bg-opacity)); }

.bg-blue-400 { --tw-bg-opacity: 1; background-color: rgba(58,136,255,var(--=
tw-bg-opacity)); }

.bg-blue-500 { --tw-bg-opacity: 1; background-color: rgba(69,89,164,var(--t=
w-bg-opacity)); }

.bg-blue-700 { --tw-bg-opacity: 1; background-color: rgba(29,78,216,var(--t=
w-bg-opacity)); }

.bg-blue-950 { --tw-bg-opacity: 1; background-color: rgba(23,37,84,var(--tw=
-bg-opacity)); }

.bg-brand-blue-800 { --tw-bg-opacity: 1; background-color: rgba(0,102,222,v=
ar(--tw-bg-opacity)); }

.bg-brand-green { --tw-bg-opacity: 1; background-color: rgba(25,195,125,var=
(--tw-bg-opacity)); }

.bg-brand-green-800 { --tw-bg-opacity: 1; background-color: rgba(5,167,70,v=
ar(--tw-bg-opacity)); }

.bg-brand-green\/20 { background-color: rgba(25, 195, 125, 0.2); }

.bg-brand-green\/40 { background-color: rgba(25, 195, 125, 0.4); }

.bg-brand-purple { --tw-bg-opacity: 1; background-color: rgba(171,104,255,v=
ar(--tw-bg-opacity)); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(-=
-tw-bg-opacity)); }

.bg-gray-200 { --tw-bg-opacity: 1; background-color: rgba(217,217,227,var(-=
-tw-bg-opacity)); }

.bg-gray-300 { --tw-bg-opacity: 1; background-color: rgba(197,197,210,var(-=
-tw-bg-opacity)); }

.bg-gray-400 { --tw-bg-opacity: 1; background-color: rgba(172,172,190,var(-=
-tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(247,247,248,var(--=
tw-bg-opacity)); }

.bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(142,142,160,var(-=
-tw-bg-opacity)); }

.bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(86,88,105,var(--t=
w-bg-opacity)); }

.bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw=
-bg-opacity)); }

.bg-gray-800 { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw=
-bg-opacity)); }

.bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(32,33,35,var(--tw=
-bg-opacity)); }

.bg-gray-950 { --tw-bg-opacity: 1; background-color: rgba(5,5,9,var(--tw-bg=
-opacity)); }

.bg-green-100 { --tw-bg-opacity: 1; background-color: rgba(210,244,211,var(=
--tw-bg-opacity)); }

.bg-green-200 { --tw-bg-opacity: 1; background-color: rgba(185,238,188,var(=
--tw-bg-opacity)); }

.bg-green-500 { --tw-bg-opacity: 1; background-color: rgba(25,195,125,var(-=
-tw-bg-opacity)); }

.bg-green-500\/10 { background-color: rgba(25, 195, 125, 0.1); }

.bg-green-600 { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(-=
-tw-bg-opacity)); }

.bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224,108,43,var(=
--tw-bg-opacity)); }

.bg-orange-500\/10 { background-color: rgba(224, 108, 43, 0.1); }

.bg-red-100 { --tw-bg-opacity: 1; background-color: rgba(254,226,226,var(--=
tw-bg-opacity)); }

.bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,202,202,var(--=
tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgba(239,68,68,var(--tw=
-bg-opacity)); }

.bg-red-500\/10 { background-color: rgba(239, 68, 68, 0.1); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgba(220,38,38,var(--tw=
-bg-opacity)); }

.bg-token-border-light { background-color: var(--border-light); }

.bg-token-surface-primary { background-color: var(--surface-primary); }

.bg-token-surface-secondary { background-color: var(--surface-secondary); }

.bg-token-surface-tertiary { background-color: var(--surface-tertiary); }

.bg-token-text-primary { background-color: var(--text-primary); }

.bg-token-text-tertiary { background-color: var(--text-tertiary); }

.bg-transparent { background-color: transparent; }

.bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw=
-bg-opacity)); }

.bg-white\/20 { background-color: rgba(255, 255, 255, 0.2); }

.bg-white\/95 { background-color: rgba(255, 255, 255, 0.95); }

.bg-yellow-100 { --tw-bg-opacity: 1; background-color: rgba(254,249,195,var=
(--tw-bg-opacity)); }

.bg-yellow-200 { --tw-bg-opacity: 1; background-color: rgba(250,230,158,var=
(--tw-bg-opacity)); }

.bg-yellow-300 { --tw-bg-opacity: 1; background-color: rgba(255,243,201,var=
(--tw-bg-opacity)); }

.bg-yellow-400 { --tw-bg-opacity: 1; background-color: rgba(255,198,87,var(=
--tw-bg-opacity)); }

.bg-opacity-10 { --tw-bg-opacity: 0.1; }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-grad=
ient-stops)); }

.bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw-gradi=
ent-stops)); }

.from-gray-100 { --tw-gradient-from: #ececf1 var(--tw-gradient-from-positio=
n); --tw-gradient-to: rgba(236,236,241,0) var(--tw-gradient-to-position); -=
-tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-gray-50 { --tw-gradient-from: #f7f7f8 var(--tw-gradient-from-position=
); --tw-gradient-to: hsla(240,7%,97%,0) var(--tw-gradient-to-position); --t=
w-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-gray-900\/0 { --tw-gradient-from: rgba(32,33,35,0) var(--tw-gradient-=
from-position); --tw-gradient-to: rgba(32,33,35,0) var(--tw-gradient-to-pos=
ition); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to);=
 }

.from-token-surface-primary { --tw-gradient-from: var(--surface-primary) va=
r(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--t=
w-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(-=
-tw-gradient-to); }

.from-transparent { --tw-gradient-from: transparent var(--tw-gradient-from-=
position); --tw-gradient-to: transparent var(--tw-gradient-to-position); --=
tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-60\%, .from-\[60\%\] { --tw-gradient-from-position: 60%; }

.to-gray-100 { --tw-gradient-to: #ececf1 var(--tw-gradient-to-position); }

.to-gray-900 { --tw-gradient-to: #202123 var(--tw-gradient-to-position); }

.to-transparent { --tw-gradient-to: transparent var(--tw-gradient-to-positi=
on); }

.bg-contain { background-size: contain; }

.bg-cover { background-size: cover; }

.bg-center { background-position: 50% center; }

.bg-no-repeat { background-repeat: no-repeat; }

.fill-yellow-500 { fill: rgb(234, 179, 8); }

.stroke-black { stroke: rgb(0, 0, 0); }

.stroke-brand-purple\/25 { stroke: rgba(171, 104, 255, 0.25); }

.stroke-gray-400 { stroke: rgb(172, 172, 190); }

.stroke-white { stroke: rgb(255, 255, 255); }

.stroke-0 { stroke-width: 0; }

.stroke-2 { stroke-width: 2; }

.stroke-\[2\.5\] { stroke-width: 2.5; }

.stroke-\[3\] { stroke-width: 3; }

.stroke-\[4\] { stroke-width: 4; }

.object-contain { object-fit: contain; }

.object-cover { object-fit: cover; }

.object-scale-down { object-fit: scale-down; }

.p-0 { padding: 0px; }

.p-0\.5 { padding: 0.125rem; }

.p-1 { padding: 0.25rem; }

.p-1\.5 { padding: 0.375rem; }

.p-2 { padding: 0.5rem; }

.p-3 { padding: 0.75rem; }

.p-3\.5 { padding: 0.875rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-7 { padding: 1.75rem; }

.p-8 { padding: 2rem; }

.p-\[5px\] { padding: 5px; }

.\!px-1 { padding-left: 0.25rem !important; padding-right: 0.25rem !importa=
nt; }

.\!px-1\.5 { padding-left: 0.375rem !important; padding-right: 0.375rem !im=
portant; }

.\!py-0 { padding-bottom: 0px !important; padding-top: 0px !important; }

.\!py-0\.5 { padding-bottom: 0.125rem !important; padding-top: 0.125rem !im=
portant; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-0\.5 { padding-left: 0.125rem; padding-right: 0.125rem; }

.px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }

.px-1\.5 { padding-left: 0.375rem; padding-right: 0.375rem; }

.px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }

.px-16 { padding-left: 4rem; padding-right: 4rem; }

.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.px-2\.5 { padding-left: 0.625rem; padding-right: 0.625rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-7 { padding-left: 1.75rem; padding-right: 1.75rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.py-0 { padding-bottom: 0px; padding-top: 0px; }

.py-0\.5 { padding-bottom: 0.125rem; padding-top: 0.125rem; }

.py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }

.py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }

.py-12 { padding-bottom: 3rem; padding-top: 3rem; }

.py-16 { padding-bottom: 4rem; padding-top: 4rem; }

.py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }

.py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }

.py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }

.py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }

.py-4 { padding-bottom: 1rem; padding-top: 1rem; }

.py-5 { padding-bottom: 1.25rem; padding-top: 1.25rem; }

.py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }

.py-8 { padding-bottom: 2rem; padding-top: 2rem; }

.py-\[10px\] { padding-bottom: 10px; padding-top: 10px; }

.\!pr-2 { padding-right: 0.5rem !important; }

.\!pr-3 { padding-right: 0.75rem !important; }

.\!pt-0 { padding-top: 0px !important; }

.pb-0 { padding-bottom: 0px; }

.pb-0\.5 { padding-bottom: 0.125rem; }

.pb-1 { padding-bottom: 0.25rem; }

.pb-1\.5 { padding-bottom: 0.375rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-2 { padding-bottom: 0.5rem; }

.pb-3 { padding-bottom: 0.75rem; }

.pb-4 { padding-bottom: 1rem; }

.pb-5 { padding-bottom: 1.25rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pb-64 { padding-bottom: 16rem; }

.pb-8 { padding-bottom: 2rem; }

.pl-1 { padding-left: 0.25rem; }

.pl-10 { padding-left: 2.5rem; }

.pl-12 { padding-left: 3rem; }

.pl-2 { padding-left: 0.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pl-4 { padding-left: 1rem; }

.pl-5 { padding-left: 1.25rem; }

.pl-6 { padding-left: 1.5rem; }

.pl-8 { padding-left: 2rem; }

.pl-9 { padding-left: 2.25rem; }

.pr-1 { padding-right: 0.25rem; }

.pr-1\.5 { padding-right: 0.375rem; }

.pr-10 { padding-right: 2.5rem; }

.pr-11 { padding-right: 2.75rem; }

.pr-12 { padding-right: 3rem; }

.pr-14 { padding-right: 3.5rem; }

.pr-16 { padding-right: 4rem; }

.pr-2 { padding-right: 0.5rem; }

.pr-3 { padding-right: 0.75rem; }

.pr-4 { padding-right: 1rem; }

.pr-5 { padding-right: 1.25rem; }

.pr-6 { padding-right: 1.5rem; }

.pr-7 { padding-right: 1.75rem; }

.pr-8 { padding-right: 2rem; }

.pr-9 { padding-right: 2.25rem; }

.pt-0 { padding-top: 0px; }

.pt-0\.5 { padding-top: 0.125rem; }

.pt-1 { padding-top: 0.25rem; }

.pt-2 { padding-top: 0.5rem; }

.pt-20 { padding-top: 5rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-3\.5 { padding-top: 0.875rem; }

.pt-4 { padding-top: 1rem; }

.pt-5 { padding-top: 1.25rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[1px\] { padding-top: 1px; }

.pt-\[67\%\] { padding-top: 67%; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.text-right { text-align: right; }

.align-top { vertical-align: top; }

.align-middle { vertical-align: middle; }

.font-mono { font-family: "S=C3=B6hne Mono", Monaco, "Andale Mono", "Ubuntu=
 Mono", monospace; }

.font-sans { font-family: S=C3=B6hne, ui-sans-serif, system-ui, -apple-syst=
em, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif, "Helvet=
ica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",=
 "Noto Color Emoji"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-\[0\.5rem\] { font-size: 0.5rem; }

.text-\[10px\] { font-size: 10px; }

.text-\[20px\] { font-size: 20px; }

.text-\[28px\] { font-size: 28px; }

.text-\[32px\] { font-size: 32px; }

.text-base { font-size: 1rem; line-height: 1.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-light { font-weight: 300; }

.font-medium { font-weight: 500; }

.font-normal { font-weight: 400; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.capitalize { text-transform: capitalize; }

.normal-case { text-transform: none; }

.italic { font-style: italic; }

.tabular-nums { --tw-numeric-spacing: tabular-nums; font-variant-numeric: v=
ar(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-n=
umeric-spacing) var(--tw-numeric-fraction); }

.leading-3 { line-height: 0.75rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-\[1\.2\] { line-height: 1.2; }

.leading-\[18px\] { line-height: 18px; }

.leading-none { line-height: 1; }

.leading-normal { line-height: 1.5; }

.leading-tight { line-height: 1.25; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.\!text-gray-500 { --tw-text-opacity: 1 !important; color: rgba(142,142,160=
,var(--tw-text-opacity)) !important; }

.text-\[\#756B5C\] { --tw-text-opacity: 1; color: rgba(117,107,92,var(--tw-=
text-opacity)); }

.text-\[\#FE7600\] { --tw-text-opacity: 1; color: rgba(254,118,0,var(--tw-t=
ext-opacity)); }

.text-\[\#cdcdcd\] { --tw-text-opacity: 1; color: rgba(205,205,205,var(--tw=
-text-opacity)); }

.text-\[\#fff\] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-te=
xt-opacity)); }

.text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-text-opacity=
)); }

.text-black\/20 { color: rgba(0, 0, 0, 0.2); }

.text-black\/50 { color: rgba(0, 0, 0, 0.5); }

.text-black\/60 { color: rgba(0, 0, 0, 0.6); }

.text-black\/70 { color: rgba(0, 0, 0, 0.7); }

.text-blue-400 { --tw-text-opacity: 1; color: rgba(58,136,255,var(--tw-text=
-opacity)); }

.text-blue-500 { --tw-text-opacity: 1; color: rgba(69,89,164,var(--tw-text-=
opacity)); }

.text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,var(--tw-text-=
opacity)); }

.text-brand-blue-800 { --tw-text-opacity: 1; color: rgba(0,102,222,var(--tw=
-text-opacity)); }

.text-brand-green { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-t=
ext-opacity)); }

.text-brand-purple { --tw-text-opacity: 1; color: rgba(171,104,255,var(--tw=
-text-opacity)); }

.text-gizmo-gray-950 { --tw-text-opacity: 1; color: rgba(15,15,15,var(--tw-=
text-opacity)); }

.text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,241,var(--tw-tex=
t-opacity)); }

.text-gray-200 { --tw-text-opacity: 1; color: rgba(217,217,227,var(--tw-tex=
t-opacity)); }

.text-gray-300 { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-tex=
t-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-tex=
t-opacity)); }

.text-gray-50 { --tw-text-opacity: 1; color: rgba(247,247,248,var(--tw-text=
-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-tex=
t-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-=
opacity)); }

.text-gray-600\/50 { color: rgba(86, 88, 105, 0.5); }

.text-gray-700 { --tw-text-opacity: 1; color: rgba(64,65,79,var(--tw-text-o=
pacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgba(52,53,65,var(--tw-text-o=
pacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgba(32,33,35,var(--tw-text-o=
pacity)); }

.text-gray-950 { --tw-text-opacity: 1; color: rgba(5,5,9,var(--tw-text-opac=
ity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-tex=
t-opacity)); }

.text-green-600 { --tw-text-opacity: 1; color: rgba(16,163,127,var(--tw-tex=
t-opacity)); }

.text-green-700 { --tw-text-opacity: 1; color: rgba(26,127,100,var(--tw-tex=
t-opacity)); }

.text-green-900 { --tw-text-opacity: 1; color: rgba(24,61,49,var(--tw-text-=
opacity)); }

.text-link-base { --tw-text-opacity: 1; color: rgba(41,100,170,var(--tw-tex=
t-opacity)); }

.text-orange-300 { --tw-text-opacity: 1; color: rgba(255,160,69,var(--tw-te=
xt-opacity)); }

.text-orange-400 { --tw-text-opacity: 1; color: rgba(255,128,82,var(--tw-te=
xt-opacity)); }

.text-orange-500 { --tw-text-opacity: 1; color: rgba(224,108,43,var(--tw-te=
xt-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var(--tw-text-o=
pacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgba(220,38,38,var(--tw-text-o=
pacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgba(185,28,28,var(--tw-text-o=
pacity)); }

.text-red-800 { --tw-text-opacity: 1; color: rgba(153,27,27,var(--tw-text-o=
pacity)); }

.text-token-text-primary { color: var(--text-primary); }

.text-token-text-secondary { color: var(--text-secondary); }

.text-token-text-tertiary { color: var(--text-tertiary); }

.text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-o=
pacity)); }

.text-white\/50 { color: rgba(255, 255, 255, 0.5); }

.text-white\/80 { color: rgba(255, 255, 255, 0.8); }

.text-yellow-500 { --tw-text-opacity: 1; color: rgba(234,179,8,var(--tw-tex=
t-opacity)); }

.text-yellow-700 { --tw-text-opacity: 1; color: rgba(161,98,7,var(--tw-text=
-opacity)); }

.text-yellow-800 { --tw-text-opacity: 1; color: rgba(133,77,14,var(--tw-tex=
t-opacity)); }

.text-yellow-900 { --tw-text-opacity: 1; color: rgba(146,114,1,var(--tw-tex=
t-opacity)); }

.underline { text-decoration-line: underline; }

.line-through { text-decoration-line: line-through; }

.\!no-underline { text-decoration-line: none !important; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-gray-500::-webkit-input-placeholder { --tw-placeholder-opacity=
: 1; color: rgba(142,142,160,var(--tw-placeholder-opacity)); }

.placeholder-gray-500::placeholder { --tw-placeholder-opacity: 1; color: rg=
ba(142,142,160,var(--tw-placeholder-opacity)); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-20 { opacity: 0.2; }

.opacity-25 { opacity: 0.25; }

.opacity-30 { opacity: 0.3; }

.opacity-50 { opacity: 0.5; }

.opacity-70 { opacity: 0.7; }

.opacity-75 { opacity: 0.75; }

.opacity-80 { opacity: 0.8; }

.\!shadow-none { --tw-shadow: 0 0 transparent !important; --tw-shadow-color=
ed: 0 0 transparent !important; box-shadow: var(--tw-ring-offset-shadow,0 0=
 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow) !impor=
tant; }

.shadow { --tw-shadow: 0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0=
,.1); --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1p=
x var(--tw-shadow-color); }

.shadow, .shadow-2xl { box-shadow: var(--tw-ring-offset-shadow,0 0 transpar=
ent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-2xl { --tw-shadow: 0 25px 50px -12px rgba(0,0,0,.25); --tw-shadow-c=
olored: 0 25px 50px -12px var(--tw-shadow-color); }

.shadow-\[0_0_24px_0_rgba\(0\,0\,0\,0\.05\)\,inset_0_0\.5px_0_0_rgba\(0\,0\=
,0\,0\.05\)\,0_2px_8px_0_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0 0 24px 0=
 rgba(0,0,0,.05),inset 0 0.5px 0 0 rgba(0,0,0,.05),0 2px 8px 0 rgba(0,0,0,.=
05); --tw-shadow-colored: 0 0 24px 0 var(--tw-shadow-color),inset 0 0.5px 0=
 0 var(--tw-shadow-color),0 2px 8px 0 var(--tw-shadow-color); box-shadow: v=
ar(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transp=
arent),var(--tw-shadow); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\] { --tw-shadow: 0 1px 2px rgba(=
0,0,0,.45); --tw-shadow-colored: 0 1px 2px var(--tw-shadow-color); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\], .shadow-\[0_1px_7px_0_rgba\(0=
\,0\,0\,0\.03\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent=
),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_1px_7px_0_rgba\(0\,0\,0\,0\.03\)\] { --tw-shadow: 0 1px 7px 0 r=
gba(0,0,0,.03); --tw-shadow-colored: 0 1px 7px 0 var(--tw-shadow-color); }

.shadow-\[0_1px_7px_0px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0 1px 7px 0=
px rgba(0,0,0,.06); --tw-shadow-colored: 0 1px 7px 0px var(--tw-shadow-colo=
r); }

.shadow-\[0_1px_7px_0px_rgba\(0\,0\,0\,0\.06\)\], .shadow-\[0_2px_12px_0px_=
rgba\(0\,0\,0\,0\.08\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 tran=
sparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 2px 12px=
 0px rgba(0,0,0,.08); --tw-shadow-colored: 0 2px 12px 0px var(--tw-shadow-c=
olor); }

.shadow-\[0_2px_24px_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0 2px 24px rgb=
a(0,0,0,.05); --tw-shadow-colored: 0 2px 24px var(--tw-shadow-color); }

.shadow-\[0_2px_24px_rgba\(0\,0\,0\,0\.05\)\], .shadow-\[0px_4px_14px_rgba\=
(0\,0\,0\,0\.06\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transpare=
nt),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0px 4px 14px=
 rgba(0,0,0,.06); --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);=
 }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { --tw-shadow: inset 0 0 =
0 1px rgba(0,0,0,.1); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-=
color); }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\], .shadow-lg { box-shadow:=
 var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 tran=
sparent),var(--tw-shadow); }

.shadow-lg { --tw-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rg=
ba(0,0,0,.1); --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),=
0 4px 6px -4px var(--tw-shadow-color); }

.shadow-md { --tw-shadow: 0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba=
(0,0,0,.1); --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),0 2p=
x 4px -2px var(--tw-shadow-color); }

.shadow-md, .shadow-none { box-shadow: var(--tw-ring-offset-shadow,0 0 tran=
sparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-none { --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 trans=
parent; }

.shadow-sm { --tw-shadow: 0 1px 2px 0 rgba(0,0,0,.05); --tw-shadow-colored:=
 0 1px 2px 0 var(--tw-shadow-color); }

.shadow-sm, .shadow-xl { box-shadow: var(--tw-ring-offset-shadow,0 0 transp=
arent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-xl { --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px r=
gba(0,0,0,.1); --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color)=
,0 8px 10px -6px var(--tw-shadow-color); }

.shadow-xs { --tw-shadow: 0 0 15px rgba(0,0,0,.1); --tw-shadow-colored: 0 0=
 15px var(--tw-shadow-color); }

.shadow-xs, .shadow-xxs { box-shadow: var(--tw-ring-offset-shadow,0 0 trans=
parent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-xxs { --tw-shadow: 0 1px 7px 0 rgba(0,0,0,.03); --tw-shadow-colored=
: 0 1px 7px 0 var(--tw-shadow-color); }

.outline-none { outline: transparent solid 2px; outline-offset: 2px; }

.outline { outline-style: solid; }

.outline-0 { outline-width: 0px; }

.outline-2 { outline-width: 2px; }

.outline-offset-2 { outline-offset: 2px; }

.ring-0 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); }

.ring-0, .ring-1 { box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-s=
hadow),var(--tw-shadow,0 0 transparent); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 }

.ring-2 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow,0 0 transparent); }

.ring-inset { --tw-ring-inset: inset; }

.ring-black { --tw-ring-opacity: 1; --tw-ring-color: rgba(0,0,0,var(--tw-ri=
ng-opacity)); }

.ring-black\/10 { --tw-ring-color: rgba(0,0,0,.1); }

.ring-transparent { --tw-ring-color: transparent; }

.ring-white { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,255,255,var(-=
-tw-ring-opacity)); }

.ring-opacity-5 { --tw-ring-opacity: 0.05; }

.ring-offset-4 { --tw-ring-offset-width: 4px; }

.ring-offset-black { --tw-ring-offset-color: #000; }

.blur { --tw-blur: blur(8px); }

.blur, .blur-xl { filter: var(--tw-blur) var(--tw-brightness) var(--tw-cont=
rast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-sa=
turate) var(--tw-sepia) var(--tw-drop-shadow); }

.blur-xl { --tw-blur: blur(24px); }

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.backdrop-blur-sm { --tw-backdrop-blur: blur(4px); }

.backdrop-blur-sm, .backdrop-blur-xl { backdrop-filter: var(--tw-backdrop-b=
lur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-bac=
kdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) va=
r(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepi=
a); }

.backdrop-blur-xl { --tw-backdrop-blur: blur(24px); }

.transition { transition-duration: 0.15s; transition-property: color, backg=
round-color, border-color, text-decoration-color, fill, stroke, opacity, bo=
x-shadow, transform, filter, backdrop-filter, -webkit-transform, -webkit-fi=
lter, -webkit-backdrop-filter; transition-timing-function: cubic-bezier(0.4=
, 0, 0.2, 1); }

.transition-\[flex-basis\] { transition-duration: 0.15s; transition-propert=
y: flex-basis; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[stroke-dashoffset\] { transition-duration: 0.15s; transition-=
property: stroke-dashoffset; transition-timing-function: cubic-bezier(0.4, =
0, 0.2, 1); }

.transition-\[transform\,opacity\] { transition-duration: 0.15s; transition=
-property: transform, opacity, -webkit-transform; transition-timing-functio=
n: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-all { transition-duration: 0.15s; transition-property: all; tra=
nsition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-colors { transition-duration: 0.15s; transition-property: color=
, background-color, border-color, text-decoration-color, fill, stroke; tran=
sition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-opacity { transition-duration: 0.15s; transition-property: opac=
ity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-transform { transition-duration: 0.15s; transition-property: tr=
ansform, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0=
, 0.2, 1); }

.transition-width { transition-duration: 0.15s; transition-property: width;=
 transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.delay-100 { transition-delay: 0.1s; }

.delay-\[300ms\] { transition-delay: 0.3s; }

.delay-\[500ms\] { transition-delay: 0.5s; }

.duration-100 { transition-duration: 0.1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.ease-linear { transition-timing-function: linear; }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

.will-change-\[opacity\,transform\] { will-change: opacity, transform; }

.will-change-transform { will-change: transform; }

.\[grid-area\:_title\] { grid-area: title; }

.\[grid-template-areas\:_\'title_action\'_\'description_action\'\] { grid-t=
emplate-areas: "title action" "description action"; }

body, html { height: 100%; }

.dark body, .dark html { --tw-bg-opacity: 1; background-color: rgba(52,53,6=
5,var(--tw-bg-opacity)); }

#__next, #root { height: 100%; }

.markdown { max-width: none; }

.markdown h1 { font-weight: 600; }

.markdown h1:first-child { margin-top: 0px; }

.markdown h2 { font-weight: 600; margin-bottom: 1rem; margin-top: 2rem; }

.markdown h2:first-child { margin-top: 0px; }

.markdown h3 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h3:first-child { margin-top: 0px; }

.markdown h4 { font-weight: 400; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h4:first-child { margin-top: 0px; }

.markdown h5 { font-weight: 600; }

.markdown h5:first-child { margin-top: 0px; }

.markdown blockquote { --tw-border-opacity: 1; border-color: rgba(142,142,1=
60,var(--tw-border-opacity)); border-left-width: 2px; line-height: 1.5rem; =
margin: 0px; padding-bottom: 0.5rem; padding-left: 1rem; padding-top: 0.5re=
m; }

.markdown blockquote > p { margin: 0px; }

.markdown blockquote > p::after, .markdown blockquote > p::before { display=
: none; }

.markdown ol { counter-reset: list-number 0; display: flex; flex-direction:=
 column; list-style-type: none; padding-left: 0px; }

.markdown ol:first-child > li { padding-left: 1.25rem; }

.markdown ol > li { counter-increment: list-number 1; display: block; margi=
n-bottom: 0px; margin-top: 0px; min-height: 28px; }

.markdown ol > li::before { --tw-translate-x: -100%; --tw-numeric-spacing: =
tabular-nums; --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-o=
pacity)); content: counters(list-number, ".") "."; font-variant-numeric: va=
r(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-nu=
meric-spacing) var(--tw-numeric-fraction); padding-right: 0.5rem; position:=
 absolute; transform: translate(var(--tw-translate-x),var(--tw-translate-y)=
) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) =
scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

:is(.dark .markdown ol > li)::before { --tw-text-opacity: 1; color: rgba(17=
2,172,190,var(--tw-text-opacity)); }

.markdown ul { display: flex; flex-direction: column; padding-left: 0px; }

.markdown ul:first-child > li { padding-left: 1.25rem; }

.markdown ul > li { display: block; margin: 0px; min-height: 28px; }

.markdown ul > li::before { --tw-translate-x: -100%; content: "=E2=80=A2"; =
font-size: 0.875rem; line-height: 1.25rem; padding-right: 0.5rem; position:=
 absolute; transform: translate(var(--tw-translate-x),var(--tw-translate-y)=
) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) =
scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.markdown ol li > p, .markdown ul li > p { margin: 0px; }

.markdown ol li > pre, .markdown ul li > pre { margin-bottom: 0.5rem; margi=
n-top: 0.25rem; }

.markdown ol ol, .markdown ol ul, .markdown ul ol, .markdown ul ul { margin=
-bottom: 0px; margin-left: 1rem; margin-top: 0px; }

.markdown table { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px; b=
order-collapse: separate; border-spacing: var(--tw-border-spacing-x) var(--=
tw-border-spacing-y); margin-bottom: 0.25rem; margin-top: 0.25rem; width: 1=
00%; }

.markdown th { background-color: rgba(236, 236, 241, 0.2); border-bottom-wi=
dth: 1px; border-left-width: 1px; border-top-width: 1px; padding: 0.25rem 0=
.75rem; }

.markdown th:first-child { border-top-left-radius: 0.375rem; }

.markdown th:last-child { border-right-width: 1px; border-top-right-radius:=
 0.375rem; }

.markdown td { border-bottom-width: 1px; border-left-width: 1px; padding: 0=
.25rem 0.75rem; }

.markdown td:last-child { border-right-width: 1px; }

.markdown tbody tr:last-child td:first-child { border-bottom-left-radius: 0=
.375rem; }

.markdown tbody tr:last-child td:last-child { border-bottom-right-radius: 0=
.375rem; }

.markdown a { --tw-text-opacity: 1; color: rgba(41,100,170,var(--tw-text-op=
acity)); font-weight: 400; text-decoration-line: none; }

.markdown a:hover { --tw-text-opacity: 1; color: rgba(98,154,221,var(--tw-t=
ext-opacity)); }

.gizmo .markdown > :not(pre), .gizmo .markdown > :not(pre) > :not(a) { colo=
r: var(--text-primary); }

.conversation-item-time::before { content: attr(data-time); }

button.scroll-convo { display: none; }

@-webkit-keyframes blink {=20
  100% { visibility: hidden; }
}

@keyframes blink {=20
  100% { visibility: hidden; }
}

.animate-flash { animation: 2s steps(60, start) 0s 1 normal none running fl=
ash; }

@-webkit-keyframes flash {=20
  0% { background-color: rgba(255, 255, 255, 0.4); }
}

@keyframes flash {=20
  0% { background-color: rgba(255, 255, 255, 0.4); }
}

.result-streaming > :not(ol):not(ul):not(pre):last-child::after, .result-st=
reaming > pre:last-child code::after { content: "=E2=97=8F"; font-family: "=
S=C3=B6hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, C=
antarell, "Noto Sans", sans-serif; line-height: normal; margin-left: 0.25re=
m; vertical-align: baseline; }

.result-thinking:empty:last-child::after { -webkit-font-smoothing: subpixel=
-antialiased; animation: 1.25s ease-in-out 0s infinite normal none running =
pulseSize; backface-visibility: hidden; background-color: var(--text-primar=
y); border-radius: 50%; box-sizing: border-box; content: " "; display: bloc=
k; height: 12px; position: absolute; top: 7px; transform: translateZ(0px); =
transform-origin: center center; width: 12px; will-change: transform; }

@supports (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child > ol:last-child > li:la=
st-child::after, .result-streaming > ol:last-child > li:last-child > ol:las=
t-child > li:last-child > ol:last-child > li:last-child::after, .result-str=
eaming > ol:last-child > li:last-child > ol:last-child > li:last-child > ul=
:last-child > li:last-child::after, .result-streaming > ol:last-child > li:=
last-child > ul:last-child > li:last-child::after, .result-streaming > ol:l=
ast-child > li:last-child > ul:last-child > li:last-child > ol:last-child >=
 li:last-child::after, .result-streaming > ol:last-child > li:last-child > =
ul:last-child > li:last-child > ul:last-child > li:last-child::after, .resu=
lt-streaming > ul:last-child > li:last-child > ol:last-child > li:last-chil=
d::after, .result-streaming > ul:last-child > li:last-child > ol:last-child=
 > li:last-child > ol:last-child > li:last-child::after, .result-streaming =
> ul:last-child > li:last-child > ol:last-child > li:last-child > ul:last-c=
hild > li:last-child::after, .result-streaming > ul:last-child > li:last-ch=
ild > ul:last-child > li:last-child::after, .result-streaming > ul:last-chi=
ld > li:last-child > ul:last-child > li:last-child > ol:last-child > li:las=
t-child::after, .result-streaming > ul:last-child > li:last-child > ul:last=
-child > li:last-child > ul:last-child > li:last-child::after, .result-stre=
aming > ul:last-child > li:last-child[*|\:not-has\(]::after { content: "=E2=
=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -apple-system, "Segoe=
 UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; line-height: norm=
al; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ul:last-child > li:last-child:not(:has(* > li))::afte=
r { content: "=E2=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -app=
le-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; =
line-height: normal; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child[*|\:not-has\(]::after {=
 content: "=E2=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -apple-=
system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; lin=
e-height: normal; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child:not(:has(* > li))::afte=
r { content: "=E2=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -app=
le-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; =
line-height: normal; margin-left: 0.25rem; vertical-align: baseline; }
}

@supports not (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child::after, .result-streami=
ng > ul:last-child > li:last-child::after { content: "=E2=97=8F"; font-fami=
ly: "S=C3=B6hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubun=
tu, Cantarell, "Noto Sans", sans-serif; line-height: normal; margin-left: 0=
.25rem; vertical-align: baseline; }
}

@-webkit-keyframes pulseSize {=20
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@keyframes pulseSize {=20
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@-webkit-keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@-webkit-keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

button[data-state=3D"closed"] .toggle-item-button-closed, button[data-state=
=3D"open"] .toggle-item-button-open { display: none; }

.toast-root { align-items: center; display: flex; flex-direction: column; h=
eight: 0px; transition: all 0.24s cubic-bezier(0, 0, 0.2, 1) 0s; }

.toast-root[data-state=3D"entered"], .toast-root[data-state=3D"entering"] {=
 animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1.175) 0s 1 normal both =
running toast-open; }

.toast-root[data-state=3D"exiting"] { animation: 0.12s cubic-bezier(0.4, 0,=
 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, r=
gba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all=
; }

.interact-bounce { transition-duration: 0.15s; transition-property: transfo=
rm, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2=
, 1); }

.interact-bounce:hover { --tw-scale-x: 1.05; --tw-scale-y: 1.05; }

.interact-bounce:active, .interact-bounce:hover { transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }

.interact-bounce:active { --tw-scale-x: .9; --tw-scale-y: .9; }

.title { font-feature-settings: normal; font-family: S=C3=B6hne, ui-sans-se=
rif, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto=
 Sans", sans-serif, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI=
 Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-variation-settings: no=
rmal; }

.font-circle { font-family: "S=C3=B6hne Circle", system-ui, -apple-system, =
"Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; }

.icon-xs { stroke-width: 1.5; height: 0.75rem; width: 0.75rem; }

.icon-sm { stroke-width: 2; height: 1rem; width: 1rem; }

.icon-md { stroke-width: 1.5; height: 18px; width: 18px; }

.icon-lg { stroke-width: 1.5; height: 1.5rem; width: 1.5rem; }

.icon-xl { stroke-width: 1.5; height: 1.75rem; width: 1.75rem; }

.icon-2xl { stroke-width: 1.5; height: 2rem; width: 2rem; }

.icon-workspace-avatar-preview { stroke-width: 1.5; height: 96px; width: 96=
px; }

.icon-cover { stroke-width: 1.5; height: 234px; width: 234px; }

.gizmo-shadow-stroke { position: relative; }

.gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px rgba(0,0,0,.1); =
--tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); border-radius:=
 9999px; inset: 0px; content: ""; position: absolute; }

.dark .gizmo-shadow-stroke::after, .gizmo-shadow-stroke::after { box-shadow=
: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 tra=
nsparent),var(--tw-shadow); }

.dark .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px hsla(0,0%,=
100%,.3); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); }

.dark .dark\:prose-invert { --tw-prose-body: var(--tw-prose-invert-body); -=
-tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: var(-=
-tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links); --t=
w-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--tw-pr=
ose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullets); -=
-tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-prose-=
invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-borde=
rs); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-code:=
 var(--tw-prose-invert-code); --tw-prose-pre-code: var(--tw-prose-invert-pr=
e-code); --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg); --tw-prose-th-bo=
rders: var(--tw-prose-invert-th-borders); --tw-prose-td-borders: var(--tw-p=
rose-invert-td-borders); }

.marker\:text-gray-500 ::marker { color: rgb(142, 142, 160); }

.marker\:text-gray-500::marker { color: rgb(142, 142, 160); }

.placeholder\:text-gray-300::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.placeholder\:text-gray-300::placeholder { --tw-text-opacity: 1; color: rgb=
a(197,197,210,var(--tw-text-opacity)); }

.placeholder\:text-gray-500::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.placeholder\:text-gray-500::placeholder { --tw-text-opacity: 1; color: rgb=
a(142,142,160,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::placeholder { --tw-text-opacity: 1; color: rgb=
a(86,88,105,var(--tw-text-opacity)); }

.before\:content-\[\'\"\'\]::before { --tw-content: '"'; content: var(--tw-=
content); }

.after\:block::after { content: var(--tw-content); display: block; }

.after\:h-2::after { content: var(--tw-content); height: 0.5rem; }

.after\:w-2::after { content: var(--tw-content); width: 0.5rem; }

.after\:rounded-\[50\%\]::after { border-radius: 50%; content: var(--tw-con=
tent); }

.after\:bg-token-text-primary::after { background-color: var(--text-primary=
); content: var(--tw-content); }

.after\:content-\[\'\"\'\]::after { --tw-content: '"'; content: var(--tw-co=
ntent); }

.after\:content-\[\'\'\]::after { --tw-content: ""; content: var(--tw-conte=
nt); }

.last\:mb-0:last-child { margin-bottom: 0px; }

.last\:mb-2:last-child { margin-bottom: 0.5rem; }

.last\:border-0:last-child { border-width: 0px; }

.last\:border-b:last-child { border-bottom-width: 1px; }

.last\:border-b-0:last-child { border-bottom-width: 0px; }

.last\:border-r-0:last-child { border-right-width: 0px; }

.last\:pb-0:last-child { padding-bottom: 0px; }

.last\:pr-0:last-child { padding-right: 0px; }

.last-of-type\:border-b-0:last-of-type { border-bottom-width: 0px; }

.checked\:border-blue-600:checked { --tw-border-opacity: 1; border-color: r=
gba(37,99,235,var(--tw-border-opacity)); }

.checked\:\!bg-black:checked { --tw-bg-opacity: 1 !important; background-co=
lor: rgba(0,0,0,var(--tw-bg-opacity)) !important; }

.checked\:bg-blue-600:checked { --tw-bg-opacity: 1; background-color: rgba(=
37,99,235,var(--tw-bg-opacity)); }

.empty\:hidden:empty { display: none; }

.focus-within\:z-10[focus-within] { z-index: 10; }

.focus-within\:z-10:focus-within { z-index: 10; }

.focus-within\:border-gray-800[focus-within] { --tw-border-opacity: 1; bord=
er-color: rgba(52,53,65,var(--tw-border-opacity)); }

.focus-within\:border-gray-800:focus-within { --tw-border-opacity: 1; borde=
r-color: rgba(52,53,65,var(--tw-border-opacity)); }

.focus-within\:border-green-500[focus-within] { --tw-border-opacity: 1; bor=
der-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-within\:border-green-500:focus-within { --tw-border-opacity: 1; bord=
er-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-within\:border-indigo-600[focus-within] { --tw-border-opacity: 1; bo=
rder-color: rgba(79,70,229,var(--tw-border-opacity)); }

.focus-within\:border-indigo-600:focus-within { --tw-border-opacity: 1; bor=
der-color: rgba(79,70,229,var(--tw-border-opacity)); }

.focus-within\:bg-token-surface-tertiary[focus-within] { background-color: =
var(--surface-tertiary); }

.focus-within\:bg-token-surface-tertiary:focus-within { background-color: v=
ar(--surface-tertiary); }

.focus-within\:shadow-none[focus-within] { --tw-shadow: 0 0 transparent; --=
tw-shadow-colored: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow=
,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:shadow-none:focus-within { --tw-shadow: 0 0 transparent; --t=
w-shadow-colored: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow,=
0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:outline-none[focus-within] { outline: transparent solid 2px;=
 outline-offset: 2px; }

.focus-within\:outline-none:focus-within { outline: transparent solid 2px; =
outline-offset: 2px; }

.focus-within\:ring-0[focus-within] { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width))=
 var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-0:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) =
var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-1[focus-within] { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-w=
idth)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-1:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-wi=
dth)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--=
tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-gray-800[focus-within] { --tw-ring-opacity: 1; --tw-rin=
g-color: rgba(52,53,65,var(--tw-ring-opacity)); }

.focus-within\:ring-gray-800:focus-within { --tw-ring-opacity: 1; --tw-ring=
-color: rgba(52,53,65,var(--tw-ring-opacity)); }

.focus-within\:ring-indigo-600[focus-within] { --tw-ring-opacity: 1; --tw-r=
ing-color: rgba(79,70,229,var(--tw-ring-opacity)); }

.focus-within\:ring-indigo-600:focus-within { --tw-ring-opacity: 1; --tw-ri=
ng-color: rgba(79,70,229,var(--tw-ring-opacity)); }

.focus-within\:ring-transparent[focus-within] { --tw-ring-color: transparen=
t; }

.focus-within\:ring-transparent:focus-within { --tw-ring-color: transparent=
; }

.hover\:cursor-pointer:hover { cursor: pointer; }

.hover\:border-\[var\(--avatar-color\)\]:hover { border-color: var(--avatar=
-color); }

.hover\:border-black\/10:hover { border-color: rgba(0, 0, 0, 0.1); }

.hover\:border-gray-100:hover { --tw-border-opacity: 1; border-color: rgba(=
236,236,241,var(--tw-border-opacity)); }

.hover\:border-gray-200:hover { --tw-border-opacity: 1; border-color: rgba(=
217,217,227,var(--tw-border-opacity)); }

.hover\:border-gray-300:hover { --tw-border-opacity: 1; border-color: rgba(=
197,197,210,var(--tw-border-opacity)); }

.hover\:\!bg-gray-50:hover { --tw-bg-opacity: 1 !important; background-colo=
r: rgba(247,247,248,var(--tw-bg-opacity)) !important; }

.hover\:bg-\[\#0000FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
0,0,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#0077FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
0,119,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#6E73FC\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
110,115,252,var(--tw-bg-opacity)); }

.hover\:bg-black:hover { --tw-bg-opacity: 1; background-color: rgba(0,0,0,v=
ar(--tw-bg-opacity)); }

.hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.1); }

.hover\:bg-black\/5:hover { background-color: rgba(0, 0, 0, 0.05); }

.hover\:bg-blue-700:hover { --tw-bg-opacity: 1; background-color: rgba(29,7=
8,216,var(--tw-bg-opacity)); }

.hover\:bg-brand-green\/30:hover { background-color: rgba(25, 195, 125, 0.3=
); }

.hover\:bg-brand-purple:hover { --tw-bg-opacity: 1; background-color: rgba(=
171,104,255,var(--tw-bg-opacity)); }

.hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgba(236,=
236,241,var(--tw-bg-opacity)); }

.hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-color: rgba(217,=
217,227,var(--tw-bg-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgba(247,2=
47,248,var(--tw-bg-opacity)); }

.hover\:bg-gray-500\/10:hover { background-color: rgba(141, 141, 160, 0.1);=
 }

.hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-color: rgba(64,6=
5,79,var(--tw-bg-opacity)); }

.hover\:bg-green-100:hover { --tw-bg-opacity: 1; background-color: rgba(210=
,244,211,var(--tw-bg-opacity)); }

.hover\:bg-token-surface-primary:hover { background-color: var(--surface-pr=
imary); }

.hover\:bg-token-surface-secondary:hover { background-color: var(--surface-=
secondary); }

.hover\:bg-token-surface-tertiary:hover { background-color: var(--surface-t=
ertiary); }

.hover\:bg-transparent:hover { background-color: transparent; }

.hover\:pr-14:hover { padding-right: 3.5rem; }

.hover\:pr-4:hover { padding-right: 1rem; }

.hover\:text-black:hover { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw=
-text-opacity)); }

.hover\:text-black\/50:hover { color: rgba(0, 0, 0, 0.5); }

.hover\:text-black\/70:hover { color: rgba(0, 0, 0, 0.7); }

.hover\:text-blue-600:hover { --tw-text-opacity: 1; color: rgba(37,99,235,v=
ar(--tw-text-opacity)); }

.hover\:text-gray-200:hover { --tw-text-opacity: 1; color: rgba(217,217,227=
,var(--tw-text-opacity)); }

.hover\:text-gray-400:hover { --tw-text-opacity: 1; color: rgba(172,172,190=
,var(--tw-text-opacity)); }

.hover\:text-gray-600:hover { --tw-text-opacity: 1; color: rgba(86,88,105,v=
ar(--tw-text-opacity)); }

.hover\:text-gray-700:hover { --tw-text-opacity: 1; color: rgba(64,65,79,va=
r(--tw-text-opacity)); }

.hover\:text-gray-800:hover { --tw-text-opacity: 1; color: rgba(52,53,65,va=
r(--tw-text-opacity)); }

.hover\:text-gray-900:hover { --tw-text-opacity: 1; color: rgba(32,33,35,va=
r(--tw-text-opacity)); }

.hover\:text-gray-950:hover { --tw-text-opacity: 1; color: rgba(5,5,9,var(-=
-tw-text-opacity)); }

.hover\:text-link-hover:hover { --tw-text-opacity: 1; color: rgba(98,154,22=
1,var(--tw-text-opacity)); }

.hover\:text-red-500:hover { --tw-text-opacity: 1; color: rgba(239,68,68,va=
r(--tw-text-opacity)); }

.hover\:text-token-text-primary:hover { color: var(--text-primary); }

.hover\:text-token-text-secondary:hover { color: var(--text-secondary); }

.hover\:underline:hover { text-decoration-line: underline; }

.hover\:\!opacity-100:hover { opacity: 1 !important; }

.hover\:opacity-100:hover { opacity: 1; }

.hover\:opacity-20:hover { opacity: 0.2; }

.hover\:opacity-70:hover { opacity: 0.7; }

.hover\:opacity-75:hover { opacity: 0.75; }

.hover\:opacity-80:hover { opacity: 0.8; }

.hover\:shadow-\[0_1px_7px_0px_rgba\(0\,0\,0\,0\.06\)\]:hover { --tw-shadow=
: 0 1px 7px 0px rgba(0,0,0,.06); --tw-shadow-colored: 0 1px 7px 0px var(--t=
w-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),v=
ar(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.hover\:brightness-90:hover { --tw-brightness: brightness(.9); filter: var(=
--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(=
--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--=
tw-drop-shadow); }

.hover\:delay-0:hover { transition-delay: 0s; }

.focus\:border-none:focus { border-style: none; }

.focus\:border-brand-green:focus, .focus\:border-green-500:focus { --tw-bor=
der-opacity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus\:border-green-600:focus { --tw-border-opacity: 1; border-color: rgba=
(16,163,127,var(--tw-border-opacity)); }

.focus\:border-orange-400:focus { --tw-border-opacity: 1; border-color: rgb=
a(255,128,82,var(--tw-border-opacity)); }

.focus\:border-red-500:focus { --tw-border-opacity: 1; border-color: rgba(2=
39,68,68,var(--tw-border-opacity)); }

.focus\:border-token-text-primary:focus { border-color: var(--text-primary)=
; }

.focus\:bg-gray-100:focus { --tw-bg-opacity: 1; background-color: rgba(236,=
236,241,var(--tw-bg-opacity)); }

.focus\:bg-gray-50:focus { --tw-bg-opacity: 1; background-color: rgba(247,2=
47,248,var(--tw-bg-opacity)); }

.focus\:shadow-none:focus { --tw-shadow: 0 0 transparent; --tw-shadow-color=
ed: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow,0 0 transparen=
t),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.focus\:ring-0:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-=
color); }

.focus\:ring-0:focus, .focus\:ring-1:focus { box-shadow: var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus\:ring-1:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); }

.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow,0 0 transparent); }

.focus\:ring-inset:focus { --tw-ring-inset: inset; }

.focus\:ring-blue-400:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(5=
8,136,255,var(--tw-ring-opacity)); }

.focus\:ring-gray-200:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(2=
17,217,227,var(--tw-ring-opacity)); }

.focus\:ring-green-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(=
25,195,125,var(--tw-ring-opacity)); }

.focus\:ring-green-600:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(=
16,163,127,var(--tw-ring-opacity)); }

.focus\:ring-token-text-primary:focus { --tw-ring-color: var(--text-primary=
); }

.focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,=
255,255,var(--tw-ring-opacity)); }

.focus-visible\:border-none.focus-visible { border-style: none; }

.focus-visible\:border-none:focus-visible { border-style: none; }

.focus-visible\:border-green-500.focus-visible { --tw-border-opacity: 1; bo=
rder-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-visible\:border-green-500:focus-visible { --tw-border-opacity: 1; bo=
rder-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-visible\:border-token-border-light.focus-visible { border-color: var=
(--border-light); }

.focus-visible\:border-token-border-light:focus-visible { border-color: var=
(--border-light); }

.focus-visible\:ring-0.focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow,0 0 transparent); }

.focus-visible\:ring-0:focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow,0 0 transparent); }

.active\:opacity-50:active { opacity: 0.5; }

.active\:opacity-90:active { opacity: 0.9; }

.enabled\:bg-brand-purple:enabled { --tw-bg-opacity: 1; background-color: r=
gba(171,104,255,var(--tw-bg-opacity)); }

.disabled\:bottom-0:disabled { bottom: 0px; }

.disabled\:bottom-0\.5:disabled { bottom: 0.125rem; }

.disabled\:cursor-auto:disabled { cursor: auto; }

.disabled\:text-gray-300:disabled { --tw-text-opacity: 1; color: rgba(197,1=
97,210,var(--tw-text-opacity)); }

.disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color: rgba(172,1=
72,190,var(--tw-text-opacity)); }

.disabled\:text-token-border-medium:disabled { color: var(--border-medium);=
 }

.disabled\:text-token-text-tertiary:disabled { color: var(--text-tertiary);=
 }

.disabled\:opacity-20:disabled { opacity: 0.2; }

.disabled\:opacity-40:disabled { opacity: 0.4; }

.disabled\:hover\:bg-gray-900:hover:disabled { --tw-bg-opacity: 1; backgrou=
nd-color: rgba(32,33,35,var(--tw-bg-opacity)); }

.group:hover .group-hover\:visible, .group\/dalle-image:hover .group-hover\=
/dalle-image\:visible { visibility: visible; }

.group\/tool-expander-closed:hover .group-hover\/tool-expander-closed\:bloc=
k, .group\/tool-expander-open:hover .group-hover\/tool-expander-open\:block=
 { display: block; }

.group:hover .group-hover\:flex { display: flex; }

.group:hover .group-hover\:hidden { display: none; }

.group:hover .group-hover\:border-t-\[\#0077FF\] { --tw-border-opacity: 1; =
border-top-color: rgba(0,119,255,var(--tw-border-opacity)); }

.group\/options:hover .group-hover\/options\:bg-transparent { background-co=
lor: transparent; }

.group\/toggle:hover .group-hover\/toggle\:bg-red-500 { --tw-bg-opacity: 1;=
 background-color: rgba(239,68,68,var(--tw-bg-opacity)); }

.group:hover .group-hover\:from-gray-100 { --tw-gradient-from: #ececf1 var(=
--tw-gradient-from-position); --tw-gradient-to: rgba(236,236,241,0) var(--t=
w-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(-=
-tw-gradient-to); }

.group:hover .group-hover\:from-token-surface-primary { --tw-gradient-from:=
 var(--surface-primary) var(--tw-gradient-from-position); --tw-gradient-to:=
 hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var=
(--tw-gradient-from),var(--tw-gradient-to); }

.group\/button:hover .group-hover\/button\:text-blue-500 { --tw-text-opacit=
y: 1; color: rgba(69,89,164,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-brand-green { --tw-text-opa=
city: 1; color: rgba(25,195,125,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-brand-purple { --tw-text-op=
acity: 1; color: rgba(171,104,255,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-orange-500 { --tw-text-opac=
ity: 1; color: rgba(224,108,43,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-red-500 { --tw-text-opacity=
: 1; color: rgba(239,68,68,var(--tw-text-opacity)); }

.group\/option:hover .group-hover\/option\:\!text-brand-green { --tw-text-o=
pacity: 1 !important; color: rgba(25,195,125,var(--tw-text-opacity)) !impor=
tant; }

.group\/option:hover .group-hover\/option\:\!text-brand-purple { --tw-text-=
opacity: 1 !important; color: rgba(171,104,255,var(--tw-text-opacity)) !imp=
ortant; }

.group\/option:hover .group-hover\/option\:text-gray-100 { --tw-text-opacit=
y: 1; color: rgba(236,236,241,var(--tw-text-opacity)); }

.group\/option:hover .group-hover\/option\:text-gray-800 { --tw-text-opacit=
y: 1; color: rgba(52,53,65,var(--tw-text-opacity)); }

.group\/options:hover .group-hover\/options\:text-gray-500 { --tw-text-opac=
ity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.group\/options:hover .group-hover\/options\:opacity-0 { opacity: 0; }

.group:hover .group-hover\:opacity-100 { opacity: 1; }

.group:hover .group-hover\:opacity-50, .group[data-disabled] .group-data-\[=
disabled\]\:opacity-50 { opacity: 0.5; }

.radix-disabled\:pointer-events-none[data-disabled] { pointer-events: none;=
 }

.radix-disabled\:cursor-auto[data-disabled] { cursor: auto; }

.radix-disabled\:bg-transparent[data-disabled] { background-color: transpar=
ent; }

.radix-disabled\:text-token-text-tertiary[data-disabled] { color: var(--tex=
t-tertiary); }

.radix-disabled\:opacity-50[data-disabled] { opacity: 0.5; }

.radix-highlighted\:bg-gray-50[data-highlighted] { --tw-bg-opacity: 1; back=
ground-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.radix-highlighted\:outline-none[data-highlighted] { outline: transparent s=
olid 2px; outline-offset: 2px; }

.radix-state-active\:bg-white[data-state=3D"active"] { --tw-bg-opacity: 1; =
background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.radix-state-active\:text-gray-600[data-state=3D"active"] { --tw-text-opaci=
ty: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.radix-state-checked\:translate-x-\[13px\][data-state=3D"checked"] { --tw-t=
ranslate-x: 13px; }

.radix-state-checked\:translate-x-\[13px\][data-state=3D"checked"], .radix-=
state-checked\:translate-x-\[19px\][data-state=3D"checked"] { transform: tr=
anslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate=
)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)=
) scaleY(var(--tw-scale-y)); }

.radix-state-checked\:translate-x-\[19px\][data-state=3D"checked"] { --tw-t=
ranslate-x: 19px; }

.radix-state-checked\:border[data-state=3D"checked"] { border-width: 1px; }

.radix-state-checked\:border-green-500[data-state=3D"checked"] { --tw-borde=
r-opacity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.radix-state-checked\:bg-green-500[data-state=3D"checked"] { --tw-bg-opacit=
y: 1; background-color: rgba(25,195,125,var(--tw-bg-opacity)); }

.radix-state-checked\:bg-green-600[data-state=3D"checked"] { --tw-bg-opacit=
y: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); }

.radix-state-checked\:bg-token-surface-primary[data-state=3D"checked"] { ba=
ckground-color: var(--surface-primary); }

.radix-state-checked\:text-token-text-primary[data-state=3D"checked"] { col=
or: var(--text-primary); }

.radix-state-checked\:text-white[data-state=3D"checked"] { --tw-text-opacit=
y: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.radix-state-checked\:shadow-\[0_0_2px_rgba\(0\,0\,0\,\.03\)\][data-state=
=3D"checked"] { --tw-shadow: 0 0 2px rgba(0,0,0,.03); --tw-shadow-colored: =
0 0 2px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0=
 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

@-webkit-keyframes alertShow {=20
  0% { opacity: 0; transform: translate(-50%, -48%) scale(0.96); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

@keyframes alertShow {=20
  0% { opacity: 0; transform: translate(-50%, -48%) scale(0.96); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

.radix-state-open\:animate-alertShow[data-state=3D"open"] { animation: 0.15=
s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running alertShow; }

@-webkit-keyframes contentShow {=20
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes contentShow {=20
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

.radix-state-open\:animate-contentShow[data-state=3D"open"] { animation: 0.=
15s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running contentShow; }

@-webkit-keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.radix-state-open\:animate-show[data-state=3D"open"] { animation: 0.1s cubi=
c-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running show; }

.radix-state-open\:bg-gray-50[data-state=3D"open"] { --tw-bg-opacity: 1; ba=
ckground-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.radix-state-open\:bg-token-border-light[data-state=3D"open"] { background-=
color: var(--border-light); }

.radix-state-open\:text-gray-600[data-state=3D"open"] { --tw-text-opacity: =
1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.radix-state-open\:text-token-text-secondary[data-state=3D"open"] { color: =
var(--text-secondary); }

.radix-side-bottom\:animate-slideDownAndFade[data-side=3D"bottom"] { animat=
ion: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownA=
ndFade; }

@-webkit-keyframes slideUpAndFade {=20
  0% { opacity: 0; transform: translateY(2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-bottom\:animate-slideUpAndFade[data-side=3D"bottom"] { animatio=
n: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideUpAndFa=
de; }

.radix-side-left\:animate-slideLeftAndFade[data-side=3D"left"] { animation:=
 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAndFa=
de; }

@-webkit-keyframes slideRightAndFade {=20
  0% { opacity: 0; transform: translateX(-2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-left\:animate-slideRightAndFade[data-side=3D"left"] { animation=
: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideRightAnd=
Fade; }

@keyframes slideLeftAndFade {=20
  0% { opacity: 0; transform: translateX(2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-right\:animate-slideLeftAndFade[data-side=3D"right"] { animatio=
n: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAnd=
Fade; }

@keyframes slideRightAndFade {=20
  0% { opacity: 0; transform: translateX(-2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-right\:animate-slideRightAndFade[data-side=3D"right"] { animati=
on: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideRightA=
ndFade; }

@keyframes slideDownAndFade {=20
  0% { opacity: 0; transform: translateY(-2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-top\:animate-slideDownAndFade[data-side=3D"top"] { animation: 0=
.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownAndFade=
; }

@keyframes slideUpAndFade {=20
  0% { opacity: 0; transform: translateY(2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-top\:animate-slideUpAndFade[data-side=3D"top"] { animation: 0.4=
s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideUpAndFade; }

.group-ui-open\:bg-gray-100.group[data-headlessui-state~=3D"open"] { --tw-b=
g-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.group:where([data-headlessui-state~=3D"open"]) .group-ui-open\:bg-gray-100=
 { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opaci=
ty)); }

.gizmo .gizmo\:absolute { position: absolute; }

.gizmo .gizmo\:-top-px { top: -1px; }

.gizmo .gizmo\:left-2 { left: 0.5rem; }

.gizmo .gizmo\:right-0 { right: 0px; }

.gizmo .gizmo\:top-0 { top: 0px; }

.gizmo .gizmo\:top-1 { top: 0.25rem; }

.gizmo .gizmo\:top-1\/2 { top: 50%; }

.gizmo .gizmo\:-ml-6 { margin-left: -1.5rem; }

.gizmo .gizmo\:mb-2 { margin-bottom: 0.5rem; }

.gizmo .gizmo\:ml-0 { margin-left: 0px; }

.gizmo .gizmo\:mt-0 { margin-top: 0px; }

.gizmo .gizmo\:mt-1 { margin-top: 0.25rem; }

.gizmo .gizmo\:mt-5 { margin-top: 1.25rem; }

.gizmo .gizmo\:flex { display: flex; }

.gizmo .gizmo\:hidden { display: none; }

.gizmo .gizmo\:h-10 { height: 2.5rem; }

.gizmo .gizmo\:min-h-0 { min-height: 0px; }

.gizmo .gizmo\:w-fit { width: fit-content; }

.gizmo .gizmo\:w-full { width: 100%; }

.gizmo .gizmo\:min-w-\[250px\] { min-width: 250px; }

.gizmo .gizmo\:-translate-y-1\/2 { --tw-translate-y: -50%; }

.gizmo .gizmo\:-translate-y-1\/2, .gizmo .gizmo\:transform { transform: tra=
nslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)=
) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))=
 scaleY(var(--tw-scale-y)); }

.gizmo .gizmo\:justify-start { justify-content: flex-start; }

.gizmo .gizmo\:gap-0 { gap: 0px; }

.gizmo .gizmo\:gap-1 { gap: 0.25rem; }

.gizmo .gizmo\:gap-1\.5 { gap: 0.375rem; }

.gizmo .gizmo\:gap-2 { gap: 0.5rem; }

.gizmo .gizmo\:gap-3 { gap: 0.75rem; }

.gizmo .gizmo\:overflow-hidden { overflow: hidden; }

.gizmo .gizmo\:rounded-2xl { border-radius: 1rem; }

.gizmo .gizmo\:rounded-full { border-radius: 9999px; }

.gizmo .gizmo\:rounded-lg { border-radius: 0.5rem; }

.gizmo .gizmo\:border { border-width: 1px; }

.gizmo .gizmo\:border-0 { border-width: 0px; }

.gizmo .gizmo\:border-t-0 { border-top-width: 0px; }

.gizmo .gizmo\:border-\[rgba\(0\,0\,0\,0\.1\)\] { border-color: rgba(0, 0, =
0, 0.1); }

.gizmo .gizmo\:border-black { --tw-border-opacity: 1; border-color: rgba(0,=
0,0,var(--tw-border-opacity)); }

.gizmo .gizmo\:border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }

.gizmo .gizmo\:border-gray-100 { --tw-border-opacity: 1; border-color: rgba=
(236,236,241,var(--tw-border-opacity)); }

.gizmo .gizmo\:border-token-border-heavy { border-color: var(--border-heavy=
); }

.gizmo .gizmo\:border-token-border-light { border-color: var(--border-light=
); }

.gizmo .gizmo\:bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,=
var(--tw-bg-opacity)); }

.gizmo .gizmo\:bg-transparent { background-color: transparent; }

.gizmo .gizmo\:bg-white { --tw-bg-opacity: 1; background-color: rgba(255,25=
5,255,var(--tw-bg-opacity)); }

.gizmo .gizmo\:from-white { --tw-gradient-from: #fff var(--tw-gradient-from=
-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-positi=
on); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.gizmo .gizmo\:bg-clip-padding { background-clip: padding-box; }

.gizmo .gizmo\:p-0 { padding: 0px; }

.gizmo .gizmo\:p-0\.5 { padding: 0.125rem; }

.gizmo .gizmo\:p-2 { padding: 0.5rem; }

.gizmo .gizmo\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.gizmo .gizmo\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.gizmo .gizmo\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }

.gizmo .gizmo\:pb-3 { padding-bottom: 0.75rem; }

.gizmo .gizmo\:pb-3\.5 { padding-bottom: 0.875rem; }

.gizmo .gizmo\:pb-9 { padding-bottom: 2.25rem; }

.gizmo .gizmo\:pl-0 { padding-left: 0px; }

.gizmo .gizmo\:pl-10 { padding-left: 2.5rem; }

.gizmo .gizmo\:pt-0 { padding-top: 0px; }

.gizmo .gizmo\:text-\[15px\] { font-size: 15px; }

.gizmo .gizmo\:font-normal { font-weight: 400; }

.gizmo .gizmo\:font-semibold { font-weight: 600; }

.gizmo .gizmo\:text-gizmo-gray-600 { --tw-text-opacity: 1; color: rgba(102,=
102,102,var(--tw-text-opacity)); }

.gizmo .gizmo\:text-token-text-tertiary { color: var(--text-tertiary); }

.gizmo .gizmo\:placeholder-black\/50::-webkit-input-placeholder { color: rg=
ba(0, 0, 0, 0.5); }

.gizmo .gizmo\:placeholder-black\/50::placeholder { color: rgba(0, 0, 0, 0.=
5); }

.gizmo .gizmo\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,0\.95\)\] { --tw-sha=
dow: 0 0 0 2px hsla(0,0%,100%,.95); --tw-shadow-colored: 0 0 0 2px var(--tw=
-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),va=
r(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.gizmo .gizmo\:hover\:border-black:hover { --tw-border-opacity: 1; border-c=
olor: rgba(0,0,0,var(--tw-border-opacity)); }

.gizmo .gizmo\:hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-co=
lor: rgba(236,236,241,var(--tw-bg-opacity)); }

.gizmo .gizmo\:hover\:bg-token-surface-primary:hover { background-color: va=
r(--surface-primary); }

.gizmo .gizmo\:hover\:text-token-text-secondary:hover { color: var(--text-s=
econdary); }

.gizmo .gizmo\:disabled\:bg-black:disabled, .gizmo .gizmo\:enabled\:bg-blac=
k:enabled { --tw-bg-opacity: 1; background-color: rgba(0,0,0,var(--tw-bg-op=
acity)); }

.gizmo .gizmo\:disabled\:opacity-10:disabled { opacity: 0.1; }

.gizmo .gizmo\:group-ui-open\:bg-token-surface-primary.group[data-headlessu=
i-state~=3D"open"] { background-color: var(--surface-primary); }

.gizmo .group:where([data-headlessui-state~=3D"open"]) .gizmo\:group-ui-ope=
n\:bg-token-surface-primary { background-color: var(--surface-primary); }

.dark .dark\:hidden { display: none; }

:is(.dark .dark\:divide-gray-900) > :not([hidden]) ~ :not([hidden]) { --tw-=
divide-opacity: 1; border-color: rgba(32,33,35,var(--tw-divide-opacity)); }

.dark .dark\:border { border-width: 1px; }

.dark .dark\:border-\[\#4E4F60\] { --tw-border-opacity: 1; border-color: rg=
ba(78,79,96,var(--tw-border-opacity)); }

.dark .dark\:border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.dark .dark\:border-gray-200 { --tw-border-opacity: 1; border-color: rgba(2=
17,217,227,var(--tw-border-opacity)); }

.dark .dark\:border-gray-300 { --tw-border-opacity: 1; border-color: rgba(1=
97,197,210,var(--tw-border-opacity)); }

.dark .dark\:border-gray-500 { --tw-border-opacity: 1; border-color: rgba(1=
42,142,160,var(--tw-border-opacity)); }

.dark .dark\:border-gray-600 { --tw-border-opacity: 1; border-color: rgba(8=
6,88,105,var(--tw-border-opacity)); }

.dark .dark\:border-gray-700 { --tw-border-opacity: 1; border-color: rgba(6=
4,65,79,var(--tw-border-opacity)); }

.dark .dark\:border-gray-800 { --tw-border-opacity: 1; border-color: rgba(5=
2,53,65,var(--tw-border-opacity)); }

.dark .dark\:border-gray-900 { --tw-border-opacity: 1; border-color: rgba(3=
2,33,35,var(--tw-border-opacity)); }

.dark .dark\:border-gray-900\/50 { border-color: rgba(32, 33, 35, 0.5); }

.dark .dark\:border-token-border-light { border-color: var(--border-light);=
 }

.dark .dark\:border-white { --tw-border-opacity: 1; border-color: rgba(255,=
255,255,var(--tw-border-opacity)); }

.dark .dark\:border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.dark .dark\:border-white\/30 { border-color: rgba(255, 255, 255, 0.3); }

.dark .dark\:bg-\[\#272832\] { --tw-bg-opacity: 1; background-color: rgba(3=
9,40,50,var(--tw-bg-opacity)); }

.dark .dark\:bg-\[\#444654\] { --tw-bg-opacity: 1; background-color: rgba(6=
8,70,84,var(--tw-bg-opacity)); }

.dark .dark\:bg-\[rgba\(255\,255\,255\,0\.15\)\] { background-color: rgba(2=
55, 255, 255, 0.15); }

.dark .dark\:bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,va=
r(--tw-bg-opacity)); }

.dark .dark\:bg-black\/25 { background-color: rgba(0, 0, 0, 0.25); }

.dark .dark\:bg-black\/80 { background-color: rgba(0, 0, 0, 0.8); }

.dark .dark\:bg-brand-green\/50 { background-color: rgba(25, 195, 125, 0.5)=
; }

.dark .dark\:bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,2=
36,241,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(247,24=
7,248,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(142,1=
42,160,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(86,88=
,105,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-600\/70 { background-color: rgba(86, 88, 105, 0.7); }

.dark .dark\:bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(64,65=
,79,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-800 { --tw-bg-opacity: 1; background-color: rgba(52,53=
,65,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-800\/30 { background-color: rgba(52, 53, 65, 0.3); }

.dark .dark\:bg-gray-800\/90 { background-color: rgba(52, 53, 65, 0.9); }

.dark .dark\:bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(32,33=
,35,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-950 { --tw-bg-opacity: 1; background-color: rgba(5,5,9=
,var(--tw-bg-opacity)); }

.dark .dark\:bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224=
,108,43,var(--tw-bg-opacity)); }

.dark .dark\:bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,20=
2,202,var(--tw-bg-opacity)); }

.dark .dark\:bg-token-surface-secondary { background-color: var(--surface-s=
econdary); }

.dark .dark\:bg-token-surface-tertiary { background-color: var(--surface-te=
rtiary); }

.dark .dark\:bg-transparent { background-color: transparent; }

.dark .dark\:bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,=
255,var(--tw-bg-opacity)); }

.dark .dark\:bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:bg-white\/5 { background-color: rgba(255, 255, 255, 0.05); }

.dark .dark\:from-black { --tw-gradient-from: #000 var(--tw-gradient-from-p=
osition); --tw-gradient-to: transparent var(--tw-gradient-to-position); --t=
w-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.dark .dark\:from-gray-700 { --tw-gradient-from: #40414f var(--tw-gradient-=
from-position); --tw-gradient-to: rgba(64,65,79,0) var(--tw-gradient-to-pos=
ition); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to);=
 }

.dark .dark\:from-gray-800 { --tw-gradient-from: #343541 var(--tw-gradient-=
from-position); --tw-gradient-to: rgba(52,53,65,0) var(--tw-gradient-to-pos=
ition); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to);=
 }

.dark .dark\:from-gray-900 { --tw-gradient-from: #202123 var(--tw-gradient-=
from-position); --tw-gradient-to: rgba(32,33,35,0) var(--tw-gradient-to-pos=
ition); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to);=
 }

.dark .dark\:stroke-brand-purple\/50 { stroke: rgba(171, 104, 255, 0.5); }

.dark .dark\:text-\[\#D292FF\] { --tw-text-opacity: 1; color: rgba(210,146,=
255,var(--tw-text-opacity)); }

.dark .dark\:text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-=
text-opacity)); }

.dark .dark\:text-blue-200 { --tw-text-opacity: 1; color: rgba(191,219,254,=
var(--tw-text-opacity)); }

.dark .dark\:text-blue-400 { --tw-text-opacity: 1; color: rgba(58,136,255,v=
ar(--tw-text-opacity)); }

.dark .dark\:text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,va=
r(--tw-text-opacity)); }

.dark .dark\:text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,241,=
var(--tw-text-opacity)); }

.dark .dark\:text-gray-200 { --tw-text-opacity: 1; color: rgba(217,217,227,=
var(--tw-text-opacity)); }

.dark .dark\:text-gray-300 { --tw-text-opacity: 1; color: rgba(197,197,210,=
var(--tw-text-opacity)); }

.dark .dark\:text-gray-400 { --tw-text-opacity: 1; color: rgba(172,172,190,=
var(--tw-text-opacity)); }

.dark .dark\:text-gray-500 { --tw-text-opacity: 1; color: rgba(142,142,160,=
var(--tw-text-opacity)); }

.dark .dark\:text-gray-600 { --tw-text-opacity: 1; color: rgba(86,88,105,va=
r(--tw-text-opacity)); }

.dark .dark\:text-gray-700 { --tw-text-opacity: 1; color: rgba(64,65,79,var=
(--tw-text-opacity)); }

.dark .dark\:text-gray-900 { --tw-text-opacity: 1; color: rgba(32,33,35,var=
(--tw-text-opacity)); }

.dark .dark\:text-green-100 { --tw-text-opacity: 1; color: rgba(210,244,211=
,var(--tw-text-opacity)); }

.dark .dark\:text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var=
(--tw-text-opacity)); }

.dark .dark\:text-red-800 { --tw-text-opacity: 1; color: rgba(153,27,27,var=
(--tw-text-opacity)); }

.dark .dark\:text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var=
(--tw-text-opacity)); }

.dark .dark\:text-white\/30 { color: rgba(255, 255, 255, 0.3); }

.dark .dark\:text-white\/60 { color: rgba(255, 255, 255, 0.6); }

.dark .dark\:text-white\/70 { color: rgba(255, 255, 255, 0.7); }

.dark .dark\:text-white\/90 { color: rgba(255, 255, 255, 0.9); }

.dark .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\] { --tw-=
shadow: inset 0 0 0 1px hsla(0,0%,100%,.1); --tw-shadow-colored: inset 0 0 =
0 1px var(--tw-shadow-color); }

.dark .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\], .dark =
.dark\:shadow-xs { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent)=
,var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dark .dark\:shadow-xs { --tw-shadow: 0 0 15px rgba(0,0,0,.1); --tw-shadow-=
colored: 0 0 15px var(--tw-shadow-color); }

.dark .dark\:ring-white\/20 { --tw-ring-color: hsla(0,0%,100%,.2); }

:is(.dark .placeholder\:dark\:text-white)::-webkit-input-placeholder { --tw=
-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

:is(.dark .placeholder\:dark\:text-white)::placeholder { --tw-text-opacity:=
 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dark .dark\:last\:border-0:last-child { border-width: 0px; }

.dark .dark\:focus-within\:border-white[focus-within] { --tw-border-opacity=
: 1; border-color: rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:focus-within\:border-white:focus-within { --tw-border-opacity:=
 1; border-color: rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:focus-within\:ring-white[focus-within] { --tw-ring-opacity: 1;=
 --tw-ring-color: rgba(255,255,255,var(--tw-ring-opacity)); }

.dark .dark\:focus-within\:ring-white:focus-within { --tw-ring-opacity: 1; =
--tw-ring-color: rgba(255,255,255,var(--tw-ring-opacity)); }

.dark .dark\:hover\:border-gray-600:hover { --tw-border-opacity: 1; border-=
color: rgba(86,88,105,var(--tw-border-opacity)); }

.dark .dark\:hover\:border-gray-800:hover { --tw-border-opacity: 1; border-=
color: rgba(52,53,65,var(--tw-border-opacity)); }

.dark .dark\:hover\:border-white\/10:hover { border-color: rgba(255, 255, 2=
55, 0.1); }

:is(.dark .hover\:dark\:border-gray-700):hover { --tw-border-opacity: 1; bo=
rder-color: rgba(64,65,79,var(--tw-border-opacity)); }

.dark .dark\:hover\:\!bg-gray-700:hover { --tw-bg-opacity: 1 !important; ba=
ckground-color: rgba(64,65,79,var(--tw-bg-opacity)) !important; }

.dark .dark\:hover\:bg-\[\#2A2B32\]:hover { --tw-bg-opacity: 1; background-=
color: rgba(42,43,50,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-\[\#2E2F33\]:hover { --tw-bg-opacity: 1; background-=
color: rgba(46,47,51,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-\[\#494A54\]:hover { --tw-bg-opacity: 1; background-=
color: rgba(73,74,84,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.=
1); }

.dark .dark\:hover\:bg-brand-green\/40:hover { background-color: rgba(25, 1=
95, 125, 0.4); }

.dark .dark\:hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-colo=
r: rgba(217,217,227,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-500\/10:hover { background-color: rgba(141, 141=
, 160, 0.1); }

.dark .dark\:hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-colo=
r: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-800:hover { --tw-bg-opacity: 1; background-colo=
r: rgba(52,53,65,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-900:hover { --tw-bg-opacity: 1; background-colo=
r: rgba(32,33,35,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-token-surface-primary:hover { background-color: var(=
--surface-primary); }

.dark .dark\:hover\:bg-transparent:hover { background-color: transparent; }

.dark .dark\:hover\:bg-white\/20:hover { background-color: rgba(255, 255, 2=
55, 0.2); }

.dark .dark\:hover\:bg-white\/5:hover { background-color: rgba(255, 255, 25=
5, 0.05); }

:is(.dark .hover\:dark\:bg-gray-700):hover { --tw-bg-opacity: 1; background=
-color: rgba(64,65,79,var(--tw-bg-opacity)); }

:is(.dark .hover\:dark\:bg-white\/10):hover { background-color: rgba(255, 2=
55, 255, 0.1); }

.dark .dark\:hover\:text-blue-600:hover { --tw-text-opacity: 1; color: rgba=
(37,99,235,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-gray-200:hover { --tw-text-opacity: 1; color: rgba=
(217,217,227,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-gray-400:hover { --tw-text-opacity: 1; color: rgba=
(172,172,190,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-white:hover { --tw-text-opacity: 1; color: rgba(25=
5,255,255,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-white\/50:hover { color: rgba(255, 255, 255, 0.5);=
 }

:is(.dark .hover\:dark\:text-gray-100):hover { --tw-text-opacity: 1; color:=
 rgba(236,236,241,var(--tw-text-opacity)); }

:is(.dark .hover\:dark\:text-gray-300):hover { --tw-text-opacity: 1; color:=
 rgba(197,197,210,var(--tw-text-opacity)); }

.dark .dark\:focus\:border-white:focus { --tw-border-opacity: 1; border-col=
or: rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:focus\:bg-gray-700:focus { --tw-bg-opacity: 1; background-colo=
r: rgba(64,65,79,var(--tw-bg-opacity)); }

:is(.dark .focus\:dark\:bg-gray-700):focus { --tw-bg-opacity: 1; background=
-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:focus\:ring-gray-600:focus { --tw-ring-opacity: 1; --tw-ring-c=
olor: rgba(86,88,105,var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-colo=
r: rgba(255,255,255,var(--tw-ring-opacity)); }

.dark .dark\:focus-visible\:border-green-500.focus-visible { --tw-border-op=
acity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.dark .dark\:focus-visible\:border-green-500:focus-visible { --tw-border-op=
acity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.dark .dark\:disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color=
: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .dark\:disabled\:hover\:bg-transparent:hover:disabled { background-co=
lor: transparent; }

.dark .dark\:disabled\:hover\:bg-white:hover:disabled { --tw-bg-opacity: 1;=
 background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

:is(.dark .disabled\:dark\:hover\:text-gray-400:hover):disabled { --tw-text=
-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .group:hover .dark\:group-hover\:from-\[\#2A2B32\] { --tw-gradient-fr=
om: #2a2b32 var(--tw-gradient-from-position); --tw-gradient-to: rgba(42,43,=
50,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradien=
t-from),var(--tw-gradient-to); }

.dark .group\/option:hover .dark\:group-hover\/option\:text-gray-100 { --tw=
-text-opacity: 1; color: rgba(236,236,241,var(--tw-text-opacity)); }

.dark .dark\:radix-disabled\:bg-transparent[data-disabled] { background-col=
or: transparent; }

.dark .dark\:radix-disabled\:text-gray-600[data-disabled] { --tw-text-opaci=
ty: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.dark .dark\:radix-highlighted\:bg-\[\#2E2F33\][data-highlighted] { --tw-bg=
-opacity: 1; background-color: rgba(46,47,51,var(--tw-bg-opacity)); }

.dark .dark\:radix-highlighted\:bg-gray-700[data-highlighted] { --tw-bg-opa=
city: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:radix-highlighted\:hover\:bg-\[\#2E2F33\][data-highlighted]:ho=
ver { --tw-bg-opacity: 1; background-color: rgba(46,47,51,var(--tw-bg-opaci=
ty)); }

.dark .dark\:radix-state-active\:bg-token-surface-tertiary[data-state=3D"ac=
tive"] { background-color: var(--surface-tertiary); }

.dark .dark\:radix-state-checked\:bg-green-600[data-state=3D"checked"] { --=
tw-bg-opacity: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); =
}

.dark .radix-state-checked\:dark\:bg-token-surface-secondary[data-state=3D"=
checked"] { background-color: var(--surface-secondary); }

.dark .dark\:radix-state-open\:bg-black\/20[data-state=3D"open"] { backgrou=
nd-color: rgba(0, 0, 0, 0.2); }

.dark .dark\:radix-state-open\:bg-gray-700[data-state=3D"open"] { --tw-bg-o=
pacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:radix-state-open\:text-gray-400[data-state=3D"open"] { --tw-te=
xt-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .dark\:group-ui-open\:bg-gray-800.group[data-headlessui-state~=3D"ope=
n"] { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opaci=
ty)); }

.dark .group:where([data-headlessui-state~=3D"open"]) .dark\:group-ui-open\=
:bg-gray-800 { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw=
-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:border-0) { border-width: 0px; }

.gizmo :is(.dark .gizmo\:dark\:border-gray-800) { --tw-border-opacity: 1; b=
order-color: rgba(52,53,65,var(--tw-border-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:border-token-border-heavy) { border-color: v=
ar(--border-heavy); }

.gizmo :is(.dark .gizmo\:dark\:border-white) { --tw-border-opacity: 1; bord=
er-color: rgba(255,255,255,var(--tw-border-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:border-white\/20) { border-color: rgba(255, =
255, 255, 0.2); }

.gizmo :is(.dark .gizmo\:dark\:bg-black) { --tw-bg-opacity: 1; background-c=
olor: rgba(0,0,0,var(--tw-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:bg-gray-800) { --tw-bg-opacity: 1; backgroun=
d-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:bg-gray-900) { --tw-bg-opacity: 1; backgroun=
d-color: rgba(32,33,35,var(--tw-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:bg-token-surface-primary) { background-color=
: var(--surface-primary); }

.gizmo :is(.dark .gizmo\:dark\:bg-transparent) { background-color: transpar=
ent; }

.gizmo :is(.dark .gizmo\:dark\:bg-white) { --tw-bg-opacity: 1; background-c=
olor: rgba(255,255,255,var(--tw-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:placeholder-white\/50)::-webkit-input-placeh=
older { color: rgba(255, 255, 255, 0.5); }

.gizmo :is(.dark .gizmo\:dark\:placeholder-white\/50)::placeholder { color:=
 rgba(255, 255, 255, 0.5); }

.gizmo :is(.dark .gizmo\:dark\:shadow-\[0_0_0_2px_rgba\(52\,53\,65\,0\.95\)=
\]) { --tw-shadow: 0 0 0 2px rgba(52,53,65,.95); --tw-shadow-colored: 0 0 0=
 2px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 tr=
ansparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.gizmo :is(.dark .gizmo\:dark\:hover\:border-white:hover) { --tw-border-opa=
city: 1; border-color: rgba(255,255,255,var(--tw-border-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:hover\:bg-token-surface-primary:hover) { bac=
kground-color: var(--surface-primary); }

.gizmo :is(.dark .gizmo\:dark\:disabled\:bg-white:disabled) { --tw-bg-opaci=
ty: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:group-ui-open\:bg-token-surface-primary.grou=
p[data-headlessui-state~=3D"open"]) { background-color: var(--surface-prima=
ry); }

.gizmo :is(.dark .group:where([data-headlessui-state~=3D"open"]) .gizmo\:da=
rk\:group-ui-open\:bg-token-surface-primary) { background-color: var(--surf=
ace-primary); }

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:mb-0\.5 { margin-bottom: 0.125rem; }
  .sm\:mb-16 { margin-bottom: 4rem; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-4 { margin-bottom: 1rem; }
  .sm\:ml-0 { margin-left: 0px; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-16 { margin-top: 4rem; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:mt-\[20vh\] { margin-top: 20vh; }
  .sm\:mt-\[6vh\] { margin-top: 6vh; }
  .sm\:block { display: block; }
  .sm\:inline-block { display: inline-block; }
  .sm\:flex { display: flex; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-5 { height: 1.25rem; }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-5 { width: 1.25rem; }
  .sm\:w-\[312px\] { width: 312px; }
  .sm\:w-\[calc\(\(100\%-12px\)\/2\)\] { width: calc(50% - 6px); }
  .sm\:w-auto { width: auto; }
  .sm\:min-w-\[148px\] { min-width: 148px; }
  .sm\:min-w-\[312px\] { min-width: 312px; }
  .sm\:min-w-\[420px\] { min-width: 420px; }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-lg { max-width: 32rem; }
  .sm\:max-w-md { max-width: 28rem; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  .sm\:p-0 { padding: 0px; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-4 { padding: 1rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pr-2 { padding-right: 0.5rem; }
  .sm\:pr-6 { padding-right: 1.5rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
}

@media (min-width: 768px) {
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:relative { position: relative; }
  .md\:-right-2 { right: -0.5rem; }
  .md\:bottom-3 { bottom: 0.75rem; }
  .md\:bottom-3\.5 { bottom: 0.875rem; }
  .md\:bottom-\[180px\] { bottom: 180px; }
  .md\:bottom-auto { bottom: auto; }
  .md\:left-4 { left: 1rem; }
  .md\:left-auto { left: auto; }
  .md\:right-3 { right: 0.75rem; }
  .md\:right-auto { right: auto; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-12 { margin-left: 3rem; margin-right: 3rem; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:-ml-\[8px\] { margin-left: -8px; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-12 { margin-bottom: 3rem; }
  .md\:mb-16 { margin-bottom: 4rem; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:mb-auto { margin-bottom: auto; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:inline-block { display: inline-block; }
  .md\:flex { display: flex; }
  .md\:inline-flex { display: inline-flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:h-24 { height: 6rem; }
  .md\:h-32 { height: 8rem; }
  .md\:h-48 { height: 12rem; }
  .md\:h-full { height: 100%; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:min-h-\[330px\] { min-height: 330px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-104 { width: 26rem; }
  .md\:w-24 { width: 6rem; }
  .md\:w-\[100\%\] { width: 100%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[672px\] { width: 672px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[672px\] { min-width: 672px; }
  .md\:max-w-2xl { max-width: 42rem; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-lg { max-width: 32rem; }
  .md\:max-w-none { max-width: none; }
  .md\:max-w-xl { max-width: 36rem; }
  .md\:max-w-xs { max-width: 20rem; }
  .md\:basis-0 { flex-basis: 0px; }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-=
template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-col { flex-direction: column; }
  .md\:items-start { align-items: flex-start; }
  .md\:items-end { align-items: flex-end; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-6 { gap: 1.5rem; }
  .md\:gap-x-12 { column-gap: 3rem; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border { border-width: 1px; }
  .md\:border-l { border-left-width: 1px; }
  .md\:border-r { border-right-width: 1px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236=
,241,var(--tw-border-opacity)); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-vert-light-gradient { background-image: linear-gradient(rgba(255,=
 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-2 { padding: 0.5rem; }
  .md\:p-6 { padding: 1.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-5 { padding-bottom: 1.25rem; padding-top: 1.25rem; }
  .md\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-0 { padding-bottom: 0px; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pb-\[8vh\] { padding-bottom: 8vh; }
  .md\:pl-0 { padding-left: 0px; }
  .md\:pl-2 { padding-left: 0.5rem; }
  .md\:pl-4 { padding-left: 1rem; }
  .md\:pl-6 { padding-left: 1.5rem; }
  .md\:pl-\[46px\] { padding-left: 46px; }
  .md\:pr-1 { padding-right: 0.25rem; }
  .md\:pr-1\.5 { padding-right: 0.375rem; }
  .md\:pr-12 { padding-right: 3rem; }
  .md\:pr-4 { padding-right: 1rem; }
  .md\:pr-8 { padding-right: 2rem; }
  .md\:pt-0 { padding-top: 0px; }
  .md\:pt-4 { padding-top: 1rem; }
  .md\:text-justify { text-align: justify; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:opacity-0 { opacity: 0; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  .md\:disabled\:bottom-0:disabled { bottom: 0px; }
  .group.final-completion .md\:group-\[\.final-completion\]\:visible, .grou=
p:hover .md\:group-hover\:visible { visibility: visible; }
  .md\:radix-state-active\:bg-token-surface-tertiary[data-state=3D"active"]=
 { background-color: var(--surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
  .gizmo .gizmo\:md\:bottom-3 { bottom: 0.75rem; }
  .gizmo .gizmo\:md\:bottom-\[143px\] { bottom: 143px; }
  .gizmo .gizmo\:md\:left-4 { left: 1rem; }
  .gizmo .gizmo\:md\:max-w-3xl { max-width: 48rem; }
  .gizmo .gizmo\:md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; =
}
  .gizmo .gizmo\:md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; =
}
  .gizmo .gizmo\:md\:py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875=
rem; }
  .gizmo .gizmo\:md\:pl-0 { padding-left: 0px; }
  .gizmo .gizmo\:md\:pl-\[55px\] { padding-left: 55px; }
  .dark .md\:dark\:border-gray-700 { --tw-border-opacity: 1; border-color: =
rgba(64,65,79,var(--tw-border-opacity)); }
  .dark .md\:dark\:border-transparent { border-color: transparent; }
  .dark .dark\:md\:bg-vert-dark-gradient { background-image: linear-gradien=
t(rgba(53, 55, 64, 0), rgb(53, 55, 64) 58.85%); }
}

@media (min-width: 1024px) {
  .lg\:absolute { position: absolute; }
  .lg\:relative { position: relative; }
  .lg\:-left-3 { left: -0.75rem; }
  .lg\:-right-3 { right: -0.75rem; }
  .lg\:bottom-\[120px\] { bottom: 120px; }
  .lg\:left-auto { left: auto; }
  .lg\:right-0 { right: 0px; }
  .lg\:top-0 { top: 0px; }
  .lg\:top-1\/2 { top: 50%; }
  .lg\:-mx-8 { margin-left: -2rem; margin-right: -2rem; }
  .lg\:mx-auto { margin-left: auto; margin-right: auto; }
  .lg\:-ml-2 { margin-left: -0.5rem; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:mt-0 { margin-top: 0px; }
  .lg\:block { display: block; }
  .lg\:flex { display: flex; }
  .lg\:hidden { display: none; }
  .lg\:h-36 { height: 9rem; }
  .lg\:w-1\/3 { width: 33.3333%; }
  .lg\:w-3\/5 { width: 60%; }
  .lg\:w-\[300px\] { width: 300px; }
  .lg\:w-\[896px\] { width: 896px; }
  .lg\:w-\[calc\(\(100\%-24px\)\/3\)\] { width: calc(33.3333% - 8px); }
  .lg\:w-\[calc\(100\%-115px\)\] { width: calc(100% - 115px); }
  .lg\:w-auto { width: auto; }
  .lg\:w-full { width: 100%; }
  .lg\:min-w-\[896px\] { min-width: 896px; }
  .lg\:max-w-2xl { max-width: 42rem; }
  .lg\:max-w-3xl { max-width: 48rem; }
  .lg\:max-w-\[38rem\] { max-width: 38rem; }
  .lg\:max-w-\[796px\] { max-width: 796px; }
  .lg\:max-w-\[896px\] { max-width: 896px; }
  .lg\:max-w-none { max-width: none; }
  .lg\:max-w-sm { max-width: 24rem; }
  .lg\:-translate-x-full { --tw-translate-x: -100%; }
  .lg\:-translate-x-full, .lg\:-translate-y-1\/2 { transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(va=
r(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(va=
r(--tw-scale-y)); }
  .lg\:-translate-y-1\/2 { --tw-translate-y: -50%; }
  .lg\:translate-x-full { --tw-translate-x: 100%; }
  .lg\:translate-x-full, .lg\:translate-y-0 { transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--t=
w-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--t=
w-scale-y)); }
  .lg\:translate-y-0 { --tw-translate-y: 0px; }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-\[60\%_40\%\] { grid-template-columns: 60% 40%; }
  .lg\:flex-row { flex-direction: row; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-1 { gap: 0.25rem; }
  .lg\:gap-3 { gap: 0.75rem; }
  .lg\:self-center { align-self: center; }
  .lg\:rounded-lg { border-radius: 0.5rem; }
  .lg\:rounded-none { border-radius: 0px; }
  .lg\:border { border-width: 1px; }
  .lg\:border-0 { border-width: 0px; }
  .lg\:p-0 { padding: 0px; }
  .lg\:p-6 { padding: 1.5rem; }
  .lg\:px-0 { padding-left: 0px; padding-right: 0px; }
  .lg\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .lg\:px-14 { padding-left: 3.5rem; padding-right: 3.5rem; }
  .lg\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }
  .lg\:pl-2 { padding-left: 0.5rem; }
  .lg\:pl-8 { padding-left: 2rem; }
  .lg\:pr-10 { padding-right: 2.5rem; }
  .lg\:pt-32 { padding-top: 8rem; }
  .lg\:text-left { text-align: left; }
  .lg\:text-\[22px\] { font-size: 22px; }
  .gizmo .gizmo\:lg\:flex { display: flex; }
  .gizmo .gizmo\:lg\:max-w-\[40rem\] { max-width: 40rem; }
  .gizmo .gizmo\:lg\:justify-start { justify-content: flex-start; }
  .gizmo .gizmo\:lg\:px-1 { padding-left: 0.25rem; padding-right: 0.25rem; =
}
}

@media (min-width: 1280px) {
  .xl\:w-1\/4 { width: 25%; }
  .xl\:w-\[1024px\] { width: 1024px; }
  .xl\:w-\[350px\] { width: 350px; }
  .xl\:min-w-\[1024px\] { min-width: 1024px; }
  .xl\:max-w-3xl { max-width: 48rem; }
  .xl\:max-w-4xl { max-width: 56rem; }
  .xl\:max-w-6xl { max-width: 72rem; }
  .xl\:max-w-xl { max-width: 36rem; }
  .xl\:max-w-xs { max-width: 20rem; }
  .xl\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .gizmo .gizmo\:xl\:max-w-\[48rem\] { max-width: 48rem; }
  .gizmo .gizmo\:xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; =
}
}

@media (min-width: 1536px) {
  .\32 xl\:w-\[400px\] { width: 400px; }
}

.gizmo .gizmo\:\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy[\=
:has\(textarea\:focus\)] { border-color: var(--border-xheavy); }

.gizmo .gizmo\:\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy:h=
as(textarea:focus) { border-color: var(--border-xheavy); }

.gizmo .gizmo\:\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_2px_6px_rgba\(0\,=
0\,0\,\.05\)\][\:has\(textarea\:focus\)] { --tw-shadow: 0 2px 6px rgba(0,0,=
0,.05); --tw-shadow-colored: 0 2px 6px var(--tw-shadow-color); box-shadow: =
var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 trans=
parent),var(--tw-shadow); }

.gizmo .gizmo\:\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_2px_6px_rgba\(0\,=
0\,0\,\.05\)\]:has(textarea:focus) { --tw-shadow: 0 2px 6px rgba(0,0,0,.05)=
; --tw-shadow-colored: 0 2px 6px var(--tw-shadow-color); box-shadow: var(--=
tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent=
),var(--tw-shadow); }

.text-message + .\[\.text-message\+\&\]\:mt-5 { margin-top: 1.25rem; }

tr:last-child .\[tr\:last-child_\&\]\:border-b-0 { border-bottom-width: 0px=
; }

tr[data-disabled=3D"true"] .\[tr\[data-disabled\=3Dtrue\]_\&\]\:opacity-50 =
{ opacity: 0.5; }

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_AMS-Regular.a7=
9f1c31.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Caligr=
aphic-Bold.ec17d132.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Caligr=
aphic-Regular.55fac258.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Fraktur-Bo=
ld.d42a5579.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Fraktur-Re=
gular.d3c882a6.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Bold.c3f=
b5ac2.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-BoldItal=
ic.6f2bb1df.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Italic.8=
916142b.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Regular.=
0462f03b.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Math-BoldItal=
ic.572d331f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Math-Italic.f=
28c23ac.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Bold.8c5b5494.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Italic.3b1e59b3.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Regular.ba21ed5f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Script-Regu=
lar.03e9641d.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size1-Regula=
r.eae34984.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size2-Regula=
r.5916a24f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size3-Regula=
r.b4230e7e.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size4-Regula=
r.10d95fd3.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Typewri=
ter-Regular.a8709e36.woff2") format("woff2"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.0"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { left: 0px; overflow: hidden; position: absolute; w=
idth: 50.2%; }

.katex .halfarrow-right { overflow: hidden; position: absolute; right: 0px;=
 width: 50.2%; }

.katex .brace-left { left: 0px; overflow: hidden; position: absolute; width=
: 25.1%; }

.katex .brace-center { left: 25%; overflow: hidden; position: absolute; wid=
th: 50%; }

.katex .brace-right { overflow: hidden; position: absolute; right: 0px; wid=
th: 25.1%; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-right: 0.049em solid; border-top: 0.049em solid; box-=
sizing: border-box; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; right: c=
alc(50% + 0.3em); text-align: left; }

.katex .cd-label-right { display: inline-block; left: calc(50% + 0.3em); po=
sition: absolute; text-align: right; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { padding-left: 2em; text-align: left; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

code, pre { font-family: "S=C3=B6hne Mono", Monaco, "Andale Mono", "Ubuntu =
Mono", monospace !important; }

code[class=3D"language-plaintext"] { white-space: pre-line; }

code.hljs, code[class*=3D"language-"], pre[class*=3D"language-"] { overflow=
-wrap: normal; background: none; color: rgb(255, 255, 255); hyphens: none; =
line-height: 1.5; tab-size: 4; text-align: left; white-space: pre; word-bre=
ak: normal; word-spacing: normal; }

pre[class*=3D"language-"] { border-radius: 0.3em; overflow: auto; }

:not(pre) > code.hljs, :not(pre) > code[class*=3D"language-"] { border-radi=
us: 0.3em; padding: 0.1em; white-space: normal; }

.hljs-comment { color: rgba(255, 255, 255, 0.5); }

.hljs-meta { color: rgba(255, 255, 255, 0.6); }

.hljs-built_in, .hljs-class .hljs-title { color: rgb(233, 149, 12); }

.hljs-doctag, .hljs-formula, .hljs-keyword, .hljs-literal { color: rgb(46, =
149, 211); }

.hljs-addition, .hljs-attribute, .hljs-meta-string, .hljs-regexp, .hljs-str=
ing { color: rgb(0, 166, 125); }

.hljs-attr, .hljs-number, .hljs-selector-attr, .hljs-selector-class, .hljs-=
selector-pseudo, .hljs-template-variable, .hljs-type, .hljs-variable { colo=
r: rgb(223, 48, 121); }

.hljs-bullet, .hljs-link, .hljs-selector-id, .hljs-symbol, .hljs-title { co=
lor: rgb(242, 44, 61); }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(16=
9, 174, 193); }

.token.punctuation { color: rgb(254, 254, 254); }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag=
 { color: rgb(255, 160, 122); }

.token.boolean, .token.number { color: rgb(0, 224, 224); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(171, 227, 56); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url, .token.variable { color: rgb(0, 224, 224); }

.token.atrule, .token.attr-value, .token.function { color: gold; }

.token.keyword { color: rgb(0, 224, 224); }

.token.important, .token.regex { color: gold; }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@media screen and (-ms-high-contrast:active) {
  code[class*=3D"language-"], pre[class*=3D"language-"] { background: windo=
w; color: windowtext; }
  :not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backg=
round: window; }
  .token.important { background: highlight; color: window; font-weight: 400=
; }
  .token.atrule, .token.attr-value, .token.function, .token.keyword, .token=
.operator, .token.selector { font-weight: 700; }
  .token.attr-value, .token.comment, .token.doctype, .token.function, .toke=
n.keyword, .token.operator, .token.property, .token.string { color: highlig=
ht; }
  .token.attr-value, .token.url { font-weight: 400; }
}

.PopoverContent { z-index: 1000; }

.react-select-container input:focus { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width))=
 var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow,0 0 transparent); }

.react-select-container .react-select__control { --tw-border-opacity: 1; al=
ign-items: flex-start; border-color: rgba(236,236,241,var(--tw-border-opaci=
ty)); border-radius: 0.5rem; font-size: 0.875rem; height: 192px; line-heigh=
t: 1.25rem; min-height: 192px; overflow: auto; padding: 0.5rem; }

.react-select-container .react-select__control:hover { --tw-border-opacity:=
 1; border-color: rgba(217,217,227,var(--tw-border-opacity)); }

.dark .react-select-container .react-select__control { --tw-bg-opacity: 1; =
background-color: rgba(32,33,35,var(--tw-bg-opacity)); border-color: rgba(2=
55, 255, 255, 0.1); }

:is(.dark .react-select-container .react-select__control):hover { border-co=
lor: rgba(255, 255, 255, 0.2); }

.dark .react-select-container.react-select--invalid .react-select__control,=
 .react-select-container.react-select--invalid .react-select__control { --t=
w-border-opacity: 1; border-color: rgba(239,68,68,var(--tw-border-opacity))=
; }

.react-select-container .react-select__input-container, .react-select-conta=
iner .react-select__placeholder { padding-left: 0.5rem; padding-right: 0.5r=
em; }

.dark .react-select-container .react-select__input-container { --tw-text-op=
acity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.react-select-container .react-select__input { height: 2rem; }

.react-select-container .react-select__control--is-focused { --tw-ring-offs=
et-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-=
ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(-=
-tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-off=
set-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); --tw-bo=
rder-opacity: 1 !important; border-color: rgba(217,217,227,var(--tw-border-=
opacity)) !important; }

.dark .react-select-container .react-select__control--is-focused { border-c=
olor: rgba(255, 255, 255, 0.2) !important; }

.react-select-container .react-select__value-container { padding: 0px; }

.react-select-container .react-select__indicators:empty { display: none; }

.react-select-container .react-select__multi-value { background-color: tran=
sparent; margin: 0px; }

.react-select-container .react-select__multi-value__label { padding: 0px; }

#intercom-container { display: none; }
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://lh3.googleusercontent.com/a/AEdFTp6jqNjdVSKGY570YsX38W1NzJzFewCUbv1GoXYNrg=s96-c

/9j/4AAQSkZJRgABAQAAAQABAAD/4QAqRXhpZgAASUkqAAgAAAABADEBAgAHAAAAGgAAAAAAAABH
b29nbGUAAP/bAIQAAwICCQ0OCwsNCgsPCgoKCAgICwoICgoKCggICgoKCgoNDQoKCAoKCgoICAoI
CgoNCggKCgoKCA0NCg0NCgoKCAEDBAQGBQYKBgYKDQ0IDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N/8AAEQgAYABgAwERAAIRAQMRAf/EAB0AAAICAwEB
AQAAAAAAAAAAAAQFAwYAAgcIAQn/xAA1EAABAgMFBgUDAwUBAAAAAAABAhEABCEDBTFB8BJRYXGB
kQahscHREyLxMkLhFFJiY3IV/8QAGAEAAwEBAAAAAAAAAAAAAAAAAAECAwT/xAAbEQEBAQEBAQEB
AAAAAAAAAAAAARECIRIxA//aAAwDAQACEQMRAD8A/NKcvAqWTESZHT31pzLzZx6CJvKJVluHxCQR
WIvLSOoXbfJI/VCFLr1vFQq9OcVGdpIbwJq5IyrWNEN0+IlYFPWLINb1wDc4nBrVMooZV9RE2tp6
stwFKg1Qc6nvjClLrx0LwysoocDgawVz0VN26toO7FmPuNUi+WPTxLIIOMW6bTxNpg/QQgL+s3zE
VvzVu8PX7QYvGSje8ZwkVeKkZWK+LzY60I0Qb3beAOddayhwrFjlLueoBJ3v50b1MNNQXpJWqC6S
oAVL4PrjEdNOKMui9UqxA2h+4M+u0YNv1arC9Ff3AjiGi5WF5G/+wCMM3apr6ehbKNIzvLylJSVI
rWny+waGKtHgw4s/hO2S8Z9No6N9FKkwpUdKVfV3qBoDyGjGus21x3ZbE0R3LCFKuOhXDZWiP1Wi
AMSB9x5U+YX1EXk+t75QaFVRgwSB6kwr0XyVLkiT9oBHIjzjM5cfZKUWglwWzDOPMCHivpNaStXA
IObUHWHBK8+WFk/vFKrWas4NMMmwPwIPo8EypUC8TaHQvDF+EsDEnY6DLJsmdh1rrzhCIJi8bPDL
clhDBLP3lY0GwX3A/mKkpXqD7llE4nYQP8lOo9HT7xXyzvUW27LGxBDWjnglRB6gAeZgxnqyISFe
lBExnbjaauBk06w8KdPINjEuu+tbRIL8xAaWRSN0C4NQgRNOmtgya5DdrhDhDUeIDl+IqcpR2l7n
+2r5OG48Y0+UXoVc8gVFztkk4IAHmf55RcjC10q6LgUlms02YzKj9RZ6qw6JHOBH0s0v9MCq3P8A
kdh+QAfziabeymdygBlX8xGKbTt/gBtsqisRjyiZg8InHVPA6V61rhEU4Ll7SHrQVYWkHg1L/U74
qItb2FhxZuuvxFRnab3Zd3+4DmkmKQu10XfZsxmbWuP00bL9g8Uzo8qs0PsptF8bRfmzk+ULo5Kw
Xojcx3O+uEZtMM7tvYM+yQWpUY9X7QFUqpUqxGy7E5O2XIw4l5ymFcITofUoHWJwPqTw5QsK3BVi
e0FmK1NaIioz0bLIBxwiip3L2hSKbTcEgxSbEst4sUKFSuYELRgxfioZ7Z5n44wtXOR0lfSM0kbi
5gKjpTx0kOlVlhUKBx3ZYwIWAeLLNSR9igRg6T3ypnSKS4fPXbs0zx5Pl2rGUrpsLhYmHbifxOUd
84NWxMuesNKawG+A5yMkppjXDdDifyrVJhJFOoJpBqv1P/SpVQgcg0ASI8Ltko5s2mgTTKyuc4hA
P/RbWGEJCS2sE0BsEsCxP1CnZOcXEY2sb7tUfb9308nIWKcWeHoUa9pX7ufbGOV1WlNrLtlr8RWs
7Q2xCXEkssjKmtdouU8ZaM7tTWuUPT1k1YHJ2hyps0RLWymGPGApMM0W+DEvi75wwdSXjFaSApDj
eMW47/KDTsWyXmELFNpzxw9/5hMgcxNKqknIiv7hu5jLPnDhUvlbVVQ52RVyctxyMUilF7S+1Tm+
ukc2umwrt0sMPP3/AC0MTkumbRO6nHp+M4Ay2ZgQd3rAB9nIv1gOCFyVMO3WAtwstJRgY0iv1tIo
2s6jKKKxYpZILAkDnR+4x4RJHomdneWGIYNr4rFCxHNTwV+0l6Y0510IGd8CWEisqSMiQaCjfPCH
GdZeMlsqricd2viMK6ZdKp2W7DDXmIkyGbkt3Bta84cS3RYAJAOjXWqXAschYfb2Y86+/lB0i6c2
FyEhxiBXNx8w5+HhdN3KTQDX8fMPlcV6buxSVVSzlgcB3yY1iyvWNF3moUUkvv4DWI7QYzlXHw6U
KZzjQvUMcNViWlviwKutCBtMSMClt8WxtLEeJQCwQQn9v255w0VP44u07YYHPzNNc45+/Kr+fXiv
bCq9vb1wjNvsL7W7883YxUUjm5cBsv0kbiDp4rUWt7smi4D04cHHKEnXSbqstlL5A67PANZPLRQt
Q116RpGkoGdsUkU2VcMyN3xDT2q00mxZ67LsUqFQrgcuUKaiUru1ewo1wYp3kHCh4itXGPCKxNq8
3R4wSobJfaFFAj2gZl18WJUpklgwJfDW6KD/2Q==

------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/html
Content-ID: <frame-D5F8728EDA8CB8972EE341E8192E3975@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU----
Content-Type: text/html
Content-ID: <frame-D5C3330E163C4A0397919E9F1F6AE400@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html lang=3D"en"><head><meta http-equiv=3D"Content-Type" content=3D"text/h=
tml; charset=3DUTF-8">
       =20
      </head>
      <body>
     =20
    </body></html>
------MultipartBoundary--TAzenTIRBJBPgYdBPMmkKWMwuKZ9PuP5AC6H5YpmhU------
