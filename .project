# Prompt the user for the directory path
$directoryPath = Read-Host -Prompt "Enter the directory path"

# Check if the directory exists
if (-not (Test-Path -Path $directoryPath -PathType Container)) {
    Write-Host "Error: The specified directory does not exist."
    exit
}

# Create a timestamp for the CSV file name
$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
$csvPath = "DirectoryFileInfo_$timestamp.csv"

# Create an array to store the results
$results = @()

# Get all files in the directory
$files = Get-ChildItem -Path $directoryPath -File

# Count the number of files
$fileCount = $files.Count

# Log the number of files
$results += [PSCustomObject]@{
    "Information" = "Number of files in the directory"
    "Value" = $fileCount
}

# Log information for each file
foreach ($file in $files) {
    $fileName = $file.Name
    $fileSize = $file.Length
    $fileSizeFormatted = "{0:N2}" -f ($fileSize / 1MB)
    
    $results += [PSCustomObject]@{
        "Information" = "File"
        "Value" = "$fileName (Size: $fileSizeFormatted MB)"
    }
}

# Calculate and log total size of all files
$totalSize = ($files | Measure-Object -Property Length -Sum).Sum
$totalSizeFormatted = "{0:N2}" -f ($totalSize / 1MB)
$results += [PSCustomObject]@{
    "Information" = "Total size of all files"
    "Value" = "$totalSizeFormatted MB"
}

# Export results to CSV
$results | Export-Csv -Path $csvPath -NoTypeInformation

# Display results on console
$results | ForEach-Object {
    Write-Host "$($_.Information): $($_.Value)"
}

Write-Host "`nResults have been logged to $csvPath"
