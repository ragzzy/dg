import streamlit as st
import sqlite3

# Function to initialize the database
def initialize_db():
    conn = sqlite3.connect('certifications.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS employees (
                    id INTEGER PRIMARY KEY,
                    name TEXT NOT NULL
                 )''')

    c.execute('''CREATE TABLE IF NOT EXISTS certifications (
                    id INTEGER PRIMARY KEY,
                    employee_id INTEGER,
                    certification_name TEXT NOT NULL,
                    date_obtained TEXT,
                    FOREIGN KEY (employee_id) REFERENCES employees(id)
                 )''')

    conn.commit()
    conn.close()

# Function to add employee
def add_employee(name):
    conn = sqlite3.connect('certifications.db')
    c = conn.cursor()
    c.execute("INSERT INTO employees (name) VALUES (?)", (name,))
    conn.commit()
    conn.close()

# Function to add certification
def add_certification(employee_id, certification_name, date_obtained):
    conn = sqlite3.connect('certifications.db')
    c = conn.cursor()
    c.execute("INSERT INTO certifications (employee_id, certification_name, date_obtained) VALUES (?, ?, ?)",
              (employee_id, certification_name, date_obtained))
    conn.commit()
    conn.close()

# Function to view certifications
def view_certifications(employee_id):
    conn = sqlite3.connect('certifications.db')
    c = conn.cursor()
    c.execute("SELECT * FROM certifications WHERE employee_id=?", (employee_id,))
    certifications = c.fetchall()
    conn.close()
    return certifications

# Main function to run the Streamlit app
def main():
    st.title("Employee Certifications Tracker")

    initialize_db()

    menu = st.sidebar.selectbox("Menu", ["Home", "Add Employee", "Add Certification", "View Certifications"])

    if menu == "Home":
        st.write("Welcome to the Employee Certifications Tracker. Use the sidebar to navigate.")

    elif menu == "Add Employee":
        st.subheader("Add Employee")
        name = st.text_input("Enter employee name:")
        if st.button("Add"):
            if name:
                add_employee(name)
                st.success("Employee added successfully!")
            else:
                st.warning("Please enter a name for the employee.")

    elif menu == "Add Certification":
        st.subheader("Add Certification")
        employee_id = st.text_input("Enter employee ID:")
        certification_name = st.text_input("Enter certification name:")
        date_obtained = st.text_input("Enter date obtained (YYYY-MM-DD):")
        if st.button("Add"):
            if employee_id and certification_name and date_obtained:
                add_certification(employee_id, certification_name, date_obtained)
                st.success("Certification added successfully!")
            else:
                st.warning("Please fill in all fields.")

    elif menu == "View Certifications":
        st.subheader("View Certifications")
        employee_id = st.text_input("Enter employee ID:")
        if st.button("View"):
            if employee_id:
                certifications = view_certifications(employee_id)
                if certifications:
                    for certification in certifications:
                        st.write(certification)
                else:
                    st.warning("No certifications found for this employee.")
            else:
                st.warning("Please enter an employee ID.")

if __name__ == "__main__":
    main()
