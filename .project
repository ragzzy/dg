import streamlit as st
from datetime import datetime

# Create a data structure to store employee information
employees = []

# Streamlit App
def main():
    st.title("Employee Certification Management")

    menu = ["Home", "Add Certification", "Remove Certification"]
    choice = st.sidebar.selectbox("Menu", menu)

    if choice == "Home":
        show_home()
    elif choice == "Add Certification":
        add_certification()
    elif choice == "Remove Certification":
        remove_certification()

# Function to display the home page
def show_home():
    st.header("Employee List with Certifications")
    
    if not employees:
        st.info("No employees found. Add an employee and certifications.")
    else:
        for employee in employees:
            st.write(f"**{employee['name']}**")
            for certification in employee['certifications']:
                st.write(f"- {certification['name']}: Expires on {certification['expiry_date']}")

# Function to add certification for an employee
def add_certification():
    st.header("Add Certification")

    employee_name = st.text_input("Enter employee name:")
    certification_name = st.text_input("Enter certification name:")
    expiry_date = st.date_input("Certification Expiry Date:", datetime.today())

    if st.button("Add Certification"):
        employee = find_employee(employee_name)

        if employee is not None:
            certification = {
                "name": certification_name,
                "expiry_date": expiry_date.strftime("%Y-%m-%d")
            }
            employee['certifications'].append(certification)
            st.success(f"Certification added for {employee_name}")
        else:
            st.warning(f"Employee {employee_name} not found. Add the employee first.")

# Function to remove certification for an employee
def remove_certification():
    st.header("Remove Certification")

    employee_name = st.text_input("Enter employee name:")
    certification_name = st.text_input("Enter certification name:")

    if st.button("Remove Certification"):
        employee = find_employee(employee_name)

        if employee is not None:
            certifications = employee['certifications']
            certifications = [cert for cert in certifications if cert['name'] != certification_name]
            employee['certifications'] = certifications
            st.success(f"Certification removed for {employee_name}")
        else:
            st.warning(f"Employee {employee_name} not found.")

# Helper function to find an employee by name
def find_employee(name):
    for employee in employees:
        if employee['name'].lower() == name.lower():
            return employee
    return None

if __name__ == "__main__":
    main()
